{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"module",
				"module_function"
			],
			[
				"capit",
				"capitalTriggersTemp"
			],
			[
				"capitalTrigger",
				"capitalTriggersTemp"
			],
			[
				"pript_",
				"prior_script_triggers_temp"
			],
			[
				"sboun",
				"sbounty_debug"
			],
			[
				"sbount",
				"sbounty_debug"
			],
			[
				"flatten_",
				"flatten_nested_hash"
			],
			[
				"monito",
				"monitor_send_email"
			],
			[
				"room",
				"room_destination"
			],
			[
				"timet",
				"timeto_destination"
			],
			[
				"Ma",
				"Maaghara_room_title"
			],
			[
				"Maaghara",
				"Maaghara_proc_find"
			],
			[
				"new",
				"new"
			],
			[
				"open_",
				"open_satchel"
			],
			[
				"switch_hunting",
				"switch_hunting_debug"
			],
			[
				"modu",
				"module_function"
			],
			[
				"monitor",
				"monitor_debug"
			],
			[
				"moni",
				"monitor_debug"
			],
			[
				"vaa",
				"vaalin_error"
			],
			[
				"els",
				"elsif	elsif ..."
			],
			[
				"start",
				"start_script"
			],
			[
				"can",
				"can_turn_in"
			],
			[
				"sbou",
				"sbounty_debug"
			],
			[
				"sbounty",
				"sbounty_debug"
			],
			[
				"is_bo",
				"is_bounty_call"
			]
		]
	},
	"buffers":
	[
		{
			"file": "/E/Google Drive/Lich/scripts/common.lic",
			"settings":
			{
				"buffer_size": 29750,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/drDriver.lic",
			"settings":
			{
				"buffer_size": 2649,
				"line_ending": "Windows"
			}
		},
		{
			"contents": " def monitor_uac(currentScript)\n    $current_script_name = currentScript\n    uac_line_checks = <<-eos\n    while line = get\n      break unless running?($current_script_name)\n      if line =~ /^You have (decent|good|excellent) positioning/\n        $position = $1\n        if $position == 'excellent'\n          if $champion\n            ($uac = 'punch'; $aim_location = '') if Char.name == 'Atilio'\n            ($uac = 'punch'; $aim_location = '') if Char.name == 'Lumino' || Char.name == 'Iloru'  \n          #$position != 'excellent' && (Char.name == 'Lumino' || Char.name == 'Iloru'\n          else\n            ($uac = 'punch'; $aim_location = 'head')\n            #($uac = 'punch'; $aim_location = 'head') if Char.name == 'Lumino' || Char.name == 'Iloru'\n          end\n        else\n          ($uac = 'punch'; $aim_location = '') if Char.name == 'Atilio'\n          ($uac = 'jab'; $aim_location = '') if Char.name == 'Lumino'\n          ($uac = 'jab'; $aim_location = '') if Char.name == 'Iloru'  \n        end\n      end\n      $uac = $1 if line =~ /^  Strike leaves foe vulnerable to a followup (.*) attack/\n      $aim_location = \"right leg\" if line =~ /^The .+ does not have a chest|^You cannot aim that/\n      if line =~ /already missing that|does not have a/\n        $aim_location = 'head' if Char.name == 'Atilio'\n        $aim_location = '' if Char.name == 'Lumino'\n        $aim_location = '' if Char.name == 'Iloru'\n      end\n      $new_vaesp = true if line =~ /^A vaespilon drags/\n      $monsterGone = true if line =~ /A gornar-shackled ogre lumbers in/\n      $pause_combat = true if line =~ /#{$pause_lines}/\n      $pause_combat = false if line =~ /#{$unpause_lines}/\n    end\n    eos",
			"settings":
			{
				"buffer_size": 1682,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/tempDR.lic",
			"settings":
			{
				"buffer_size": 91,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/duskruinArena.lic",
			"settings":
			{
				"buffer_size": 6627,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/transcend.lic",
			"settings":
			{
				"buffer_size": 10281,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/ubermonk.lic",
			"settings":
			{
				"buffer_size": 4013,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/commonFight.lic",
			"settings":
			{
				"buffer_size": 7336,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/10deeds.lic",
			"settings":
			{
				"buffer_size": 1348,
				"line_ending": "Unix"
			}
		},
		{
			"contents": "Searching 319 files for \"thread\"\n\nE:\\Google Drive\\Lich\\scripts\\transcend.lic:\n   14  \n   15  \n   16: Thread.new {\n   17  	while true\n   18  		wait_until{(not Spell[9049].active? and not Spell[9812].active? and not dead? and running?('sbounty')) and percenthealth <= 80 and (!standing? or stunned? or webbed?) and ((GameObj.npcs.any? { |npc| npc.type !~ /passive/ and npc.status !~ /dead/ }) or (GameObj.loot.each { |i| i.noun =~ /cloud/}))}\n   ..\n   24  }\n   25  \n   26: Thread.new {\n   27  	while true\n   28  		wait_until{(percenthealth <= 50 and not dead? and not stunned? and running?('sbounty')) }\n   ..\n   34  }\n   35  \n   36: Thread.new {\n   37    while true\n   38      wait_until { !calmed? }\n   ..\n   45  }\n   46  \n   47: Thread.new {\n   48    while true\n   49      wait_until{(percenthealth < 65) }\n   ..\n   56  }\n   57  \n   58: Thread.new {\n   59    while true\n   60      wait_until{ dead? }\n   ..\n   73  }\n   74  \n   75: Thread.new {\n   76  \n   77    def cast_now(cast_spells)\n   ..\n   82      ubermonkPaused = GSC.pauseScript 'ubermonk'\n   83  \n   84:     # Uses an exec thread to cast the spell so dothistimeout does not\n   85      # interefere with matches from method .cast\n   86      cast_spells.each {|do_spell|\n\nE:\\Google Drive\\Lich\\scripts\\alastir_merchant.lic:\n    6  \n    7  while true\n    8:   ala_msg = \"DUSKRUIN REMINDER: #{verb_list[$verb_count]} ALERT: Alastir/Sashafierce/Bertoch/Spoilz will do ANYTHING to make a dollar. Proof here! http://forum.gsplayers.com/showthread.php?101988-Scam-Alert-SashaFierce-Alastir.\"\n    9    ala_msg1 = \"Do not sell ANYTHING without doing your homework! BE SAFE!\"\n   10    LNet.send_message(attr={'type'=>'channel', 'channel'=>'merchant'}, ala_msg)\n\nE:\\Google Drive\\Lich\\scripts\\alchemy.lic:\n 1588  				end\n 1589  				dothis 'alchemy infuse', /^You focus/\n 1590: 				infuse_result = waitfor 'The translucent thread fades away.  You feel slightly drained from the ordeal.', 'Your concentration lapses and the translucent thread connecting you to the solution fades away.'\n 1591  				waitrt?\n 1592: 				break if infuse_result == 'The translucent thread fades away.  You feel slightly drained from the ordeal.'\n 1593  			}\n 1594  		elsif step == 'channel'\n\nE:\\Google Drive\\Lich\\scripts\\alias.lic:\n   86  				$alias_setup_window.present # fixme: show window\n   87  			else\n   88: 				Thread.new {\n   89  					done = false\n   90  					Gtk.queue {\n   ..\n  150  										delete_button.sensitive = true\n  151  										add_new_char_row.call\n  152: 										Thread.new {\n  153  											sleep 0.05\n  154  											inc = (char_sw.vadjustment.upper - char_sw.vadjustment.value - char_sw.vadjustment.page_size) / 10.0\n  ...\n  242  										delete_button.sensitive = true\n  243  										add_new_global_row.call\n  244: 										Thread.new {\n  245  											sleep 0.05\n  246  											inc = (global_sw.vadjustment.upper - global_sw.vadjustment.value - global_sw.vadjustment.page_size) / 10.0\n\nE:\\Google Drive\\Lich\\scripts\\arenatimer.lic:\n   10  	timerested = Time.now - CharSettings['timequit']\n   11  	#respond \"here\"\n   12: 	Thread.new{loop {CharSettings['timequit'] = Time.now; pause 1}}\n   13  end\n   14  \n\nE:\\Google Drive\\Lich\\scripts\\auto-level.lic:\n 1535  \n 1536  waiting_for_healing = proc{\n 1537: 	Thread.new{\n 1538  		sleep 63\n 1539  		put \"look\"\n ....\n 1588  \n 1589  waiting_for_undisease_or_unpoison = proc{\n 1590: 	Thread.new{\n 1591  		sleep 17\n 1592  		put \"look\"\n\nE:\\Google Drive\\Lich\\scripts\\betazzherb.lic:\n  288      echo 'Although right now, my matching code is probably messed up.'\n  289      echo 'Reach out and let me know what your current bounty is, word-for-word.'\n  290:     echo 'Please use [code] tags if you paste to the thread.'\n  291      echo 'You can now paste in another character\\' bounty.'\n  292      echo 'Make sure you paste the message from the BOUNTY verb.'\n\nE:\\Google Drive\\Lich\\scripts\\bigbounty.lic:\n 1479      def dead_man_switch()\n 1480          if @DEAD_MAN_SWITCH\n 1481:             Thread.new {\n 1482                  while( running?('bigbounty') )\n 1483                      if( dead? ||  percenthealth < 40 )\n ....\n 1514              );\n 1515          else\n 1516:             Thread.new {\n 1517                  loop { Script.self.kill if dead?; sleep 5; }\n 1518              }\n ....\n 1522  \n 1523      def keep_awake()\n 1524:         Thread.new {\n 1525              while( running?('bigbounty') )\n 1526                  sleep 150; put 'look';\n ....\n 2614      DRb.start_service( nil, Group.new )\n 2615      uri = DRb.uri\n 2616:     Thread.new { DRb.thread.join }\n 2617  \n 2618      # launch DRb client\n\nE:\\Google Drive\\Lich\\scripts\\bigshot.lic:\n  850      def dead_man_switch()\n  851          if @DEAD_MAN_SWITCH\n  852:             Thread.new {\n  853                  while( running?($current_script_name) )\n  854                      if( dead? ||  percenthealth < 40 )\n  ...\n  877              );\n  878          else\n  879:             Thread.new {\n  880                  loop { Script.self.kill if dead?; sleep 5; }\n  881              }\n  ...\n  884   \n  885      def keep_awake()\n  886:         Thread.new {\n  887              while( running?($current_script_name) )\n  888                  sleep 150; put 'look';\n  ...\n 1905      DRb.start_service( nil, Group.new )\n 1906      uri = DRb.uri\n 1907:     Thread.new { DRb.thread.join }\n 1908   \n 1909      # launch DRb client\n\nE:\\Google Drive\\Lich\\scripts\\bigshot1.lic:\n  686      def dead_man_switch()\n  687          if @DEAD_MAN_SWITCH\n  688:             Thread.new {\n  689                  while( running?('bigshot') )\n  690                      if( dead? ||  percenthealth < 40 )\n  ...\n  713              );\n  714          else\n  715:             Thread.new {\n  716                  loop { Script.self.kill if dead?; sleep 5; }\n  717              }\n  ...\n  720  \n  721      def keep_awake()\n  722:         Thread.new {\n  723              while( running?('bigshot') )\n  724                  sleep 150; put 'look';\n  ...\n 1679      DRb.start_service( nil, Group.new )\n 1680      uri = DRb.uri\n 1681:     Thread.new { DRb.thread.join }\n 1682  \n 1683      # launch DRb client\n\nE:\\Google Drive\\Lich\\scripts\\bigshot_backup 3.11.2017.lic:\n  836      def dead_man_switch()\n  837          if @DEAD_MAN_SWITCH\n  838:             Thread.new {\n  839                  while( running?($current_script_name) )\n  840                      if( dead? ||  percenthealth < 40 )\n  ...\n  863              );\n  864          else\n  865:             Thread.new {\n  866                  loop { Script.self.kill if dead?; sleep 5; }\n  867              }\n  ...\n  870   \n  871      def keep_awake()\n  872:         Thread.new {\n  873              while( running?($current_script_name) )\n  874                  sleep 150; put 'look';\n  ...\n 1899      DRb.start_service( nil, Group.new )\n 1900      uri = DRb.uri\n 1901:     Thread.new { DRb.thread.join }\n 1902   \n 1903      # launch DRb client\n\nE:\\Google Drive\\Lich\\scripts\\bigshotRift.lic:\n  847      def dead_man_switch()\n  848          if @DEAD_MAN_SWITCH\n  849:             Thread.new {\n  850                  while( running?($current_script_name) )\n  851                      if( dead? ||  percenthealth < 40 )\n  ...\n  874              );\n  875          else\n  876:             Thread.new {\n  877                  loop { Script.self.kill if dead?; sleep 5; }\n  878              }\n  ...\n  881   \n  882      def keep_awake()\n  883:         Thread.new {\n  884              while( running?($current_script_name) )\n  885                  sleep 150; put 'look';\n  ...\n 1902      DRb.start_service( nil, Group.new )\n 1903      uri = DRb.uri\n 1904:     Thread.new { DRb.thread.join }\n 1905   \n 1906      # launch DRb client\n ....\n 2834      def dead_man_switch()\n 2835          if @DEAD_MAN_SWITCH\n 2836:             Thread.new {\n 2837                  while( running?($current_script_name) )\n 2838                      if( dead? ||  percenthealth < 40 )\n ....\n 2861              );\n 2862          else\n 2863:             Thread.new {\n 2864                  loop { Script.self.kill if dead?; sleep 5; }\n 2865              }\n ....\n 2868   \n 2869      def keep_awake()\n 2870:         Thread.new {\n 2871              while( running?($current_script_name) )\n 2872                  sleep 150; put 'look';\n ....\n 3889      DRb.start_service( nil, Group.new )\n 3890      uri = DRb.uri\n 3891:     Thread.new { DRb.thread.join }\n 3892   \n 3893      # launch DRb client\n\nE:\\Google Drive\\Lich\\scripts\\calcredux.lic:\n 1204  			begin\n 1205  				if $1.nil?\n 1206: 					save_thread.wakeup\n 1207  					echo(\"History has been saved\")\n 1208  				else\n\nE:\\Google Drive\\Lich\\scripts\\client.lic:\n   15  \n   16    def listen\n   17:     @response = Thread.new do\n   18        loop {\n   19          msg = @server.gets.chomp\n   ..\n   25    def send\n   26      puts \"Enter the username:\"\n   27:     @request = Thread.new do\n   28        loop {\n   29          msg = $stdin.gets.chomp\n\nE:\\Google Drive\\Lich\\scripts\\disarm-no-more.lic:\n   45  swap_okay = nil\n   46  \n   47: Thread.new {\n   48  	loop{\n   49  		if GameObj.right_hand.id == off_hand && swap_okay\n   ..\n   81  }\n   82  	\n   83: Thread.new {\n   84  	loop{\n   85  		if GameObj.right_hand.id != weapon && lost_weapon_updated == nil && have_weapon\n\nE:\\Google Drive\\Lich\\scripts\\disarm.lic:\n   18  end\n   19  \n   20: Thread.new {\n   21    while true\n   22      GameObj.loot.find {|i| i.name == weapon_long} ? $disarmed = true : $disarmed = false\n\nE:\\Google Drive\\Lich\\scripts\\disarm.rb:\n   11  end\n   12  \n   13: Thread.new {\n   14    while true\n   15      GameObj.loot.find {|i| i.name == \"ora-spiked black paingrip\"} ? $disarmed = true : $disarmed = false\n\nE:\\Google Drive\\Lich\\scripts\\drafix scripts\\703.lic:\n   49  }\n   50  \n   51: Thread.new {\n   52  	status_tags\n   53  	while line = get\n   ..\n   59  }\n   60  \n   61: Thread.new {\n   62  	loop{\n   63  		sleep 10\n\nE:\\Google Drive\\Lich\\scripts\\drafix scripts\\manatimer.lic:\n   94  \n   95  \n   96: Thread.new {\n   97  	#BEGIN Mana pulse catcher init code\n   98  	mc = [Skills.emc, Skills.smc, Skills.mmc].sort.reverse\n\nE:\\Google Drive\\Lich\\scripts\\ego2.lic:\n  288  	status_tags\n  289  	before_dying { kill_script(#{script.name.inspect}) if running?(#{script.name.inspect}) }\n  290: 	Thread.new { wait_while { running?(#{Script.self.name.inspect}) }; Script.self.kill }\n  291  	while (line = get)\n  292  		if line =~ /<pushStream id='room'/\n  ...\n 1687  end\n 1688  \n 1689: Thread.new { wait_until { dead? }; Script.self.kill }\n 1690  \n 1691  #\n ....\n 1752  end\n 1753  \n 1754: Thread.new {\n 1755  	loop {\n 1756  		wait_while { standing? or stunned? or (checkrt > 0) }\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\scrollsort.cmd:\n   54  matchre Sort.necro (Call from Beyond|Necrotic Reconstruction|Reverse Putrefaction|Quicken the Earth|Blood Burst|Heighten Pain|Siphon Vitality|Visions of Darkness|Petrifying Visions|Eyes of the Blind|Obfuscation|Rite of Contrition|Acid Splash|Vivisection|Viscous Solution|Researcher\\'s Insight|Universal Solvent|Butcher\\'s Eye|Calcified Hide|Philosopher\\'s Preservation|Consume Flesh|Worm\\'s Mist|Kura-Silma|Spiteful Rebirth|Ivory Mask|Devour)\n   55  matchre Sort.ranger (Essence of Yew|Wolf Scent|See the Wind|Cheetah Swiftness|Bear Strength|Grizzly Claws|Sense of the Tiger|Wisdom of the Pack|Claws of the Cougar|Hands of Lirisa|Earth Meld|Blend|Athleticism|Memory of Nature|Compost|Swarm|Harawep\\'s Bonds|Awaken Forest|Branch Break|Eagle\\'s Cry|Devitalize|Curse of the Wilds|Stampede|Carrion Call|Devolve)\n   56: matchre Sort.moonard (Clear Vision|Piercing Gaze|Locate|Distant Gaze|Seer\\'s Sense|Aura Sight|Tenebrous Sense|Calm|Mental Blast|Mind Shout|Sleep|Hypnotize|Telekinetic Throw|Telekinetic Storm|Psychic Shield|Rend|Shear|Thoughtcast|Shadows|Focus Moonbeam|Dazzle|Refractive Field|Steps of Vuan|Burn|Moonblade|Empower Moonblade|Shape Moonblade|Dinazen Olkar|Cage of Light|Shift Moonbeam|Shadowling|Shadow Servant|Partial Displacement|Teleport|Whole Displacement|Moongate|Riftal Summons|Contingency|Starlight Sphere|Invocation of the Spheres|Shadewatch Mirror|Sever Thread|Tangled Fate|Sovereign Destiny|Tezirah\\'s Veil)\n   57  matchre Sort.warmage (Ethereal Shield|Aether Cloak|Ward Break|Substratum|Ethereal Fissure|Elementalism|Arc Light|Tingle|Lightning Bolt|Chain Lightning|Gar Zeng|Grounding Field|Fire Shards|Fire Ball|Dragon\\'s Breath|Mantle of Flame|Fire Rain|Flame Shockwave|Ignite|Mark of Arhat|Frostbite|Ice Patch|Rising Mists|Fortress of Ice|Geyser|Veil of Ice|Frost Scythe|Rimefang|Tremor|Sure Footing|Aegis of Granite|Stone Strike|Anther\\'s Call|Ring of Spears|Magnetic Ballista|Zephyr|Tailwind|Paeldryth\\'s Wrath|Shockwave|Swirling Winds|Vertigo|Air Lash|Thunderclap|Y\\'ntrel Sechra|Air Bubble|Blufmor Garaen)\n   58  matchre Sort.cleric (Protection from Evil|Minor Physical Protection|Shield of Light|Benediction|Major Physical Protection|Ghost Shroud|Halo|Soul Shield|Sanyu Lyba|Rejuvenation|Vigil|Soul Bonding|Auspice|Centering|Soul Attrition|Chill Spirit|Soul Sickness|Eylhaar\\'s Feast|Bitter Feast|Bless|Harm Evil|Phelim\\'s Sanction|Divine Radiance|Harm Horde|Curse of Zachriedek|Hand of Tenemlor|Malediction|Horn of the Black Unicorn|Ring of Blessings|Fists of Faenella|Hydra|Aesrela Everild|Heavenly Fires|Resurrection|Glythtide\\'s Gift|Murrula\\'s Flames|Fire of Ushnish|Sanctify Pattern|Uncurse|Huldah\\'s Pall|Persistence of Mana|Osrel Meraud|Meraud\\'s Cry|Idon\\'s Theft|Spite of Dergati)\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\ways.cmd:\n  313          match toAxis_W the microcosm is to the west.\n  314          match toAxis_NW the microcosm is to the northwest.\n  315:         match error_expanse You cannot sense even a single thread of Lunar energy\n  316          match error_dead You are a ghost!\n  317          put perceive\n  ...\n  439          match fromAxis_W the conduit lies west.\n  440          match fromAxis_NW the conduit lies northwest.\n  441:         match error_expanse You cannot sense even a single thread of Lunar energy\n  442          match error_dead You are a ghost!\n  443          put perceive\n\nE:\\Google Drive\\Lich\\scripts\\fbigshot.lic:\n   56  $bigshot_debug = false\n   57   \n   58: Thread.new {\n   59      while true\n   60          wait_until{(percenthealth < 30) }\n   ..\n  719      def dead_man_switch()\n  720          if @DEAD_MAN_SWITCH\n  721:             Thread.new {\n  722                  while( running?('bigshot') )\n  723                      if( dead? ||  percenthealth < 40 )\n  ...\n  746              );\n  747          else\n  748:             Thread.new {\n  749                  loop { Script.self.kill if dead?; sleep 5; }\n  750              }\n  ...\n  753   \n  754      def keep_awake()\n  755:         Thread.new {\n  756              while( running?('bigshot') )\n  757                  sleep 150; put 'look';\n  ...\n 1734      DRb.start_service( nil, Group.new )\n 1735      uri = DRb.uri\n 1736:     Thread.new { DRb.thread.join }\n 1737   \n 1738      # launch DRb client\n\nE:\\Google Drive\\Lich\\scripts\\glitch.rbw:\n  172        lpStartupInfo = lpStartupInfo.pack('LLLLLLLLLLLLSSLLLL')\n  173        lpProcessInformation = [ 0, 0, 0, 0, ].pack('LLLL')\n  174:       r = Kernel32.CreateProcess(args[:lpApplicationName], lpCommandLine, args[:lpProcessAttributes], args[:lpThreadAttributes], bInheritHandles, args[:dwCreationFlags].to_i, args[:lpEnvironment], args[:lpCurrentDirectory], lpStartupInfo, lpProcessInformation)\n  175        lpProcessInformation = lpProcessInformation.unpack('LLLL')\n  176:       return :return => (r > 0 ? true : false), :hProcess => lpProcessInformation[0], :hThread => lpProcessInformation[1], :dwProcessId => lpProcessInformation[2], :dwThreadId => lpProcessInformation[3]\n  177      end\n  178  #   Win32.CreateProcess(:lpApplicationName => 'Launcher.exe', :lpCommandLine => 'lich2323.sal', :lpCurrentDirectory => 'C:\\\\PROGRA~1\\\\SIMU')\n  ...\n  601  if defined?(Gtk)\n  602    module Gtk\n  603:     # Calling Gtk API in a thread other than the main thread may cause random segfaults\n  604      def Gtk.queue &block\n  605        GLib::Timeout.add(1) {\n  ...\n  617            respond \"error in Gtk.queue: #{$!}\"\n  618            Lich.log \"error in Gtk.queue: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n  619:         rescue ThreadError\n  620            respond \"error in Gtk.queue: #{$!}\"\n  621            Lich.log \"error in Gtk.queue: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n  ...\n 1568                @injuries['nsys']['scar'] = 0\n 1569              else\n 1570:               Thread.new {\n 1571                  wait_while { dead? }\n 1572                  action = proc { |server_string|\n ....\n 2238      }\n 2239    }\n 2240:   Thread.new {\n 2241      loop {\n 2242        sleep 300\n ....\n 2336      nil\n 2337    }\n 2338:   Thread.new {\n 2339      loop {\n 2340        sleep 300\n ....\n 2479      end\n 2480      script_obj.quiet = true if options[:quiet]\n 2481:     new_thread = Thread.new {\n 2482        100.times { break if Script.current == script_obj; sleep 0.01 }\n 2483        if script = Script.current\n 2484          eval('script = Script.current', script_binding, script.name)\n 2485:         Thread.current.priority = 1\n 2486          respond(\"--- Lich: #{script.name} active.\") unless script.quiet\n 2487          if trusted\n ....\n 2505              respond \"--- Lich: error: #{$!}\\n\\t#{$!.backtrace[0..1].join(\"\\n\\t\")}\"\n 2506              Lich.log \"error: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 2507:           rescue ThreadError\n 2508              respond \"--- Lich: error: #{$!}\\n\\t#{$!.backtrace[0..1].join(\"\\n\\t\")}\"\n 2509              Lich.log \"error: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n ....\n 2554              end\n 2555              Lich.log \"error: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 2556:           rescue ThreadError\n 2557              respond \"--- Lich: error: #{$!}\\n\\t#{$!.backtrace[0..1].join(\"\\n\\t\")}\"\n 2558              Lich.log \"error: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n ....\n 2582        end\n 2583      }\n 2584:     script_obj.thread_group.add(new_thread)\n 2585      script_obj\n 2586    }\n ....\n 2661    end\n 2662    def Script.current\n 2663:     if script = @@running.find { |s| s.has_thread?(Thread.current) }\n 2664        sleep 0.2 while script.paused? and not script.ignore_pause\n 2665        script\n ....\n 2734          script.watchfor.each_pair { |trigger,action|\n 2735            if line =~ trigger\n 2736:             new_thread = Thread.new {\n 2737                sleep 0.011 until Script.current\n 2738                begin\n ....\n 2742                end\n 2743              }\n 2744:             script.thread_group.add(new_thread)\n 2745            end\n 2746          }\n ....\n 2900      data = nil\n 2901      @current_label = @label_order[0]\n 2902:     @thread_group = ThreadGroup.new\n 2903      @@running.push(self)\n 2904      return self\n 2905    end\n 2906    def kill\n 2907:     Thread.new {\n 2908        @killer_mutex.synchronize {\n 2909          if @@running.include?(self)\n 2910            begin\n 2911:             @thread_group.list.dup.each { |t|\n 2912:               unless t == Thread.current\n 2913                  t.kill rescue nil\n 2914                end\n 2915              }\n 2916:             @thread_group.add(Thread.current)\n 2917              @die_with.each { |script_name| Script.kill(script_name) }\n 2918              @paused = false\n ....\n 2956      ($SAFE == 0) ? @labels : nil\n 2957    end\n 2958:   def thread_group\n 2959:     ($SAFE == 0) ? @thread_group : nil\n 2960    end\n 2961:   def has_thread?(t)\n 2962:     @thread_group.list.include?(t)\n 2963    end\n 2964    def pause\n ....\n 3069        return false\n 3070      end\n 3071:     new_thread = Thread.new {\n 3072        100.times { break if Script.current == new_script; sleep 0.01 }\n 3073        if script = Script.current\n 3074:         Thread.current.priority = 1\n 3075          respond(\"--- Lich: #{script.name} active.\") unless script.quiet\n 3076          begin\n ....\n 3107            Lich.log \"SecurityError: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 3108            Script.current.kill\n 3109:         rescue ThreadError\n 3110:           respond \"--- ThreadError: #{$!}\"\n 3111            respond $!.backtrace.first\n 3112:           Lich.log \"ThreadError: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 3113            Script.current.kill\n 3114          rescue SystemStackError\n ....\n 3132        end\n 3133      }\n 3134:     new_script.thread_group.add(new_thread)\n 3135      new_script\n 3136    }\n ....\n 3145          return false\n 3146        end\n 3147:       new_thread = Thread.new {\n 3148          100.times { break if Script.current == new_script; sleep 0.01 }\n 3149          if script = Script.current\n 3150:           Thread.current.priority = 1\n 3151            respond(\"--- Lich: #{script.name} active.\") unless script.quiet\n 3152            begin\n ....\n 3189              Lich.log \"SecurityError: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 3190              Script.current.kill\n 3191:           rescue ThreadError\n 3192:             respond \"--- ThreadError: #{$!}\"\n 3193              respond $!.backtrace.first\n 3194:             Lich.log \"ThreadError: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 3195              Script.current.kill\n 3196            rescue SystemStackError\n ....\n 3214          end\n 3215        }\n 3216:       new_script.thread_group.add(new_thread)\n 3217        new_script\n 3218      end\n ....\n 3239      @safe = false\n 3240      @no_echo = false\n 3241:     @thread_group = ThreadGroup.new\n 3242      @unique_buffer = LimitedArray.new\n 3243      @die_with = Array.new\n ....\n 3458      data = nil\n 3459      @current_label = @label_order[0]\n 3460:     @thread_group = ThreadGroup.new\n 3461      @@running.push(self)\n 3462      return self\n ....\n 4574    successre = /#{success.join('|')}/i\n 4575    failurere = /#{failure.join('|')}/i\n 4576:   thr = Thread.current\n 4577  \n 4578:   timethr = Thread.new {\n 4579      timeout -= sleep(\"0.1\".to_f) until timeout <= 0\n 4580      thr.raise(StandardError)\n ....\n 4770        waitrt?\n 4771        put_dir.call\n 4772:     elsif line =~ /^You begin to climb up the silvery thread.* you tumble to the ground/\n 4773        sleep 0.5\n 4774        waitrt?\n ....\n 4897      end\n 4898    end\n 4899:   Thread.new {\n 4900      wait_while { health(value) }\n 4901      block.call\n ....\n 4904  \n 4905  def wait_until(announce=nil)\n 4906:   priosave = Thread.current.priority\n 4907:   Thread.current.priority = 0\n 4908    unless announce.nil? or yield\n 4909      respond(announce)\n ....\n 4912      sleep 0.25\n 4913    end\n 4914:   Thread.current.priority = priosave\n 4915  end\n 4916  \n 4917  def wait_while(announce=nil)\n 4918:   priosave = Thread.current.priority\n 4919:   Thread.current.priority = 0\n 4920    unless announce.nil? or !yield\n 4921      respond(announce)\n ....\n 4924      sleep 0.25\n 4925    end\n 4926:   Thread.current.priority = priosave\n 4927  end\n 4928  \n ....\n 5385  \n 5386  def setpriority(val=nil)\n 5387:   if val.nil? then return Thread.current.priority end\n 5388    if val.to_i > 3\n 5389:     echo(\"You're trying to set a script's priority as being higher than the send/recv threads (this is telling Lich to run the script before it even gets data to give the script, and is useless); the limit is 3\")\n 5390:     return Thread.current.priority\n 5391    else\n 5392:     Thread.current.group.list.each { |thr| thr.priority = val.to_i }\n 5393:     return Thread.current.priority\n 5394    end\n 5395  end\n ....\n 5474    strings = [ label, string ]\n 5475    strings.flatten!\n 5476:   unless script = Script.current then echo(\"An unknown script thread tried to fetch a game line from the queue, but Lich can't process the call without knowing which script is calling! Aborting...\") ; Thread.current.kill ; return false end\n 5477    if strings.empty? then echo(\"Error! 'match' was given no strings to look for!\") ; sleep 1 ; return false end\n 5478    unless strings.length == 2\n ....\n 5493  \n 5494  def matchtimeout(secs, *strings)\n 5495:   unless script = Script.current then echo(\"An unknown script thread tried to fetch a game line from the queue, but Lich can't process the call without knowing which script is calling! Aborting...\") ; Thread.current.kill ; return false end\n 5496    unless (secs.class == Float || secs.class == Fixnum)\n 5497      echo('matchtimeout error! You appear to have given it a string, not a #! Syntax:  matchtimeout(30, \"You stand up\")')\n ....\n 5521  def matchbefore(*strings)\n 5522    strings.flatten!\n 5523:   unless script = Script.current then echo(\"An unknown script thread tried to fetch a game line from the queue, but Lich can't process the call without knowing which script is calling! Aborting...\") ; Thread.current.kill ; return false end\n 5524    if strings.empty? then echo(\"matchbefore without any strings to wait for!\") ; return false end\n 5525    regexpstr = strings.join('|')\n ....\n 5529  def matchafter(*strings)\n 5530    strings.flatten!\n 5531:   unless script = Script.current then echo(\"An unknown script thread tried to fetch a game line from the queue, but Lich can't process the call without knowing which script is calling! Aborting...\") ; Thread.current.kill ; return false end\n 5532    if strings.empty? then echo(\"matchafter without any strings to wait for!\") ; return end\n 5533    regexpstr = strings.join('|')\n ....\n 5537  def matchboth(*strings)\n 5538    strings.flatten!\n 5539:   unless script = Script.current then echo(\"An unknown script thread tried to fetch a game line from the queue, but Lich can't process the call without knowing which script is calling! Aborting...\") ; Thread.current.kill ; return false end\n 5540    if strings.empty? then echo(\"matchboth without any strings to wait for!\") ; return end\n 5541    regexpstr = strings.join('|')\n ....\n 5713  def matchfindexact(*strings)\n 5714    strings.flatten!\n 5715:     unless script = Script.current then echo(\"An unknown script thread tried to fetch a game line from the queue, but Lich can't process the call without knowing which script is calling! Aborting...\") ; Thread.current.kill ; return false end\n 5716    if strings.empty? then echo(\"error! 'matchfind' with no strings to look for!\") ; sleep 1 ; return false end\n 5717    looking = Array.new\n ....\n 5740    regex = /#{strings.flatten.join('|').gsub('?', '(.+)')}/i\n 5741    unless script = Script.current\n 5742:     respond \"Unknown script is asking to use matchfind!  Cannot process request without identifying the calling script; killing this thread.\"\n 5743:     Thread.current.kill\n 5744    end\n 5745    while true\n ....\n 5758    regex = /#{strings.flatten.join('|').gsub('?', '([\\w\\d]+)')}/i\n 5759    unless script = Script.current\n 5760:     respond \"Unknown script is asking to use matchfindword!  Cannot process request without identifying the calling script; killing this thread.\"\n 5761:     Thread.current.kill\n 5762    end\n 5763    while true\n ....\n 6729      respond \"--- Lich: error: #{$!}\\n\\t#{$!.backtrace[0..1].join(\"\\n\\t\")}\"\n 6730      Lich.log \"error: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 6731:   rescue ThreadError\n 6732      respond \"--- Lich: error: #{$!}\\n\\t#{$!.backtrace[0..1].join(\"\\n\\t\")}\"\n 6733      Lich.log \"error: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n ....\n 6767    @@max_size          = 3000\n 6768    def Buffer.gets\n 6769:     thread_id = Thread.current.object_id\n 6770:     if @@index[thread_id].nil?\n 6771        @@mutex.synchronize {\n 6772:         @@index[thread_id] = (@@offset + @@buffer.length)\n 6773:         @@streams[thread_id] ||= DOWNSTREAM_STRIPPED\n 6774        }\n 6775      end\n 6776      line = nil\n 6777      loop {\n 6778:       if (@@index[thread_id] - @@offset) >= @@buffer.length\n 6779:         sleep 0.05 while ((@@index[thread_id] - @@offset) >= @@buffer.length)\n 6780        end\n 6781        @@mutex.synchronize {\n 6782:         if @@index[thread_id] < @@offset\n 6783:           @@index[thread_id] = @@offset\n 6784          end\n 6785:         line = @@buffer[@@index[thread_id] - @@offset]\n 6786        }\n 6787:       @@index[thread_id] += 1\n 6788:       break if ((line.stream & @@streams[thread_id]) != 0)\n 6789      }\n 6790      return line\n 6791    end\n 6792    def Buffer.gets?\n 6793:     thread_id = Thread.current.object_id\n 6794:     if @@index[thread_id].nil?\n 6795        @@mutex.synchronize {\n 6796:         @@index[thread_id] = (@@offset + @@buffer.length)\n 6797:         @@streams[thread_id] ||= DOWNSTREAM_STRIPPED\n 6798        }\n 6799      end\n 6800      line = nil\n 6801      loop {\n 6802:       if (@@index[thread_id] - @@offset) >= @@buffer.length\n 6803          return nil\n 6804        end\n 6805        @@mutex.synchronize {\n 6806:         if @@index[thread_id] < @@offset\n 6807:           @@index[thread_id] = @@offset\n 6808          end\n 6809:         line = @@buffer[@@index[thread_id] - @@offset]\n 6810        }\n 6811:       @@index[thread_id] += 1\n 6812:       break if ((line.stream & @@streams[thread_id]) != 0)\n 6813      }\n 6814      return line\n 6815    end\n 6816    def Buffer.rewind\n 6817:     thread_id = Thread.current.object_id\n 6818:     @@index[thread_id] = @@offset\n 6819:     @@streams[thread_id] ||= DOWNSTREAM_STRIPPED\n 6820      return self\n 6821    end\n 6822    def Buffer.clear\n 6823:     thread_id = Thread.current.object_id\n 6824:     if @@index[thread_id].nil?\n 6825        @@mutex.synchronize {\n 6826:         @@index[thread_id] = (@@offset + @@buffer.length)\n 6827:         @@streams[thread_id] ||= DOWNSTREAM_STRIPPED\n 6828        }\n 6829      end\n 6830      lines = Array.new\n 6831      loop {\n 6832:       if (@@index[thread_id] - @@offset) >= @@buffer.length\n 6833          return lines\n 6834        end\n 6835        line = nil\n 6836        @@mutex.synchronize {\n 6837:         if @@index[thread_id] < @@offset\n 6838:           @@index[thread_id] = @@offset\n 6839          end\n 6840:         line = @@buffer[@@index[thread_id] - @@offset]\n 6841        }\n 6842:       @@index[thread_id] += 1\n 6843:       lines.push(line) if ((line.stream & @@streams[thread_id]) != 0)\n 6844      }\n 6845      return lines\n ....\n 6861    end\n 6862    def Buffer.streams\n 6863:     @@streams[Thread.current.object_id]\n 6864    end\n 6865    def Buffer.streams=(val)\n ....\n 6868        return nil\n 6869      end\n 6870:     @@streams[Thread.current.object_id] = val\n 6871    end\n 6872    def Buffer.cleanup\n 6873:     @@index.delete_if { |k,v| not Thread.list.any? { |t| t.object_id == k } }\n 6874:     @@streams.delete_if { |k,v| not Thread.list.any? { |t| t.object_id == k } }\n 6875      return self\n 6876    end\n ....\n 6888    end\n 6889    def gets\n 6890:     thread_id = Thread.current.object_id\n 6891:     if @buffer_index[thread_id].nil?\n 6892:       @buffer_mutex.synchronize { @buffer_index[thread_id] = (@buffer_offset + @buffer.length) }\n 6893      end\n 6894:     if (@buffer_index[thread_id] - @buffer_offset) >= @buffer.length\n 6895:       sleep 0.05 while ((@buffer_index[thread_id] - @buffer_offset) >= @buffer.length)\n 6896      end\n 6897      line = nil\n 6898      @buffer_mutex.synchronize {\n 6899:       if @buffer_index[thread_id] < @buffer_offset\n 6900:         @buffer_index[thread_id] = @buffer_offset\n 6901        end\n 6902:       line = @buffer[@buffer_index[thread_id] - @buffer_offset]\n 6903      }\n 6904:     @buffer_index[thread_id] += 1\n 6905      return line\n 6906    end\n 6907    def gets?\n 6908:     thread_id = Thread.current.object_id\n 6909:     if @buffer_index[thread_id].nil?\n 6910:       @buffer_mutex.synchronize { @buffer_index[thread_id] = (@buffer_offset + @buffer.length) }\n 6911      end\n 6912:     if (@buffer_index[thread_id] - @buffer_offset) >= @buffer.length\n 6913        return nil\n 6914      end\n 6915      line = nil\n 6916      @buffer_mutex.synchronize {\n 6917:       if @buffer_index[thread_id] < @buffer_offset\n 6918:         @buffer_index[thread_id] = @buffer_offset\n 6919        end\n 6920:       line = @buffer[@buffer_index[thread_id] - @buffer_offset]\n 6921      }\n 6922:     @buffer_index[thread_id] += 1\n 6923      return line\n 6924    end\n 6925    def clear\n 6926:     thread_id = Thread.current.object_id\n 6927:     if @buffer_index[thread_id].nil?\n 6928:       @buffer_mutex.synchronize { @buffer_index[thread_id] = (@buffer_offset + @buffer.length) }\n 6929        return Array.new\n 6930      end\n 6931:     if (@buffer_index[thread_id] - @buffer_offset) >= @buffer.length\n 6932        return Array.new\n 6933      end\n 6934      lines = Array.new\n 6935      @buffer_mutex.synchronize {\n 6936:       if @buffer_index[thread_id] < @buffer_offset\n 6937:         @buffer_index[thread_id] = @buffer_offset\n 6938        end\n 6939:       lines = @buffer[(@buffer_index[thread_id] - @buffer_offset)..-1]\n 6940:       @buffer_index[thread_id] = (@buffer_offset + @buffer.length)\n 6941      }\n 6942      return lines\n 6943    end\n 6944    def rewind\n 6945:     @buffer_index[Thread.current.object_id] = @buffer_offset\n 6946      return self\n 6947    end\n ....\n 6958      return self\n 6959    end\n 6960:   def cleanup_threads\n 6961:     @buffer_index.delete_if { |k,v| not Thread.list.any? { |t| t.object_id == k } }\n 6962      return self\n 6963    end\n ....\n 7051        @@mutex     = Mutex.new\n 7052        @@last_recv = nil\n 7053:       @@thread    = nil\n 7054        @@buffer    = SharedBuffer.new\n 7055        @@_buffer   = SharedBuffer.new\n ....\n 7066          @@socket.sync = true\n 7067  \n 7068:         Thread.new {\n 7069            @@last_recv = Time.now\n 7070            loop {\n 7071              if (@@last_recv + 300) < Time.now\n 7072                Lich.log \"#{Time.now}: error: nothing recieved from game server in 5 minutes\"\n 7073:               @@thread.kill rescue nil\n 7074                break\n 7075              end\n ....\n 7079          }\n 7080  \n 7081:         @@thread = Thread.new {\n 7082            begin\n 7083              atmospherics = false\n ....\n 7114                        $_DETACHABLE_CLIENT_.close rescue nil\n 7115                        $_DETACHABLE_CLIENT_ = nil\n 7116:                       respond \"--- Lich: error: client_thread: #{$!}\"\n 7117                        respond $!.backtrace.first\n 7118:                       Lich.log \"error: client_thread: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 7119                      end\n 7120                    end\n ....\n 7135                          retry\n 7136                        end\n 7137:                       $stdout.puts \"--- error: server_thread: #{$!}\"\n 7138:                       Lich.log \"error: server_thread: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 7139                      end\n 7140                      XMLData.reset\n ....\n 7150                  end\n 7151                rescue\n 7152:                 $stdout.puts \"--- error: server_thread: #{$!}\"\n 7153:                 Lich.log \"error: server_thread: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 7154                end\n 7155              end\n 7156            rescue Exception\n 7157:             Lich.log \"error: server_thread: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 7158:             $stdout.puts \"--- error: server_thread: #{$!}\"\n 7159              sleep 0.2\n 7160              retry unless $_CLIENT_.closed? or @@socket.closed? or ($!.to_s =~ /invalid argument|A connection attempt failed|An existing connection was forcibly closed|An established connection was aborted by the software in your host machine./i)\n 7161            rescue\n 7162:             Lich.log \"error: server_thread: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 7163:             $stdout.puts \"--- error: server_thread: #{$!}\"\n 7164              sleep 0.2\n 7165              retry unless $_CLIENT_.closed? or @@socket.closed? or ($!.to_s =~ /invalid argument|A connection attempt failed|An existing connection was forcibly closed|An established connection was aborted by the software in your host machine./i)\n 7166            end\n 7167          }\n 7168:         @@thread.priority = 4\n 7169          $_SERVER_ = @@socket # deprecated\n 7170        end\n 7171:       def Game.thread\n 7172:         @@thread\n 7173        end\n 7174        def Game.closed?\n ....\n 7182          if @@socket\n 7183            @@socket.close rescue nil\n 7184:           @@thread.kill rescue nil\n 7185          end\n 7186        end\n ....\n 7400        end\n 7401        def Spellsong.load_serialized=(old)\n 7402:         Thread.new {\n 7403            n = 0\n 7404            while Stats.level == 0\n ....\n 10473  end\n 10474  \n 10475: main_thread = Thread.new {\n 10476           test_mode = false\n 10477     $SEND_CHARACTER = '>'\n .....\n 10527  \n 10528        login_server = nil\n 10529:       connect_thread = nil\n 10530:       timeout_thread = Thread.new {\n 10531          sleep 30\n 10532          $stdout.puts \"error: timed out connecting to eaccess.play.net:7900\"\n 10533          Lich.log \"error: timed out connecting to eaccess.play.net:7900\"\n 10534:         connect_thread.kill rescue nil\n 10535          login_server = nil\n 10536        }\n 10537:       connect_thread = Thread.new {\n 10538          begin\n 10539            login_server = TCPSocket.new('eaccess.play.net', 7900)\n .....\n 10544          end\n 10545        }\n 10546:       connect_thread.join\n 10547:       timeout_thread.kill rescue nil\n 10548  \n 10549        if login_server\n .....\n 10679              begin\n 10680                login_server = nil\n 10681:               connect_thread = Thread.new {\n 10682                  login_server = TCPSocket.new('eaccess.play.net', 7900)\n 10683                }\n 10684                300.times {\n 10685                  sleep 0.1\n 10686:                 break unless connect_thread.status\n 10687                }\n 10688:               if connect_thread.status\n 10689:                 connect_thread.kill rescue nil\n 10690                  msgbox.call \"error: timed out connecting to eaccess.play.net:7900\"\n 10691                end\n .....\n 10970            begin\n 10971              login_server = nil\n 10972:             connect_thread = Thread.new {\n 10973                login_server = TCPSocket.new('eaccess.play.net', 7900)\n 10974              }\n 10975              300.times {\n 10976                sleep 0.1\n 10977:               break unless connect_thread.status\n 10978              }\n 10979:             if connect_thread.status\n 10980:               connect_thread.kill rescue nil\n 10981                msgbox.call \"error: timed out connecting to eaccess.play.net:7900\"\n 10982              end\n .....\n 11241            begin\n 11242              login_server = nil\n 11243:             connect_thread = Thread.new {\n 11244                login_server = TCPSocket.new('eaccess.play.net', 7900)\n 11245              }\n 11246              300.times {\n 11247                sleep 0.1\n 11248:               break unless connect_thread.status\n 11249              }\n 11250:             if connect_thread.status\n 11251:               connect_thread.kill rescue nil\n 11252                msgbox.call \"error: timed out connecting to eaccess.play.net:7900\"\n 11253              end\n .....\n 11770      unless launch_data\n 11771        Gtk.queue { Gtk.main_quit }\n 11772:       Thread.kill\n 11773      end\n 11774    end\n .....\n 11881          exit(1)\n 11882        end\n 11883:       accept_thread = Thread.new { $_CLIENT_ = SynchronizedSocket.new(listener.accept) }\n 11884        localport = listener.addr[1]\n 11885        if custom_launch\n .....\n 11968        end\n 11969        Lich.log 'info: waiting for client to connect...'\n 11970:       300.times { sleep 0.1; break unless accept_thread.status }\n 11971:       accept_thread.kill if accept_thread.status\n 11972        Dir.chdir(LICH_DIR)\n 11973        unless $_CLIENT_\n .....\n 12000      Lich.log \"info: connecting to game server (#{gamehost}:#{gameport})\"\n 12001      begin\n 12002:       connect_thread = Thread.new {\n 12003          Game.open(gamehost, gameport)\n 12004        }\n 12005        300.times {\n 12006          sleep 0.1\n 12007:         break unless connect_thread.status\n 12008        }\n 12009:       if connect_thread.status\n 12010:         connect_thread.kill rescue nil\n 12011          raise \"error: timed out connecting to #{gamehost}:#{gameport}\"\n 12012        end\n .....\n 12016        Lich.log \"info: connecting to game server (#{gamehost}:#{gameport})\"\n 12017        begin\n 12018:         connect_thread = Thread.new {\n 12019            Game.open(gamehost, gameport)\n 12020          }\n 12021          300.times {\n 12022            sleep 0.1\n 12023:           break unless connect_thread.status\n 12024          }\n 12025:         if connect_thread.status\n 12026:           connect_thread.kill rescue nil\n 12027            raise \"error: timed out connecting to #{gamehost}:#{gameport}\"\n 12028          end\n .....\n 12071      Lich.log \"info: waiting for the client to connect...\"\n 12072  \n 12073:     timeout_thread = Thread.new {\n 12074        sleep 120\n 12075        listener.close rescue nil\n .....\n 12082      $_CLIENT_ = SynchronizedSocket.new(listener.accept)\n 12083      listener.close rescue nil\n 12084:     timeout_thread.kill\n 12085      $stdout.puts \"Connection with the local game client is open.\"\n 12086      Lich.log \"info: connection with the game client is open\"\n .....\n 12093        game_host, game_port = Lich.fix_game_host_port(game_host, game_port)\n 12094        begin\n 12095:         timeout_thread = Thread.new {\n 12096            sleep 30\n 12097            Lich.log \"error: timed out connecting to #{game_host}:#{game_port}\"\n .....\n 12106            exit\n 12107          end\n 12108:         timeout_thread.kill rescue nil\n 12109          Lich.log 'info: connection with the game host is open'\n 12110        end\n .....\n 12147  \n 12148    if ARGV.include?('--without-frontend')\n 12149:     Thread.new {\n 12150:       client_thread = nil\n 12151        #\n 12152        # send the login key\n .....\n 12192      $_CLIENT_.sync = true\n 12193  \n 12194:     client_thread = Thread.new {\n 12195        $login_time = Time.now\n 12196  \n .....\n 12291              do_client(client_string)\n 12292            rescue\n 12293:             respond \"--- Lich: error: client_thread: #{$!}\"\n 12294              respond $!.backtrace.first\n 12295:             Lich.log \"error: client_thread: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 12296            end\n 12297          end\n 12298        rescue\n 12299:         respond \"--- Lich: error: client_thread: #{$!}\"\n 12300          respond $!.backtrace.first\n 12301:         Lich.log \"error: client_thread: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 12302          sleep 0.2\n 12303:         retry unless $_CLIENT_.closed? or Game.closed? or !Game.thread.alive? or ($!.to_s =~ /invalid argument|A connection attempt failed|An existing connection was forcibly closed/i)\n 12304        end\n 12305        Game.close\n .....\n 12308  \n 12309    if detachable_client_port\n 12310:     detachable_client_thread = Thread.new {\n 12311        loop {\n 12312          begin\n .....\n 12327            begin\n 12328              $frontend = 'profanity'\n 12329:             Thread.new {\n 12330                100.times { sleep 0.1; break if XMLData.indicator['IconJOINED'] }\n 12331                init_str = \"<progressBar id='mana' value='0' text='mana #{XMLData.mana}/#{XMLData.max_mana}'/>\"\n .....\n 12366                  do_client(client_string)\n 12367                rescue\n 12368:                 respond \"--- Lich: error: client_thread: #{$!}\"\n 12369                  respond $!.backtrace.first\n 12370:                 Lich.log \"error: client_thread: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 12371                end\n 12372              end\n 12373            rescue\n 12374:             respond \"--- Lich: error: client_thread: #{$!}\"\n 12375              respond $!.backtrace.first\n 12376:             Lich.log \"error: client_thread: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 12377              $_DETACHABLE_CLIENT_.close rescue nil\n 12378              $_DETACHABLE_CLIENT_ = nil\n .....\n 12386      }\n 12387    else\n 12388:     detachable_client_thread = nil\n 12389    end\n 12390  \n .....\n 12398    end\n 12399  \n 12400:   client_thread.priority = 3\n 12401  \n 12402    $_CLIENT_.puts \"\\n--- Lich v#{LICH_VERSION} is active.  Type #{$clean_lich_char}help for usage info.\\n\\n\"\n 12403  \n 12404:   Game.thread.join\n 12405:   client_thread.kill rescue nil\n 12406:   detachable_client_thread.kill rescue nil\n 12407  \n 12408    Lich.log 'info: stopping scripts...'\n .....\n 12424  \n 12425  if defined?(Gtk)\n 12426:   Thread.current.priority = -10\n 12427    Gtk.main\n 12428  else\n 12429:   main_thread.join\n 12430  end\n 12431  exit\n\nE:\\Google Drive\\Lich\\scripts\\go2.lic:\n  921  		status_tags\n  922  		parent_id = #{Script.self.object_id}\n  923: 		Thread.new { loop { sleep 3; Script.self.kill unless Script.running.any? { |s| s.object_id == parent_id } or Script.hidden.any? { |s| s.object_id == parent_id } } }\n  924  		while (line = get)\n  925  			if line =~ /<compDef id='room players'>Also here:.*? the body of </\n\nE:\\Google Drive\\Lich\\scripts\\grguild.lic:\n   37  	ERRORS:\n   38  			(A log, UNEDITED, is always helpful when you find a bug, and I'll try to squish em ASAP.)\n   39: 			For help, check the PC thread in the ROGUE folder, or find me on AIM at Lord Gibreficul.  Please make sure you've read the PC thread and the script notes (;grguild notes and ;grguild help) before contacting me directly.  I'm busy writing scripts!\n   40  \n   41  	version: 0.4\n\nE:\\Google Drive\\Lich\\scripts\\infomon.lic:\n  294  # Save current status every five minutes in case of crash\n  295  #\n  296: Thread.new {\n  297  	begin\n  298  		loop {\n  ...\n  317  # Death\n  318  #\n  319: Thread.new {\n  320  	begin\n  321  		loop {\n  ...\n 1531  		echo $!.backtrace.first\n 1532  		sleep 1\n 1533: 	rescue ThreadError\n 1534  		echo $!\n 1535  		echo $!.backtrace.first\n\nE:\\Google Drive\\Lich\\scripts\\lnet.lic:\n 1157  # keepalive\n 1158  #\n 1159: Thread.new {\n 1160  	loop {\n 1161  		begin\n ....\n 1173  # connect and listen to the server\n 1174  #\n 1175: Thread.new {\n 1176  	loop {\n 1177  		last_connect_attempt = Time.now\n ....\n 1224  		server_string\n 1225  	}\n 1226: 	Thread.new {\n 1227  		begin\n 1228  			DownstreamHook.add('lnet-watch-forage', hook_proc)\n ....\n 1274  		server_string\n 1275  	}\n 1276: 	Thread.new {\n 1277  		begin\n 1278  			DownstreamHook.add('lnet-watch-forage', hook_proc)\n\nE:\\Google Drive\\Lich\\scripts\\log.lic:\n   29  script.want_upstream = true\n   30  \n   31: Thread.new {\n   32  	begin\n   33  		loop {\n\nE:\\Google Drive\\Lich\\scripts\\login.lic:\n  211  if data\n  212  	login_server = nil\n  213: 	connect_thread = nil\n  214: 	timeout_thread = Thread.new {\n  215  		sleep 30\n  216: 		connect_thread.kill rescue()\n  217  		login_server = nil\n  218  	}\n  219: 	connect_thread = Thread.new {\n  220  		begin\n  221  			login_server = TCPSocket.new('eaccess.play.net', 7900)\n  ...\n  226  		end\n  227  	}\n  228: 	connect_thread.join\n  229: 	timeout_thread.kill rescue()\n  230  	\n  231  	if login_server\n  ...\n  313  if File.exists?(ruby)\n  314  	if start_script\n  315: 		Thread.new {\n  316  			system(ruby, \"#{LICH_DIR}\\\\lich.rbw\", sal_filename, \"--start-scripts=#{start_script}\")\n  317  		}\n  318  	else\n  319: 		Thread.new {\n  320  			system(ruby, \"#{LICH_DIR}\\\\lich.rbw\", sal_filename)\n  321  		}\n\nE:\\Google Drive\\Lich\\scripts\\logxml.lic:\n   25  \n   26  \n   27: Thread.new {\n   28  	begin\n   29  		loop {\n\nE:\\Google Drive\\Lich\\scripts\\monitor_lines.lic:\n    2  \n    3  ## This will use symbol Transcend\n    4: Thread.new { \n    5    while true \n    6      wait_until{(not Spell[9049].active? and not Spell[9812].active? and not dead? and running?('bigshot')) and percenthealth <= 80 and (!standing? or stunned? or webbed?) and ((GameObj.npcs.any? { |npc| npc.type !~ /passive/ and npc.status !~ /dead/ }) or (GameObj.loot.each { |i| i.noun =~ /cloud/}))} \n\nE:\\Google Drive\\Lich\\scripts\\narost.lic:\n  494  				'vadj' => scroller.vadjustment.value.to_i\n  495  			}\n  496: 			Thread.new {\n  497  				while dragging != false\n  498  					sleep 0.1\n\nE:\\Google Drive\\Lich\\scripts\\non_global_bigshot.lic:\n  817      def dead_man_switch()\n  818          if @DEAD_MAN_SWITCH\n  819:             Thread.new {\n  820                  while( running?($current_script_name) )\n  821                      if( dead? ||  percenthealth < 40 )\n  ...\n  844              );\n  845          else\n  846:             Thread.new {\n  847                  loop { Script.self.kill if dead?; sleep 5; }\n  848              }\n  ...\n  851   \n  852      def keep_awake()\n  853:         Thread.new {\n  854              while( running?($current_script_name) )\n  855                  sleep 150; put 'look';\n  ...\n 1872      DRb.start_service( nil, Group.new )\n 1873      uri = DRb.uri\n 1874:     Thread.new { DRb.thread.join }\n 1875   \n 1876      # launch DRb client\n\nE:\\Google Drive\\Lich\\scripts\\profanity.rb:\n   27  $version = 0.4\n   28  \n   29: require 'thread'\n   30  require 'socket'\n   31  require 'rexml/document'\n   ..\n 1544  		window.update\n 1545  		need_update = true\n 1546: 		Thread.new {\n 1547  			while (countdown_handler['stunned'].end_time == temp_stun_end) and (countdown_handler['stunned'].value > 0)\n 1548  				sleep 0.15\n ....\n 1563  server = TCPSocket.open('127.0.0.1', PORT)\n 1564  \n 1565: Thread.new { sleep 15; skip_server_time_offset = false }\n 1566  \n 1567: Thread.new {\n 1568  	begin\n 1569  		line = nil\n ....\n 1800  							window.update\n 1801  							need_update = true\n 1802: 							Thread.new {\n 1803  								sleep 0.15\n 1804  								while (countdown_handler['roundtime'].end_time == temp_roundtime_end) and (countdown_handler['roundtime'].value > 0)\n ....\n 1817  							window.update\n 1818  							need_update = true\n 1819: 							Thread.new {\n 1820  								while (countdown_handler['roundtime'].secondary_end_time == temp_casttime_end) and (countdown_handler['roundtime'].secondary_value > 0)\n 1821  									sleep 0.15\n\nE:\\Google Drive\\Lich\\scripts\\repository.lic:\n 2168  	end\n 2169  	file_ls = nil\n 2170: 	thread_group = Thread.current.group\n 2171  	populate_liststore = proc {\n 2172  		file_ls.clear\n 2173  		list = nil\n 2174: 		get_list_thread = Thread.new {\n 2175  			report_errors {\n 2176: 				thread_group.add(Thread.current)\n 2177  				list = add_comments_to_list.call(get_list.call)\n 2178  			}\n 2179  		}\n 2180: 		get_list_thread.join\n 2181  		headers = list.shift\n 2182  		fi = headers.index('file')\n\nE:\\Google Drive\\Lich\\scripts\\ruttleford.lic:\n    2  \n    3  \n    4: Thread.new {\n    5  	while line = get\n    6  		$hasted = false if line =~ /Kalros returns to normal speed|Kalros just went|Kalros just arrived/\n\nE:\\Google Drive\\Lich\\scripts\\server.lic:\n   17    def run\n   18      loop {\n   19:       Thread.start(@server.accept) do | client |\n   20          nick_name = client.gets.chomp.to_sym\n   21          @connections[:clients].each do |other_name, other_client|\n   22            if nick_name == other_name || client == other_client\n   23              client.puts \"This username already exist\"\n   24:             Thread.kill self\n   25            end\n   26          end\n\nE:\\Google Drive\\Lich\\scripts\\shopsearch.lic:\n   17    - I made this to make it easy to buy full gem jars in my Icemule shop\n   18    - Assumes you're in the right place with the right cash\n   19:   - My scripts: http://forum.gsplayers.com/showthread.php?73663\n   20  \n   21   Updates :\n\nE:\\Google Drive\\Lich\\scripts\\spellmonitor.lic:\n   14  $elemental_weapon = false if $elemental_weapon.nil?\n   15  \n   16: # Exec thread to search for line captures.\n   17  spell_line_checks = <<-eos\n   18  while line = get\n   ..\n   38    pause_script 'sloot' if running? 'sloot'\n   39  \n   40:   # Uses an exec thread to cast the spell so dothistimeout does not\n   41    # interefere with matches from method .cast\n   42    cast_spells.each {|do_spell|\n\nE:\\Google Drive\\Lich\\scripts\\sub.lic:\n  476      echo $ERROR_INFO.backtrace.first\n  477      sleep 1\n  478:   rescue ThreadError\n  479      echo $ERROR_INFO\n  480      echo $ERROR_INFO.backtrace.first\n\nE:\\Google Drive\\Lich\\scripts\\textsubs.lic:\n  136      echo $ERROR_INFO.backtrace.first\n  137      sleep 1\n  138:   rescue ThreadError\n  139      echo $ERROR_INFO\n  140      echo $ERROR_INFO.backtrace.first\n\nE:\\Google Drive\\Lich\\scripts\\transcend.lic:\n   14  \n   15  \n   16: Thread.new {\n   17  	while true\n   18  		wait_until{(not Spell[9049].active? and not Spell[9812].active? and not dead? and running?('sbounty')) and percenthealth <= 80 and (!standing? or stunned? or webbed?) and ((GameObj.npcs.any? { |npc| npc.type !~ /passive/ and npc.status !~ /dead/ }) or (GameObj.loot.each { |i| i.noun =~ /cloud/}))}\n   ..\n   24  }\n   25  \n   26: Thread.new {\n   27  	while true\n   28  		wait_until{(percenthealth <= 50 and not dead? and not stunned? and running?('sbounty')) }\n   ..\n   34  }\n   35  \n   36: Thread.new {\n   37    while true\n   38      wait_until { !calmed? }\n   ..\n   45  }\n   46  \n   47: Thread.new {\n   48    while true\n   49      wait_until{(percenthealth < 65) }\n   ..\n   56  }\n   57  \n   58: Thread.new {\n   59    while true\n   60      wait_until{ dead? }\n   ..\n   73  }\n   74  \n   75: Thread.new {\n   76  \n   77    def cast_now(cast_spells)\n   ..\n   82      ubermonkPaused = GSC.pauseScript 'ubermonk'\n   83  \n   84:     # Uses an exec thread to cast the spell so dothistimeout does not\n   85      # interefere with matches from method .cast\n   86      cast_spells.each {|do_spell|\n\nE:\\Google Drive\\Lich\\scripts\\ubermonk_bu:\n    1  # Ubermonk by EmbodiedChaos 12/31/2015\n    2: Thread.new { \n    3  while true\n    4  Script.self.kill if running?('go2')\n\nE:\\Google Drive\\Lich\\scripts\\vars.lic:\n  123  						delete_button.sensitive = true\n  124  						add_new_row.call\n  125: 						Thread.new {\n  126  							sleep 0.05\n  127  							inc = (sw.vadjustment.upper - sw.vadjustment.value - sw.vadjustment.page_size) / 10.0\n\n377 matches across 45 files\n\n\nSearching 322 files for \"9805\"\n\nE:\\Google Drive\\Lich\\scripts\\common.lic:\n  356      end\n  357      if guild == 'monk'\n  358:       Spell[9805].cast if Spell[9805].timeleft < 4\n  359:       Spell[9805].cast if Spell[9805].timeleft < 8\n  360:       Spell[9805].cast if Spell[9805].timeleft < 8\n  361        Spell[9806].cast if Spell[9806].timeleft < 8\n  362        Spell[9806].cast if Spell[9806].timeleft < 8  \n  ...\n  364      end\n  365      if guild == 'bard'\n  366:       #Spell[9805].cast if Spell[9805].timeleft < 4\n  367:       #Spell[9805].cast if Spell[9805].timeleft < 8\n  368:       #Spell[9805].cast if Spell[9805].timeleft < 8\n  369        #Spell[9806].cast if Spell[9806].timeleft < 8\n  370        #Spell[9806].cast if Spell[9806].timeleft < 8 \n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n   94    #GSC.bput \"get my warblade from my bag\", \"You grab\"\n   95    #GSC.bput \"remove shield\", \"You sling\"\n   96:   Spell[9805].cast if Spell[9805].timeleft < 4\n   97:   Spell[9805].cast if Spell[9805].timeleft < 8\n   98:   Spell[9805].cast if Spell[9805].timeleft < 8\n   99    Spell[9806].cast if Spell[9806].timeleft < 8\n  100    Spell[9806].cast if Spell[9806].timeleft < 8\n\nE:\\Google Drive\\Lich\\scripts\\transcend.lic:\n  123        end\n  124        if $current_favor > 0\n  125:         cast_spells << 9805 if Spell[9805].timeleft < 0.5 and GSC.can_cast?(9805)\n  126          cast_spells << 9806 if Spell[9806].timeleft < 0.5 and GSC.can_cast?(9806)\n  127        end\n\nE:\\Google Drive\\Lich\\scripts\\bigbounty.lic:\n  230          \n  231  	if( sign.known? && sign.timeleft <= @SPELL_TIME )\n  232:             if( i  == 9805 )\n  233                  2.times { sign.cast }\n  234              else\n  ...\n 1865            \n 1866  	    if(sign.affordable? && sign.known? )\n 1867:                 if( i  == 9805 )\n 1868                      2.times { sign.cast }\n 1869                  else\n ....\n 2211  \n 2212          if( !sign.active? && sign.affordable? )\n 2213:             if( i  == 9805 )\n 2214                  2.times { sign.cast }\n 2215              else\n ....\n 2535          $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 2536  \n 2537:         signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\\n You could also put a spell number you wish to keep active here.\"\n 2538          $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 2539  \n\nE:\\Google Drive\\Lich\\scripts\\bigshot.lic:\n 1492   \n 1493              if( !sign.active? && sign.affordable? )\n 1494:                 if( i  == 9805 )\n 1495                      2.times { sign.cast }\n 1496                  else\n ....\n 1828              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 1829   \n 1830:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1831              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 1832   \n\nE:\\Google Drive\\Lich\\scripts\\bigshot1.lic:\n 1317  \n 1318              if( !sign.active? && sign.affordable? )\n 1319:                 if( i  == 9805 )\n 1320                      2.times { sign.cast }\n 1321                  else\n ....\n 1602              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 1603  \n 1604:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1605              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 1606  \n\nE:\\Google Drive\\Lich\\scripts\\bigshot_backup 3.11.2017.lic:\n 1478   \n 1479              if( !sign.active? && sign.affordable? )\n 1480:                 if( i  == 9805 )\n 1481                      2.times { sign.cast }\n 1482                  else\n ....\n 1822              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 1823   \n 1824:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1825              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 1826   \n\nE:\\Google Drive\\Lich\\scripts\\bigshotRift.lic:\n 1489   \n 1490              if( !sign.active? && sign.affordable? )\n 1491:                 if( i  == 9805 )\n 1492                      2.times { sign.cast }\n 1493                  else\n ....\n 1825              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 1826   \n 1827:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1828              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 1829   \n ....\n 3476   \n 3477              if( !sign.active? && sign.affordable? )\n 3478:                 if( i  == 9805 )\n 3479                      2.times { sign.cast }\n 3480                  else\n ....\n 3812              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 3813   \n 3814:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 3815              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 3816   \n\nE:\\Google Drive\\Lich\\scripts\\common.lic:\n  356      end\n  357      if guild == 'monk'\n  358:       Spell[9805].cast if Spell[9805].timeleft < 4\n  359:       Spell[9805].cast if Spell[9805].timeleft < 8\n  360:       Spell[9805].cast if Spell[9805].timeleft < 8\n  361        Spell[9806].cast if Spell[9806].timeleft < 8\n  362        Spell[9806].cast if Spell[9806].timeleft < 8  \n  ...\n  364      end\n  365      if guild == 'bard'\n  366:       #Spell[9805].cast if Spell[9805].timeleft < 4\n  367:       #Spell[9805].cast if Spell[9805].timeleft < 8\n  368:       #Spell[9805].cast if Spell[9805].timeleft < 8\n  369        #Spell[9806].cast if Spell[9806].timeleft < 8\n  370        #Spell[9806].cast if Spell[9806].timeleft < 8 \n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n   94    #GSC.bput \"get my warblade from my bag\", \"You grab\"\n   95    #GSC.bput \"remove shield\", \"You sling\"\n   96:   Spell[9805].cast if Spell[9805].timeleft < 4\n   97:   Spell[9805].cast if Spell[9805].timeleft < 8\n   98:   Spell[9805].cast if Spell[9805].timeleft < 8\n   99    Spell[9806].cast if Spell[9806].timeleft < 8\n  100    Spell[9806].cast if Spell[9806].timeleft < 8\n\nE:\\Google Drive\\Lich\\scripts\\fbigshot.lic:\n 1371   \n 1372              if( !sign.active? && sign.affordable? )\n 1373:                 if( i  == 9805 )\n 1374                      2.times { sign.cast }\n 1375                  else\n ....\n 1657              $OPF__TOOLTIPS.set_tip($OPF__ENTRY['g_disable_commands'], commands_tip, \"\")\n 1658   \n 1659:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1660              $OPF__TOOLTIPS.set_tip($OPF__ENTRY['signs'], signs_tip, \"\")\n 1661   \n\nE:\\Google Drive\\Lich\\scripts\\non_global_bigshot.lic:\n 1459   \n 1460              if( !sign.active? && sign.affordable? )\n 1461:                 if( i  == 9805 )\n 1462                      2.times { sign.cast }\n 1463                  else\n ....\n 1795              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 1796   \n 1797:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1798              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 1799   \n\nE:\\Google Drive\\Lich\\scripts\\transcend.lic:\n  123        end\n  124        if $current_favor > 0\n  125:         cast_spells << 9805 if Spell[9805].timeleft < 0.5 and GSC.can_cast?(9805)\n  126          cast_spells << 9806 if Spell[9806].timeleft < 0.5 and GSC.can_cast?(9806)\n  127        end\n\nE:\\Google Drive\\Lich\\scripts\\Whirlin Weapon Comparer v2.xlsx:\n 1569  648b 9d2f 2819 4d3c 6d6c 637d 41c9 a8aa\n 1570  dd9d 2fbf a0a4 b53e 4349 1fee 3757 50d2\n 1571: 8647 28e9 1558 9805 25bd a2b2 b7b3 b3a0\n 1572  a457 5406 f70a 6830 0c25 fd04 95c3 cd1e\n 1573  406b 6128 398e be56 f14f 7431 a5c0 9237\n ....\n 1615  4d3c 6d6c 637d 41c9 a8aa dd9d 2fbf a0a4\n 1616  b53e 4349 1fee 3757 50d2 8647 28e9 1558\n 1617: 9805 25bd a2b2 b7b3 b3a0 a457 5406 f70a\n 1618  6830 0c25 fd04 95c3 cd1e 406b 6128 398e\n 1619  be56 f13f 084a ee0e fe49 b63c 0586 5b16\n ....\n 3000  4db7 5cd2 aad2 1765 fb0d 2e29 f79f b9a4\n 3001  2e4f 4754 4787 49c3 5c52 1edd 7149 2da0\n 3002: 2b8f e092 5a40 9d3a b8a4 1664 f0eb 9805\n 3003  97d4 824c 7e23 8069 c3ff 78eb 78fc c902\n 3004  6000 a30b 8091 f507 6018 8f3c 0b98 4b5a\n\n63 matches across 14 files\n\n\nSearching 322 files for \"aun\"\n\nE:\\Google Drive\\Lich\\scripts\\monitor.lic:\n  177  	#'^A hisskra chieftain (stalks|leaps) in',\n  178  	#'^(The|An?) moor wight suddenly stops moving',\n  179: 	#'^A gaunt spectral servant whispers haunting',\n  180  	#'^An? (ancient|grizzled)? ?(shadow|night|black|snow|hunch-backed) (steed|mare|forest ogre|madrinol|dogmatist) (rears|shakes|snorts|nods|waves) (back|her|his|at|as|and)',\n  181  	#'^A spectral miner waves a hand through the',\n  ...\n  312  	\"^<roundTime value=\",\n  313  	'.*<d cmd',\n  314: 	'<LaunchURL',\n  315  	'^Where are you trying',\n  316  	'^<right',\n\nE:\\Google Drive\\Lich\\scripts\\1monitor.lic:\n  209  	#{}\"<a exist=\\\"-?\\\\d+\\\" (noun|coord)=\",\n  210  	#'.*<d cmd',\n  211: 	#'<LaunchURL',\n  212  	#'^Where are you trying',\n  213  	'^<right',\n\nE:\\Google Drive\\Lich\\scripts\\bestiary.lic:\n  829  		'corporeal' => true,\n  830  		'locations' => [\"Nightmare Gorge\",\"Arctic Tundra\"] },\n  831: 	\"Gaunt spectral servant\" => {\n  832: 		'url' => \"https://gswiki.play.net/mediawiki/index.php/Gaunt_spectral_servant\",\n  833  		'level' => 44,\n  834  		'undead' => true,\n\nE:\\Google Drive\\Lich\\scripts\\bigbounty.lic:\n 2535          $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 2536  \n 2537:         signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\\n You could also put a spell number you wish to keep active here.\"\n 2538          $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 2539  \n ....\n 2611  \n 2612  elsif( script.vars[1] =~ /head/i )\n 2613:     # launch DRb server\n 2614      DRb.start_service( nil, Group.new )\n 2615      uri = DRb.uri\n 2616      Thread.new { DRb.thread.join }\n 2617  \n 2618:     # launch DRb client\n 2619      DRb.start_service()\n 2620      bs = Bigbounty.new()\n\nE:\\Google Drive\\Lich\\scripts\\bigshot.lic:\n 1828              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 1829   \n 1830:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1831              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 1832   \n ....\n 1902   \n 1903  elsif( script.vars[1] =~ /head/i )\n 1904:     # launch DRb server\n 1905      DRb.start_service( nil, Group.new )\n 1906      uri = DRb.uri\n 1907      Thread.new { DRb.thread.join }\n 1908   \n 1909:     # launch DRb client\n 1910      DRb.start_service()\n 1911      bs = Bigshot.new()\n\nE:\\Google Drive\\Lich\\scripts\\bigshot1.lic:\n 1602              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 1603  \n 1604:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1605              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 1606  \n ....\n 1676  \n 1677  elsif( script.vars[1] =~ /head/i )\n 1678:     # launch DRb server\n 1679      DRb.start_service( nil, Group.new )\n 1680      uri = DRb.uri\n 1681      Thread.new { DRb.thread.join }\n 1682  \n 1683:     # launch DRb client\n 1684      DRb.start_service()\n 1685      bs = Bigshot.new()\n\nE:\\Google Drive\\Lich\\scripts\\bigshot_backup 3.11.2017.lic:\n 1822              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 1823   \n 1824:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1825              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 1826   \n ....\n 1896   \n 1897  elsif( script.vars[1] =~ /head/i )\n 1898:     # launch DRb server\n 1899      DRb.start_service( nil, Group.new )\n 1900      uri = DRb.uri\n 1901      Thread.new { DRb.thread.join }\n 1902   \n 1903:     # launch DRb client\n 1904      DRb.start_service()\n 1905      bs = Bigshot.new()\n\nE:\\Google Drive\\Lich\\scripts\\bigshotRift.lic:\n 1825              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 1826   \n 1827:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1828              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 1829   \n ....\n 1899   \n 1900  elsif( script.vars[1] =~ /head/i )\n 1901:     # launch DRb server\n 1902      DRb.start_service( nil, Group.new )\n 1903      uri = DRb.uri\n 1904      Thread.new { DRb.thread.join }\n 1905   \n 1906:     # launch DRb client\n 1907      DRb.start_service()\n 1908      bs = Bigshot.new()\n ....\n 3812              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 3813   \n 3814:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 3815              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 3816   \n ....\n 3886   \n 3887  elsif( script.vars[1] =~ /head/i )\n 3888:     # launch DRb server\n 3889      DRb.start_service( nil, Group.new )\n 3890      uri = DRb.uri\n 3891      Thread.new { DRb.thread.join }\n 3892   \n 3893:     # launch DRb client\n 3894      DRb.start_service()\n 3895      bs = Bigshot.new()\n\nE:\\Google Drive\\Lich\\scripts\\crit-tracking.lic:\n  593  \n  594  ##########Katar###########\n  595: '\\b(1|katar|gaunlet\\-sword|manople|paiscush|pata)\\b'  => { :armor_type => \"No Armor\",                :avd => 30, :df => 0.325, :wt => \"Katar\", :dt => \"Slash|Puncture\" },	\n  596: '\\b(2|katar|gaunlet\\-sword|manople|paiscush|pata)\\b'  => { :armor_type => \"Light Leather\",	     :avd => 32, :df => 0.250, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  597: '\\b(3|katar|gaunlet\\-sword|manople|paiscush|pata)\\b'  => { :armor_type => \"Full Leather\",	     :avd => 31, :df => 0.250, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  598: '\\b(4|katar|gaunlet\\-sword|manople|paiscush|pata)\\b'  => { :armor_type => \"Reinforced Leather\",	     :avd => 30, :df => 0.250, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  599: '\\b(5|katar|gaunlet\\-sword|manople|paiscush|pata)\\b'  => { :armor_type => \"Double Leather\",	     :avd => 29, :df => 0.250, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  600: '\\b(6|katar|gaunlet\\-sword|manople|paiscush|pata)\\b'  => { :armor_type => \"Leather Breastplate\",     :avd => 40, :df => 0.225, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  601: '\\b(7|katar|gaunlet\\-sword|manople|paiscush|pata)\\b'  => { :armor_type => \"Cuirbouili Leather\",	     :avd => 38, :df => 0.225, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  602: '\\b(8|katar|gaunlet\\-sword|manople|paiscush|pata)\\b'  => { :armor_type => \"Studded Leather\",	     :avd => 36, :df => 0.225, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  603: '\\b(9|katar|gaunlet\\-sword|manople|paiscush|pata)\\b'  => { :armor_type => \"Brigandine Armor\",	     :avd => 34, :df => 0.225, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  604: '\\b(10|katar|gaunlet\\-sword|manople|paiscush|pata)\\b' => { :armor_type => \"Chain Mail\",	             :avd => 45, :df => 0.200, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  605: '\\b(11|katar|gaunlet\\-sword|manople|paiscush|pata)\\b' => { :armor_type => \"Double Chain\",	     :avd => 41, :df => 0.200, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  606: '\\b(12|katar|gaunlet\\-sword|manople|paiscush|pata)\\b' => { :armor_type => \"Augmented Chain\",	     :avd => 37, :df => 0.200, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  607: '\\b(13|katar|gaunlet\\-sword|manople|paiscush|pata)\\b' => { :armor_type => \"Chain Hauberk\",	     :avd => 33, :df => 0.200, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  608: '\\b(14|katar|gaunlet\\-sword|manople|paiscush|pata)\\b' => { :armor_type => \"Metal Breastplate\",	     :avd => 40, :df => 0.175, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  609: '\\b(15|katar|gaunlet\\-sword|manople|paiscush|pata)\\b' => { :armor_type => \"Augmented Plate\",	     :avd => 34, :df => 0.175, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  610: '\\b(16|katar|gaunlet\\-sword|manople|paiscush|pata)\\b' => { :armor_type => \"Half Plate\",	             :avd => 28, :df => 0.175, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  611: '\\b(17|katar|gaunlet\\-sword|manople|paiscush|pata)\\b' => { :armor_type => \"Full Plate\",	             :avd => 22, :df => 0.175, :wt => \"Katar\", :dt => \"Slash|Puncture\" },\n  612  \n  613  ##########Short Sword###########\n  ...\n 2236  }\n 2237  \n 2238: all_weapon_names = /\\b(morning star|spiked mace|holy water sprinkler|spikestar|morning\\-star|leather whip|bullwhip|cat o\\' nine tails|crowbill|cudgel|baculus|club|lisan|periperiu|shillelagh|tambara|truncheon|war club|jo stick|mace|bulawa|flanged mace|knee\\-breaker|ridgemace|studded mace|dhara|massuelle|mattina|ox mace|pernat|quadrelle|ball and chain|mace and chain|binnol|goupillon|war hammer|hammerbeak|hoolurge|horseman\\'s hammer|taavish|dagger|alfange|basilard|bodkin|bracelet dagger|butcher knife|cinquedea|crescent dagger|dirk|fantail dagger|forked dagger|kidney dagger|knife|kozuka|misericord|parazonium|pavade|poignard|pugio|scramasax|sgian achlais|spike|stiletto|tanto|main gauche|parrying dagger|rapier|bilbo|epee|foil|tock|tocke|tuck|colichemarde|fleuret|schlager|tizona|verdun|whip\\-blade|katar|gaunlet\\-sword|manople|paiscush|pata|short sword|antler sword|braquemar|baselard|chereb|costille|gladius|kris|sica|wakizashi|scimitar|cutlass|kama|kilij|palache|sabre|sapara|shamshir|yataghan|estoc|koncerz|longsword|arming sword|kaskara|langsax|langseax|sheering sword|handaxe|balta|broad axe|cleaver|crescent axe|field\\-axe|francisca|hatchet|ice axe|limb\\-cleaver|meat cleaver|miner\\'s axe|moon axe|raiding axe|sparte|taper|toporok|waraxe|backsword|broadsword|carp\\'s tongue|flyssa|goliah|katzbalger|machera|palache|schiavona|seax|spadroon|spatha|talon sword|xiphos|falchion|badelaire|craquemarte|falcata|khopesh|machete|takouba|warblade|katana|bastard sword|espadon|cresset sword|warsword|pilum|spear|angon|boar spear|cateia|falarica|gaesum|harpoon|partisan|partizan|pill|spontoon|trident|fuscina|magari\\-yari|pitch fork|zinnor|halberd|bardiche|bill|brandestoc|croc|falcastra|falx|fauchard|glaive|godendag|guisarme|half moon|hippe|pole axe|scorpion|scythe|naginata|jeddart\\-axe|beaked axe|nagimaki|voulge|hammer of kai|awl\\-pike|chest\\-ripper|korseke|military fork|ranseur|runka|scaling fork|spetum|lance|pike|sarissa|sudis|warlance|short bow|composite bow|ong bow|yumi|light crossbow|light arbalest|heavy crossbow|heavy arbalest|siege crossbow|runestaff|crook|crosier|pastoral staff|rune staff|scepter|staff|bo stick|yoribo|staff|bastard sword|espandon|cresset sword|warsword|military pick|bisacuta|flail|military flail|flamberge|war mattock|mattock|oncin|sabar|maul|footman\\'s hammer|sledgehammer|tetsubo|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe|claidhmore|razorpaw|slap\\-slasher|paingrip|grab\\-stabber|cestus|knuckle\\-duster|hook\\-knife|pit\\knife|sabiet|tiger\\-claw|knuckle\\-blade|slash\\-fist|yierka\\-spur|spike\\-fist|blackjack|bludgeon|sap|jackblade|slash\\-jack|troll\\-claw|sai|jitte|fist\\-scythe|net|dart|bola|quoit|chakram|discus|javelin|contus|jaculum|shail|spiculum|icicle|palache)s?\\b/i\n 2239  all_shield_names = /\\b(shield)s?\\b/i\n 2240  all_armor_names = /\\b(Robe|Light Leather|Full Leather|Reinforced Leather|Double Leather|Leather Breastplate|Cuirbouili Leather|Studded Leather|Brigandine Armor|Chain Mail|Double Chain|Augmented Chain|Chain Hauberk|Metal Breastplate|Augmented Plate|Half Plate|Full Plate)s?\\b/i\n\nE:\\Google Drive\\Lich\\scripts\\crit_type_tracker.lic:\n  719  	/Larynx swells and explodes, but the .*? won't be needing it anymore anyway./ => \"RANK 7 , NECK DISRUPTION, Damage:  35    Status Effect:  FATAL,    Wounds:  Rank 3\",\n  720  	/The .*?'s neck muscles contract violently, severing head from shoulders./ => \"RANK 8 , NECK DISRUPTION, Damage:  40    Status Effect:  FATAL,    Wounds:  Rank 3\",\n  721: 	/The .*?'s neck explodes launching its head into the air./ => \"RANK 9 , NECK DISRUPTION, Damage:  50    Status Effect:  FATAL,    Wounds:  Rank 3\",\n  722  	/Throat disappears!  That'll make breathing difficult./ => \"UNKNOWN RANK, NECK DISRUPTION, FATAL\",\n  723  #		RIGHT EYE\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\Base.cmd:\n  238  matchre return ^Tiny tendrils of lightning jolt between your hands\n  239  matchre return ^The wailing of lost souls accompanies your preparations\n  240: matchre return ^Your skin briefly withers and tightens, becoming gaunt\n  241  matchre return ^Images of streaking stars falling from the heavens flash across your vision\n  242  matchre return ^A nagging sense of desperation guides your hands through the motions\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\boxp.cmd:\n    7  var pickstorage lockpick ring\n    8  var use.ring 1\n    9: var armor.types (handwraps|footwraps|aegis|buckler|heater|pavise|scutum|shield|sipar|targe|aventail|backplate|balaclava|barbute|bascinet|breastplate|\\bcap\\b|coat|cowl|cuirass|fauld|gauntlet|gloves|greaves|hauberk|helm|\\bhood\\b|jerkin|leathers|lorica|mantle|mask|morion|pants|\\bplate\\b|handguards|robe|sallet|shirt|sleeves|tabard|tasset|thorakes|vambraces|vest|collar|coif|mitt|armor|leather)\n   10  \n   11  if_1 then var pop.type %1\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\enclave.cmd:\n   39  \n   40  har-enc:\n   41: put command %1 to launch\n   42  pause\n   43  ECHO\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\scrollsort.cmd:\n   57  matchre Sort.warmage (Ethereal Shield|Aether Cloak|Ward Break|Substratum|Ethereal Fissure|Elementalism|Arc Light|Tingle|Lightning Bolt|Chain Lightning|Gar Zeng|Grounding Field|Fire Shards|Fire Ball|Dragon\\'s Breath|Mantle of Flame|Fire Rain|Flame Shockwave|Ignite|Mark of Arhat|Frostbite|Ice Patch|Rising Mists|Fortress of Ice|Geyser|Veil of Ice|Frost Scythe|Rimefang|Tremor|Sure Footing|Aegis of Granite|Stone Strike|Anther\\'s Call|Ring of Spears|Magnetic Ballista|Zephyr|Tailwind|Paeldryth\\'s Wrath|Shockwave|Swirling Winds|Vertigo|Air Lash|Thunderclap|Y\\'ntrel Sechra|Air Bubble|Blufmor Garaen)\n   58  matchre Sort.cleric (Protection from Evil|Minor Physical Protection|Shield of Light|Benediction|Major Physical Protection|Ghost Shroud|Halo|Soul Shield|Sanyu Lyba|Rejuvenation|Vigil|Soul Bonding|Auspice|Centering|Soul Attrition|Chill Spirit|Soul Sickness|Eylhaar\\'s Feast|Bitter Feast|Bless|Harm Evil|Phelim\\'s Sanction|Divine Radiance|Harm Horde|Curse of Zachriedek|Hand of Tenemlor|Malediction|Horn of the Black Unicorn|Ring of Blessings|Fists of Faenella|Hydra|Aesrela Everild|Heavenly Fires|Resurrection|Glythtide\\'s Gift|Murrula\\'s Flames|Fire of Ushnish|Sanctify Pattern|Uncurse|Huldah\\'s Pall|Persistence of Mana|Osrel Meraud|Meraud\\'s Cry|Idon\\'s Theft|Spite of Dergati)\n   59: matchre Sort.empath (Vitality Healing|Heal Wounds|Heal Scars|Heal|Regenerate|Fountain of Creation|Blood Staunching|Flush Poisons|Cure Disease|Adaptive Curing|Heart Link|Refresh|Raise Power|Gift of Life|Vigor|Paralysis|Lethargy|Innocence|Aesandry Darlaeth|Guardian Spirit|Iron Constitution|Aggressive Stance|Circle of Sympathy|Nissa\\'s Binding|Mental Focus|Compel|Tranquility|Awaken)\n   60  matchre Sort.bard (Abandoned Heart|Aether Wolves|Albreda\\'s Balm|Breath of Storms|Blessing of the Fae|Caress of the Sun|Damaris\\' Lullaby|Demrris\\' Resolve|Desert Maelstrom|Drums of the Snake|Echoes of Aether|Eillie\\'s Cry|Eye of Kertigen|Faenella\\'s Grace|Glythtide\\'s Joy|Harmony|Hodierna\\'s Lilt|Misdirection|Naming of Tears|Nexus|Phoenix\\'s Pyre|Rage of the Clans|Redeemer\\'s Pride|Resonance|Sanctuary|Soul Ablaze|Whispers of the Muse|Will of Winter|Words of the Wind)\n   61  matchre Sort.paladin (Courage|Righteous Wrath|Divine Guidance|Truffenyi\\'s Rally|Sentinel\\'s Resolve|Veteran Insight|Anti-Stun|Heroic Strength|Soldier\\'s Prayer|Divine Armor|Marshal Order|Bond Armaments|Halt|Stun Foe|Shatter|Banner of Truce|Hands of Justice|Rutilor\\'s Edge|Holy Warrior|Rebuke|Clarity|Smite Horde|Footman\\'s Strike|Alamhif\\'s Gift|Aspirant\\'s Aegis|Vessel of Salvation)\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\smithing.cmd:\n 1197       matchre set-chapter-2 This logbook is tracking a work order requiring you to craft (a metal broadsword|a metal namkomba|a metal arzfilt|a metal hunting sword|a metal kudalata|a metal nimsha|a metal spatha|a metal back-sword|a metal longsword|a metal recade|a metal round axe|a metal battle axe|a metal nehdalata|a metal robe sword|a metal condottiere|a metal falchion|a metal cinquedea|a metal schiavona|a metal abassi|a metal hurling axe|a metal dagasse)\\.  You must bundle\n 1198       matchre set-chapter-3 This logbook is tracking a work order requiring you to craft (a metal two-handed sword|a metal kaskara|a metal warring axe|a metal shh'oi'ata|a metal marauder blade|a metal greatsword|a metal greataxe|a metal flamberge|a metal claymore|a metal periperiu sword|a metal karambit|a metal double axe|a metal twin-point axe|a metal igorat axe)\\.  You must bundle\n 1199:      matchre set-chapter-4 This logbook is tracking a work order requiring you to craft (a metal cudgel|a metal bola|a metal prod|a metal cuska|a metal cosh|a metal bulhawf|a metal gavel|a metal komno|a metal bludgeon|a metal hhr'tami|a metal hand mallet|a spiked metal club|a metal scepter|a spiked metal hammer|a metal zubke|a spiked metal mace|a spiked metal gauntlet|a metal marlingspike|a short metal hammer|a metal mace|a metal club|a metal belaying pin|a metal hand mace|a metal war hammer|a ridged metal gauntlet|a metal boomerang|a metal garz|a metal boko|a metal war club|a flanged metal mace|a metal mallet|a metal k'trinni sha-tai|a metal throwing club)\\.  You must bundle\n 1200       matchre set-chapter-5 This logbook is tracking a work order requiring you to craft (a metal horseman's flail|a metal morning star|a heavy metal chain|a spiked metal hara|a metal ball and chain|a spiked ball and chain|a metal greathammer|a metal ukabi|a heavy metal mace|a metal throwing hammer|a metal imperial war hammer|a metal throwing mallet|a double-headed hammer|a hurlable war hammer|a metal hara|a metal hhr'ata|a heavy metal mallet|a metal sledgehammer)\\.  You must bundle\n 1201       matchre set-chapter-6 This logbook is tracking a work order requiring you to craft (a metal footman's flail|a metal two-headed hammer|a metal akabo|a metal maul|double-sided ball and chain|a heavy sledgehammer|a metal war mattock|a metal dire mace|a metal vilks kodur|a giant metal mallet)\\.  You must bundle\n ....\n 1213       matchre set-chapter-1 This logbook is tracking a work order requiring you to craft (a metal ring mask|a metal ring vest|a metal ring aventail|a metal ring mantle|some metal ring gloves|a metal ring lorica|a metal chain mask|some metal mail vambraces|a metal ring cap|some metal chain sleeves|a metal chain aventail|a metal mail tasset|some metal chain gloves|a metal chain vest|a metal mail mask|a metal chain mantle|a metal chain cap|a metal chain lorica|a metal mail aventail|a metal ring robe|a metal ring helm|a metal ring shirt|some metal ring greaves|a mail balaclava|a metal mail cap|some metal mail sleeves|a metal chain helm|a metal mail vest|a metal ring balaclava|a metal mail mantle|some metal chain greaves|a metal mail lorica|some metal ring vambraces|a metal chain robe|a metal ring tasset|a metal chain shirt|some metal mail gloves|a metal ring hauberk|a metal mail helm|a metal mail robe|a metal chain balaclava|a metal mail shirt|some metal mail greaves|a metal chain hauberk|some metal chain vambraces|a metal mail hauberk|some metal ring sleeves|a metal chain tasset|a metal bar-mail hauberk)\\ from any material\\.  You must bundle\n 1214       matchre set-chapter-2 This logbook is tracking a work order requiring you to craft (a metal scale mask|some brigandine sleeves|a metal scale aventail|a metal lamellar balaclava|some metal scale gloves|some lamellar vambraces|a metal brigandine mask|a metal lamellar tasset|a metal brigandine aventail|a metal scale vest|a metal scale cap|a metal scale mantle|some brigandine gloves|a metal scale lorica|some metal scale greaves|a brigandine shirt|a metal lamellar mask|a brigandine robe|a metal lamellar aventail|some lamellar sleeves|a metal brigandine cap|a metal brigandine vest|a metal scale helm|a metal brigandine mantle|some metal lamellar gloves|a metal brigandine lorica|some brigandine greaves|a metal scale robe|a metal lamellar cap|a metal scale shirt|a metal brigandine helm|a metal lamellar shirt|a metal scale balaclava|a brigandine hauberk|some metal scale vambraces|a metal lamellar robe|a metal scale tasset|a metal lamellar vest|some metal scale sleeves|a metal lamellar mantle|some lamellar greaves|a metal lamellar lorica|a metal lamellar helm|a metal scale hauberk|a brigandine balaclava|a lamellar hauberk|some brigandine vambraces|a metal brigandine tasset|a laminar hauberk)\\ from any material\\. *You must bundle\n 1215:      matchre set-chapter-3 This logbook is tracking a work order requiring you to craft (a light plate mask|a metal sallet|a light plate aventail|some light plate greaves|a plate mask|a metal great helm|a metal dome helm|some heavy plate greaves|a plate aventail|some heavy plate vambraces|some light plate gauntlets|some plate sleeves|a heavy plate mask|a metal heavy backplate|a metal morion|a heavy plate fauld|a heavy plate aventail|a metal breastplate|some plate gauntlets|a light plate cuirass|a metal bascinet|some heavy plate sleeves|a metal barbute|a heavy breastplate|heavy plate gauntlets|a plate cuirass|a metal visored helm|some light field plate|some light plate vambraces|some light half plate|a light backplate|a heavy plate cuirass|a light plate fauld|some field plate|a metal closed helm|some half plate|a metal armet|some light full plate|some plate greaves|some heavy field plate|some plate vambraces|some full plate|some light plate sleeves|some heavy half plate|a metal backplate|some heavy full plate|a plate fauld|a light breastplate|some heavy fluted plate)\\ from any material\\. *You must bundle\n 1216       matchre set-chapter-4 This logbook is tracking a work order requiring you to craft (a metal shield handle|a metal ceremonial shield|a metal shield boss|a metal kite shield|a metal targe|a metal skirmisher's shield|a metal ordinary shield|a metal jousting shield|a metal round sipar|a metal tower shield|a metal medium shield|a metal warrior's shield|a metal triangular sipar|a metal aegis|a metal target shield|a metal heater shield|a metal oval shield|a metal battle shield|a metal medium buckler|a metal war shield|a metal circular buckler|a metal curved shield)\n 1217       matchwait\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\ways.cmd:\n   14      echo = Valid Destination names:\n   15      echo = Dor'na'torna - Dornatorna - Hibarnhvidar - Hib - Cherulisa\n   16:     echo = Erekinzil - Taisgath - Ratha - Lomtaun - Cartman - Undarverjah - Underweargnome\n   17      echo = Tamigen - Raven'sPoint - RavenPoint - Raven - RP\n   18      echo = Rolagi - Crossing - Xing - Kssarh\n   ..\n  235      setDestination_Ratha:\n  236      setDestinatoin_Cartman:\n  237:     setDestination_Lomtaun:\n  238      setDestination_Undarverjah:\n  239      setDestination_Underweargnome:\n  ...\n  750      setDestination100_Ratha:\n  751      setDestinatoin_Cartman:\n  752:     setDestination100_Lomtaun:\n  753      setDestination100_Undarverjah:\n  754      setDestination100_Underweargnome:\n\nE:\\Google Drive\\Lich\\scripts\\fbigshot.lic:\n 1657              $OPF__TOOLTIPS.set_tip($OPF__ENTRY['g_disable_commands'], commands_tip, \"\")\n 1658   \n 1659:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1660              $OPF__TOOLTIPS.set_tip($OPF__ENTRY['signs'], signs_tip, \"\")\n 1661   \n ....\n 1731   \n 1732  elsif( script.vars[1] =~ /head/i )\n 1733:     # launch DRb server\n 1734      DRb.start_service( nil, Group.new )\n 1735      uri = DRb.uri\n 1736      Thread.new { DRb.thread.join }\n 1737   \n 1738:     # launch DRb client\n 1739      DRb.start_service()\n 1740      bs = Bigshot.new()\n\nE:\\Google Drive\\Lich\\scripts\\GameObjAdd.lic:\n   86  if GameObj.type_data['noncorporeal'].nil?\n   87  	GameObj.type_data['noncorporeal'] = {:name=>'test'}\n   88: 	GameObj.type_data['noncorporeal'][:name] = Regexp.new(/(?:banshee|barghest|bog wraith|dark apparition|darkwoode|death dirge|eidolon|elder tree spirit|ethereal mage apprentice|ethereal triton sentry|fallen crusader|firephantom|gaunt spectral servant|ghost wolf|ghost|ghostly mara|ghostly pooka|ghostly warrior|ice wraith|lesser frost shade|lesser shade|lost soul|mist wraith|moaning phantom|moaning spirit|naisirc|night mare|nightmare steed|phantasma|phantasmal bestial swordsman|phantom|revenant|seraceris|shadow mare|shadow steed|shadowy spectre|snow spectre|spectral fisherman|spectral lord|spectral miner|spectral monk|spectral shade|spectral triton defender|spectral warrior|spectral woodsman|spectre|tree spirit|troll wraith|warrior shade|wind wraith|wolfshade|wraith|#{ReimNpcs})$/)\n   89  end\n\nE:\\Google Drive\\Lich\\scripts\\glitch.rbw:\n  176        return :return => (r > 0 ? true : false), :hProcess => lpProcessInformation[0], :hThread => lpProcessInformation[1], :dwProcessId => lpProcessInformation[2], :dwThreadId => lpProcessInformation[3]\n  177      end\n  178: #   Win32.CreateProcess(:lpApplicationName => 'Launcher.exe', :lpCommandLine => 'lich2323.sal', :lpCurrentDirectory => 'C:\\\\PROGRA~1\\\\SIMU')\n  179  #   def Win32.OpenProcess(args={})\n  180  #     return Kernel32.OpenProcess(args[:dwDesiredAccess].to_i, args[:bInheritHandle].to_i, args[:dwProcessId].to_i)\n  ...\n  747      end\n  748    end\n  749:   def Lich.get_simu_launcher\n  750      if defined?(Win32)\n  751        begin\n  752:         launcher_key = Win32.RegOpenKeyEx(:hKey => Win32::HKEY_LOCAL_MACHINE, :lpSubKey => 'Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command', :samDesired => (Win32::KEY_ALL_ACCESS|Win32::KEY_WOW64_32KEY))[:phkResult]\n  753:         launcher_cmd = Win32.RegQueryValueEx(:hKey => launcher_key, :lpValueName => 'RealCommand')[:lpData]\n  754:         if launcher_cmd.nil? or launcher_cmd.empty?\n  755:           launcher_cmd = Win32.RegQueryValueEx(:hKey => launcher_key)[:lpData]\n  756          end\n  757:         return launcher_cmd\n  758        ensure\n  759:         Win32.RegCloseKey(:hKey => launcher_key) rescue nil\n  760        end\n  761      elsif defined?(Wine)\n  762:       launcher_cmd = Wine.registry_gets('HKEY_LOCAL_MACHINE\\\\Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command\\\\RealCommand')\n  763:       unless launcher_cmd and not launcher_cmd.empty?\n  764:         launcher_cmd = Wine.registry_gets('HKEY_LOCAL_MACHINE\\\\Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command\\\\')\n  765        end\n  766:       return launcher_cmd\n  767      else\n  768        return nil\n  ...\n  773        if Win32.admin?\n  774          begin\n  775:           launcher_key = Win32.RegOpenKeyEx(:hKey => Win32::HKEY_LOCAL_MACHINE, :lpSubKey => 'Software\\\\Simutronics\\\\Launcher', :samDesired => (Win32::KEY_ALL_ACCESS|Win32::KEY_WOW64_32KEY))[:phkResult]\n  776:           r = Win32.RegQueryValueEx(:hKey => launcher_key, :lpValueName => 'RealDirectory')\n  777            if (r[:return] == 0) and not r[:lpData].empty?\n  778              # already linked\n  ...\n  784              return false\n  785            end\n  786:           new_launcher_dir = \"\\\"#{r[:lpFilename]}\\\" \\\"#{File.expand_path($PROGRAM_NAME)}\\\" \"\n  787:           r = Win32.RegQueryValueEx(:hKey => launcher_key, :lpValueName => 'Directory')\n  788:           launcher_dir = r[:lpData]\n  789:           r = Win32.RegSetValueEx(:hKey => launcher_key, :lpValueName => 'RealDirectory', :dwType => Win32::REG_SZ, :lpData => launcher_dir)\n  790            return false unless (r == 0)\n  791:           r = Win32.RegSetValueEx(:hKey => launcher_key, :lpValueName => 'Directory', :dwType => Win32::REG_SZ, :lpData => new_launcher_dir)\n  792            return (r == 0)\n  793          ensure\n  794:           Win32.RegCloseKey(:hKey => launcher_key) rescue nil\n  795          end\n  796        else\n  ...\n  813        end\n  814      elsif defined?(Wine)\n  815:       launch_dir = Wine.registry_gets('HKEY_LOCAL_MACHINE\\\\Software\\\\Simutronics\\\\Launcher\\\\Directory')\n  816:       return false unless launch_dir\n  817:       lich_launch_dir = \"#{File.expand_path($PROGRAM_NAME)} --wine=#{Wine::BIN} --wine-prefix=#{Wine::PREFIX}  \"\n  818        result = true\n  819:       if launch_dir\n  820:         if launch_dir =~ /lich/i\n  821            $stdout.puts \"--- warning: Lich appears to already be installed to the registry\"\n  822            Lich.log \"warning: Lich appears to already be installed to the registry\"\n  823:           Lich.log 'info: launch_dir: ' + launch_dir\n  824          else\n  825:           result = result && Wine.registry_puts('HKEY_LOCAL_MACHINE\\\\Software\\\\Simutronics\\\\Launcher\\\\RealDirectory', launch_dir)\n  826:           result = result && Wine.registry_puts('HKEY_LOCAL_MACHINE\\\\Software\\\\Simutronics\\\\Launcher\\\\Directory', lich_launch_dir)\n  827          end\n  828        end\n  ...\n  836        if Win32.admin?\n  837          begin\n  838:           launcher_key = Win32.RegOpenKeyEx(:hKey => Win32::HKEY_LOCAL_MACHINE, :lpSubKey => 'Software\\\\Simutronics\\\\Launcher', :samDesired => (Win32::KEY_ALL_ACCESS|Win32::KEY_WOW64_32KEY))[:phkResult]\n  839:           real_directory = Win32.RegQueryValueEx(:hKey => launcher_key, :lpValueName => 'RealDirectory')[:lpData]\n  840            if real_directory.nil? or real_directory.empty?\n  841              # not linked\n  842              return true\n  843            end\n  844:           r = Win32.RegSetValueEx(:hKey => launcher_key, :lpValueName => 'Directory', :dwType => Win32::REG_SZ, :lpData => real_directory)\n  845            return false unless (r == 0)\n  846:           r = Win32.RegDeleteValue(:hKey => launcher_key, :lpValueName => 'RealDirectory')\n  847            return (r == 0)\n  848          ensure\n  849:           Win32.RegCloseKey(:hKey => launcher_key) rescue nil\n  850          end\n  851        else\n  ...\n  868        end\n  869      elsif defined?(Wine)\n  870:       real_launch_dir = Wine.registry_gets('HKEY_LOCAL_MACHINE\\\\Software\\\\Simutronics\\\\Launcher\\\\RealDirectory')\n  871        result = true\n  872:       if real_launch_dir and not real_launch_dir.empty?\n  873:         result = result && Wine.registry_puts('HKEY_LOCAL_MACHINE\\\\Software\\\\Simutronics\\\\Launcher\\\\Directory', real_launch_dir)\n  874:         result = result && Wine.registry_puts('HKEY_LOCAL_MACHINE\\\\Software\\\\Simutronics\\\\Launcher\\\\RealDirectory', '')\n  875        end\n  876        return result\n  ...\n  884          begin\n  885            # fixme: 64 bit browsers?\n  886:           launcher_key = Win32.RegOpenKeyEx(:hKey => Win32::HKEY_LOCAL_MACHINE, :lpSubKey => 'Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command', :samDesired => (Win32::KEY_ALL_ACCESS|Win32::KEY_WOW64_32KEY))[:phkResult]\n  887:           r = Win32.RegQueryValueEx(:hKey => launcher_key, :lpValueName => 'RealCommand')\n  888            if (r[:return] == 0) and not r[:lpData].empty?\n  889              # already linked\n  ...\n  895              return false\n  896            end\n  897:           new_launcher_cmd = \"\\\"#{r[:lpFilename]}\\\" \\\"#{File.expand_path($PROGRAM_NAME)}\\\" %1\"\n  898:           r = Win32.RegQueryValueEx(:hKey => launcher_key)\n  899:           launcher_cmd = r[:lpData]\n  900:           r = Win32.RegSetValueEx(:hKey => launcher_key, :lpValueName => 'RealCommand', :dwType => Win32::REG_SZ, :lpData => launcher_cmd)\n  901            return false unless (r == 0)\n  902:           r = Win32.RegSetValueEx(:hKey => launcher_key, :dwType => Win32::REG_SZ, :lpData => new_launcher_cmd)\n  903            return (r == 0)\n  904          ensure\n  905:           Win32.RegCloseKey(:hKey => launcher_key) rescue nil\n  906          end\n  907        else\n  ...\n  924        end\n  925      elsif defined?(Wine)\n  926:       launch_cmd = Wine.registry_gets('HKEY_LOCAL_MACHINE\\\\Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command\\\\')\n  927:       return false unless launch_cmd\n  928:       new_launch_cmd = \"#{File.expand_path($PROGRAM_NAME)} --wine=#{Wine::BIN} --wine-prefix=#{Wine::PREFIX} %1\"\n  929        result = true\n  930:       if launch_cmd\n  931:         if launch_cmd =~ /lich/i\n  932            $stdout.puts \"--- warning: Lich appears to already be installed to the registry\"\n  933            Lich.log \"warning: Lich appears to already be installed to the registry\"\n  934:           Lich.log 'info: launch_cmd: ' + launch_cmd\n  935          else\n  936:           result = result && Wine.registry_puts('HKEY_LOCAL_MACHINE\\\\Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command\\\\RealCommand', launch_cmd)\n  937:           result = result && Wine.registry_puts('HKEY_LOCAL_MACHINE\\\\Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command\\\\', new_launch_cmd)\n  938          end\n  939        end\n  ...\n  947        if Win32.admin?\n  948          begin\n  949:           launcher_key = Win32.RegOpenKeyEx(:hKey => Win32::HKEY_LOCAL_MACHINE, :lpSubKey => 'Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command', :samDesired => (Win32::KEY_ALL_ACCESS|Win32::KEY_WOW64_32KEY))[:phkResult]\n  950:           real_directory = Win32.RegQueryValueEx(:hKey => launcher_key, :lpValueName => 'RealCommand')[:lpData]\n  951            if real_directory.nil? or real_directory.empty?\n  952              # not linked\n  953              return true\n  954            end\n  955:           r = Win32.RegSetValueEx(:hKey => launcher_key, :dwType => Win32::REG_SZ, :lpData => real_directory)\n  956            return false unless (r == 0)\n  957:           r = Win32.RegDeleteValue(:hKey => launcher_key, :lpValueName => 'RealCommand')\n  958            return (r == 0)\n  959          ensure\n  960:           Win32.RegCloseKey(:hKey => launcher_key) rescue nil\n  961          end\n  962        else\n  ...\n  979        end\n  980      elsif defined?(Wine)\n  981:       real_launch_cmd = Wine.registry_gets('HKEY_LOCAL_MACHINE\\\\Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command\\\\RealCommand')\n  982        result = true\n  983:       if real_launch_cmd and not real_launch_cmd.empty?\n  984:         result = result && Wine.registry_puts('HKEY_LOCAL_MACHINE\\\\Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command\\\\', real_launch_cmd)\n  985:         result = result && Wine.registry_puts('HKEY_LOCAL_MACHINE\\\\Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command\\\\RealCommand', '')\n  986        end\n  987        return result\n  ...\n 1099      nil\n 1100    end\n 1101:   def Lich.win32_launch_method\n 1102      begin\n 1103:       val = Lich.db.get_first_value(\"SELECT value FROM lich_settings WHERE name='win32_launch_method';\")\n 1104      rescue SQLite3::BusyException\n 1105        sleep 0.1\n ....\n 1108      val\n 1109    end\n 1110:   def Lich.win32_launch_method=(val)\n 1111      begin\n 1112:       Lich.db.execute(\"INSERT OR REPLACE INTO lich_settings(name,value) values('win32_launch_method',?);\", val.to_s.encode('UTF-8'))\n 1113      rescue SQLite3::BusyException\n 1114        sleep 0.1\n ....\n 6417      end\n 6418      $sftowiz_multiline = nil\n 6419:     if line =~ /<LaunchURL src=\"(.*?)\" \\/>/\n 6420        $_CLIENT_.puts \"\\034GSw00005\\r\\nhttps://www.play.net#{$1}\\r\\n\"\n 6421      end\n ....\n 6707        respond \"--- Lich: offline mode: ignoring #{client_string}\"\n 6708      else\n 6709:       client_string = \"#{$cmd_prefix}bbs\" if ($frontend =~ /^(?:wizard|avalon)$/) and (client_string == \"#{$cmd_prefix}\\egbbk\\n\") # launch forum\n 6710        Game._puts client_string\n 6711      end\n ....\n 9747  #\n 9748  \n 9749: ARGV.delete_if { |arg| arg =~ /launcher\\.exe/i } # added by Simutronics Game Entry\n 9750  \n 9751  argv_options = Hash.new\n ....\n 10334  if argv_options[:sal]\n 10335    unless File.exists?(argv_options[:sal])\n 10336:     Lich.log \"error: launch file does not exist: #{argv_options[:sal]}\"\n 10337:     Lich.msgbox \"error: launch file does not exist: #{argv_options[:sal]}\"\n 10338      exit\n 10339    end\n 10340:   Lich.log \"info: launch file: #{argv_options[:sal]}\"\n 10341    if argv_options[:sal] =~ /SGE\\.sal/i\n 10342:     unless launcher_cmd = Lich.get_simu_launcher\n 10343:       $stdout.puts 'error: failed to find the Simutronics launcher'\n 10344:       Lich.log 'error: failed to find the Simutronics launcher'\n 10345        exit\n 10346      end\n 10347:     launcher_cmd.sub!('%1', argv_options[:sal])\n 10348:     Lich.log \"info: launcher_cmd: #{launcher_cmd}\"\n 10349:     if defined?(Win32) and launcher_cmd =~ /^\"(.*?)\"\\s*(.*)$/\n 10350        dir_file = $1\n 10351        param = $2\n .....\n 10358        end\n 10359      elsif defined?(Wine)\n 10360:       system(\"#{Wine::BIN} #{launcher_cmd}\")\n 10361      else\n 10362:       system(launcher_cmd)\n 10363      end\n 10364      exit\n .....\n 10480    $lich_char = Regexp.escape($clean_lich_char)\n 10481  \n 10482:   launch_data = nil\n 10483  \n 10484    if ARGV.include?('--login')\n .....\n 10580                if response =~ /^L\\t/\n 10581                  login_server.close unless login_server.closed?\n 10582:                 launch_data = response.sub(/^L\\tOK\\t/, '').split(\"\\t\")\n 10583                  if data[:frontend] == 'wizard'\n 10584:                   launch_data.collect! { |line| line.sub(/GAMEFILE=.+/, 'GAMEFILE=WIZARD.EXE').sub(/GAME=.+/, 'GAME=WIZ').sub(/FULLGAMENAME=.+/, 'FULLGAMENAME=Wizard Front End') }\n 10585                  end\n 10586:                 if data[:custom_launch]\n 10587:                   launch_data.push \"CUSTOMLAUNCH=#{data[:custom_launch]}\"\n 10588:                   if data[:custom_launch_dir]\n 10589:                     launch_data.push \"CUSTOMLAUNCHDIR=#{data[:custom_launch_dir]}\"\n 10590                    end\n 10591                  end\n .....\n 10727                      if response =~ /^L\\t/\n 10728                        login_server.close unless login_server.closed?\n 10729:                       launch_data = response.sub(/^L\\tOK\\t/, '').split(\"\\t\")\n 10730                        if login_info[:frontend] == 'wizard'\n 10731:                         launch_data.collect! { |line| line.sub(/GAMEFILE=.+/, 'GAMEFILE=WIZARD.EXE').sub(/GAME=.+/, 'GAME=WIZ').sub(/FULLGAMENAME=.+/, 'FULLGAMENAME=Wizard Front End') }\n 10732                        end\n 10733:                       if login_info[:custom_launch]\n 10734:                         launch_data.push \"CUSTOMLAUNCH=#{login_info[:custom_launch]}\"\n 10735:                         if login_info[:custom_launch_dir]\n 10736:                           launch_data.push \"CUSTOMLAUNCHDIR=#{login_info[:custom_launch_dir]}\"\n 10737                          end\n 10738                        end\n .....\n 10858        frontend_box2.pack_start(frontend_option, false, false, 0)\n 10859  \n 10860:       launch_label = Gtk::Label.new('Launch method: ')\n 10861  \n 10862:       launch_option = Gtk::ComboBox.new(is_text_only = true)\n 10863:       launch_option.append_text('ShellExecute')\n 10864:       launch_option.append_text('spawn')\n 10865:       launch_option.append_text('system')\n 10866:       launch_option.active = 0\n 10867  \n 10868:       launch_box = Gtk::HBox.new(false, 10)\n 10869:       launch_box.pack_start(launch_label, false, false, 0)\n 10870:       launch_box.pack_start(launch_option, false, false, 0)\n 10871  \n 10872        frontend_box = Gtk::HBox.new(false, 10)\n .....\n 10876        frontend_box.pack_start(other_fe_option, false, false, 0)\n 10877  \n 10878:       use_simu_launcher_option = Gtk::CheckButton.new('Use the Simutronics Launcher')\n 10879:       use_simu_launcher_option.active = true\n 10880  \n 10881:       custom_launch_option = Gtk::CheckButton.new('Use a custom launch command')\n 10882:       custom_launch_entry = Gtk::ComboBoxEntry.new()\n 10883:       custom_launch_entry.child.text = \"(enter custom launch command)\"\n 10884:       custom_launch_entry.append_text(\"Wizard.Exe /GGS /H127.0.0.1 /P%port% /K%key%\")\n 10885:       custom_launch_entry.append_text(\"Stormfront.exe /GGS /H127.0.0.1 /P%port% /K%key%\")\n 10886:       custom_launch_dir = Gtk::ComboBoxEntry.new()\n 10887:       custom_launch_dir.child.text = \"(enter working directory for command)\"\n 10888:       custom_launch_dir.append_text(\"../wizard\")\n 10889:       custom_launch_dir.append_text(\"../StormFront\")\n 10890  \n 10891:       remember_use_simu_launcher_active = nil\n 10892:       revert_custom_launch_active = nil\n 10893        frontend_option.signal_connect('changed') {\n 10894          if ((frontend_option.active == 0) and not wizard_dir) or ((frontend_option.active == 1) and not stormfront_dir) or (frontend_option.active == 2) or (frontend_option.active == 3)\n 10895  #       if (frontend_option.active != 0) and (frontend_option.active != 1) # Wizard or Stormfront\n 10896:           if use_simu_launcher_option.sensitive?\n 10897:             remember_use_simu_launcher_active = use_simu_launcher_option.active?\n 10898:             use_simu_launcher_option.active = true\n 10899:             use_simu_launcher_option.sensitive = false\n 10900            end\n 10901:         elsif not use_simu_launcher_option.sensitive? and not custom_launch_option.active?\n 10902:           use_simu_launcher_option.sensitive = true\n 10903:           use_simu_launcher_option.active = remember_use_simu_launcher_active\n 10904          end\n 10905          if (frontend_option.active == 3) or ((frontend_option.active == 2) and not found_profanity)\n 10906:           if custom_launch_option.sensitive?\n 10907:             if not custom_launch_option.active?\n 10908:               revert_custom_launch_active = true\n 10909              else\n 10910:               revert_custom_launch_active = false\n 10911              end\n 10912:             custom_launch_option.active = true\n 10913:             custom_launch_option.sensitive = false\n 10914            end\n 10915:         elsif not custom_launch_option.sensitive?\n 10916:           custom_launch_option.sensitive = true\n 10917:           if revert_custom_launch_active\n 10918:             revert_custom_launch_active = false\n 10919:             custom_launch_option.active = false\n 10920            end\n 10921          end\n .....\n 10938  #     game_entry_tab.pack_start(frontend_box, false, false, 3)\n 10939        game_entry_tab.pack_start(frontend_box2, false, false, 3)\n 10940:       game_entry_tab.pack_start(launch_box, false, false, 3)\n 10941:       game_entry_tab.pack_start(use_simu_launcher_option, false, false, 3)\n 10942:       game_entry_tab.pack_start(custom_launch_option, false, false, 3)\n 10943:       game_entry_tab.pack_start(custom_launch_entry, false, false, 3)\n 10944:       game_entry_tab.pack_start(custom_launch_dir, false, false, 3)\n 10945        game_entry_tab.pack_start(make_quick_option, false, false, 3)\n 10946        game_entry_tab.pack_start(play_button_box, false, false, 3)\n 10947  \n 10948:       custom_launch_option.signal_connect('toggled') {\n 10949:         custom_launch_entry.visible = custom_launch_option.active?\n 10950:         custom_launch_dir.visible = custom_launch_option.active?\n 10951:         if custom_launch_option.active?\n 10952:           if use_simu_launcher_option.sensitive?\n 10953:             remember_use_simu_launcher_active = use_simu_launcher_option.active?\n 10954:             use_simu_launcher_option.active = false\n 10955:             use_simu_launcher_option.sensitive = false\n 10956            end\n 10957:         elsif not use_simu_launcher_option.sensitive? and ((frontend_option.active == 0) or (frontend_option.active == 1) or ((frontend_option.active == 2) and not found_profanity))\n 10958:           use_simu_launcher_option.sensitive = true\n 10959:           use_simu_launcher_option.active = remember_use_simu_launcher_active\n 10960          end\n 10961        }\n .....\n 11082              host = /GAMEHOST=([^\\t\\n]+)/.match(response).captures.first\n 11083              key = /KEY=([^\\t\\n]+)/.match(response).captures.first\n 11084:             launch_data = response.sub(/^L\\tOK\\t/, '').split(\"\\t\")\n 11085              login_server.close unless login_server.closed?\n 11086              if wizard_option.active?\n 11087:               launch_data.collect! { |line| line.sub(/GAMEFILE=.+/, \"GAMEFILE=WIZARD.EXE\").sub(/GAME=.+/, \"GAME=WIZ\") }\n 11088              elsif suks_option.active?\n 11089:               launch_data.collect! { |line| line.sub(/GAMEFILE=.+/, \"GAMEFILE=WIZARD.EXE\").sub(/GAME=.+/, \"GAME=SUKS\") }\n 11090              end\n 11091:             if custom_launch_option.active?\n 11092:               launch_data.push \"CUSTOMLAUNCH=#{custom_launch_entry.child.text}\"\n 11093:               unless custom_launch_dir.child.text.empty? or custom_launch_dir.child.text == \"(enter working directory for command)\"\n 11094:                 launch_data.push \"CUSTOMLAUNCHDIR=#{custom_launch_dir.child.text}\"\n 11095                end\n 11096              end\n .....\n 11101                  frontend = 'stormfront'\n 11102                end\n 11103:               if custom_launch_option.active?\n 11104:                 custom_launch = custom_launch_entry.child.text\n 11105:                 if custom_launch_dir.child.text.empty? or custom_launch_dir.child.text == \"(enter working directory for command)\"\n 11106:                   custom_launch_dir = nil\n 11107                  else\n 11108:                   custom_launch_dir = custom_launch_dir.child.text\n 11109                  end\n 11110                else\n 11111:                 custom_launch = nil\n 11112:                 custom_launch_dir = nil\n 11113                end\n 11114:               entry_data.push h={ :char_name => treeview.selection.selected[3], :game_code => treeview.selection.selected[0], :game_name => treeview.selection.selected[1], :user_id => account_name_entry.text, :password => password_entry.text, :frontend => frontend, :custom_launch => custom_launch, :custom_launch_dir => custom_launch_dir }\n 11115                save_entry_data = true\n 11116              end\n .....\n 11197        #frontend_box.pack_start(suks_option, false, false, 0)\n 11198  \n 11199:       custom_launch_option = Gtk::CheckButton.new('Custom launch command')\n 11200:       custom_launch_entry = Gtk::ComboBoxEntry.new()\n 11201:       custom_launch_entry.child.text = \"(enter custom launch command)\"\n 11202:       custom_launch_entry.append_text(\"Wizard.Exe /GGS /H127.0.0.1 /P%port% /K%key%\")\n 11203:       custom_launch_entry.append_text(\"Stormfront.exe /GGS /H127.0.0.1 /P%port% /K%key%\")\n 11204:       custom_launch_dir = Gtk::ComboBoxEntry.new()\n 11205:       custom_launch_dir.child.text = \"(enter working directory for command)\"\n 11206:       custom_launch_dir.append_text(\"../wizard\")\n 11207:       custom_launch_dir.append_text(\"../StormFront\")\n 11208  \n 11209        make_quick_option = Gtk::CheckButton.new('Save this info for quick game entry')\n .....\n 11221        game_entry_tab.pack_start(sw, true, true, 3)\n 11222        game_entry_tab.pack_start(frontend_box, false, false, 3)\n 11223:       game_entry_tab.pack_start(custom_launch_option, false, false, 3)\n 11224:       game_entry_tab.pack_start(custom_launch_entry, false, false, 3)\n 11225:       game_entry_tab.pack_start(custom_launch_dir, false, false, 3)\n 11226        game_entry_tab.pack_start(make_quick_option, false, false, 3)\n 11227        game_entry_tab.pack_start(play_button_box, false, false, 3)\n 11228  \n 11229:       custom_launch_option.signal_connect('toggled') {\n 11230:         custom_launch_entry.visible = custom_launch_option.active?\n 11231:         custom_launch_dir.visible = custom_launch_option.active?\n 11232        }\n 11233  \n .....\n 11353              host = /GAMEHOST=([^\\t\\n]+)/.match(response).captures.first\n 11354              key = /KEY=([^\\t\\n]+)/.match(response).captures.first\n 11355:             launch_data = response.sub(/^L\\tOK\\t/, '').split(\"\\t\")\n 11356              login_server.close unless login_server.closed?\n 11357              if wizard_option.active?\n 11358:               launch_data.collect! { |line| line.sub(/GAMEFILE=.+/, \"GAMEFILE=WIZARD.EXE\").sub(/GAME=.+/, \"GAME=WIZ\") }\n 11359              elsif suks_option.active?\n 11360:               launch_data.collect! { |line| line.sub(/GAMEFILE=.+/, \"GAMEFILE=WIZARD.EXE\").sub(/GAME=.+/, \"GAME=SUKS\") }\n 11361              end\n 11362:             if custom_launch_option.active?\n 11363:               launch_data.push \"CUSTOMLAUNCH=#{custom_launch_entry.child.text}\"\n 11364:               unless custom_launch_dir.child.text.empty? or custom_launch_dir.child.text == \"(enter working directory for command)\"\n 11365:                 launch_data.push \"CUSTOMLAUNCHDIR=#{custom_launch_dir.child.text}\"\n 11366                end\n 11367              end\n .....\n 11372                  frontend = 'stormfront'\n 11373                end\n 11374:               if custom_launch_option.active?\n 11375:                 custom_launch = custom_launch_entry.child.text\n 11376:                 if custom_launch_dir.child.text.empty? or custom_launch_dir.child.text == \"(enter working directory for command)\"\n 11377:                   custom_launch_dir = nil\n 11378                  else\n 11379:                   custom_launch_dir = custom_launch_dir.child.text\n 11380                  end\n 11381                else\n 11382:                 custom_launch = nil\n 11383:                 custom_launch_dir = nil\n 11384                end\n 11385:               entry_data.push h={ :char_name => treeview.selection.selected[3], :game_code => treeview.selection.selected[0], :game_name => treeview.selection.selected[1], :user_id => user_id_entry.text, :password => pass_entry.text, :frontend => frontend, :custom_launch => custom_launch, :custom_launch_dir => custom_launch_dir }\n 11386                save_entry_data = true\n 11387              end\n .....\n 11430        web_box.pack_start(web_button_box, true, true, 5)\n 11431  \n 11432:       web_frame = Gtk::Frame.new('Website Launch Chain')\n 11433        web_frame.add(web_box)\n 11434  \n .....\n 11446        sge_box.pack_start(sge_button_box, true, true, 5)\n 11447  \n 11448:       sge_frame = Gtk::Frame.new('SGE Launch Chain')\n 11449        sge_frame.add(sge_box)\n 11450  \n .....\n 11465          if defined?(Win32)\n 11466            begin\n 11467:             key = Win32.RegOpenKeyEx(:hKey => Win32::HKEY_LOCAL_MACHINE, :lpSubKey => 'Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command', :samDesired => (Win32::KEY_ALL_ACCESS|Win32::KEY_WOW64_32KEY))[:phkResult]\n 11468:             web_launch_cmd = Win32.RegQueryValueEx(:hKey => key)[:lpData]\n 11469:             real_web_launch_cmd = Win32.RegQueryValueEx(:hKey => key, :lpValueName => 'RealCommand')[:lpData]\n 11470            rescue\n 11471:             web_launch_cmd = String.new\n 11472:             real_web_launch_cmd = String.new\n 11473            ensure\n 11474              Win32.RegCloseKey(:hKey => key) rescue nil\n 11475            end\n 11476            begin\n 11477:             key = Win32.RegOpenKeyEx(:hKey => Win32::HKEY_LOCAL_MACHINE, :lpSubKey => 'Software\\\\Simutronics\\\\Launcher', :samDesired => (Win32::KEY_ALL_ACCESS|Win32::KEY_WOW64_32KEY))[:phkResult]\n 11478:             sge_launch_cmd = Win32.RegQueryValueEx(:hKey => key, :lpValueName => 'Directory')[:lpData]\n 11479:             real_sge_launch_cmd = Win32.RegQueryValueEx(:hKey => key, :lpValueName => 'RealDirectory')[:lpData]\n 11480            rescue\n 11481:             sge_launch_cmd = String.new\n 11482:             real_launch_cmd = String.new\n 11483            ensure\n 11484              Win32.RegCloseKey(:hKey => key) rescue nil\n 11485            end\n 11486          elsif defined?(Wine)\n 11487:           web_launch_cmd = Wine.registry_gets('HKEY_LOCAL_MACHINE\\\\Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command\\\\').to_s\n 11488:           real_web_launch_cmd = Wine.registry_gets('HKEY_LOCAL_MACHINE\\\\Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command\\\\RealCommand').to_s\n 11489:           sge_launch_cmd = Wine.registry_gets('HKEY_LOCAL_MACHINE\\\\Software\\\\Simutronics\\\\Launcher\\\\Directory').to_s\n 11490:           real_sge_launch_cmd = Wine.registry_gets('HKEY_LOCAL_MACHINE\\\\Software\\\\Simutronics\\\\Launcher\\\\RealDirectory').to_s\n 11491          else\n 11492:           web_launch_cmd = String.new\n 11493:           sge_launch_cmd = String.new\n 11494          end\n 11495:         if web_launch_cmd =~ /lich/i\n 11496            link_to_web_button.sensitive = false\n 11497            unlink_from_web_button.sensitive = true\n 11498:           if real_web_launch_cmd =~ /launcher.exe/i\n 11499:             web_order_label.text = \"Website => Lich => Simu Launcher => Frontend\"\n 11500            else\n 11501              web_order_label.text = \"Website => Lich => Unknown\"\n 11502            end\n 11503:         elsif web_launch_cmd =~ /launcher.exe/i\n 11504:           web_order_label.text = \"Website => Simu Launcher => Frontend\"\n 11505            link_to_web_button.sensitive = true\n 11506            unlink_from_web_button.sensitive = false\n .....\n 11510            unlink_from_web_button.sensitive = false\n 11511          end\n 11512:         if sge_launch_cmd =~ /lich/i\n 11513            link_to_sge_button.sensitive = false\n 11514            unlink_from_sge_button.sensitive = true\n 11515:           if real_sge_launch_cmd and (defined?(Wine) or File.exists?(\"#{real_sge_launch_cmd}\\\\launcher.exe\"))\n 11516:             sge_order_label.text = \"SGE => Lich => Simu Launcher => Frontend\"\n 11517            else\n 11518              sge_order_label.text = \"SGE => Lich => Unknown\"\n 11519            end\n 11520:         elsif sge_launch_cmd and (defined?(Wine) or File.exists?(\"#{sge_launch_cmd}\\\\launcher.exe\"))\n 11521:           sge_order_label.text = \"SGE => Simu Launcher => Frontend\"\n 11522            link_to_sge_button.sensitive = true\n 11523            unlink_from_sge_button.sensitive = false\n .....\n 11753        window.show_all\n 11754  \n 11755:       custom_launch_entry.visible = false\n 11756:       custom_launch_dir.visible = false\n 11757  \n 11758        notebook.set_page(1) if entry_data.empty?\n .....\n 11768      entry_data = nil\n 11769  \n 11770:     unless launch_data\n 11771        Gtk.queue { Gtk.main_quit }\n 11772        Thread.kill\n .....\n 11785    if argv_options[:sal]\n 11786      begin\n 11787:       launch_data = File.open(argv_options[:sal]) { |file| file.readlines }.collect { |line| line.chomp }\n 11788      rescue\n 11789:       $stdout.puts \"error: failed to read launch_file: #{$!}\"\n 11790:       Lich.log \"info: launch_file: #{argv_options[:sal]}\"\n 11791:       Lich.log \"error: failed to read launch_file: #{$!}\\n\\t#{$!.backtrace.join(\"\\n\\t\")}\"\n 11792        exit\n 11793      end\n 11794    end\n 11795:   if launch_data\n 11796:     unless gamecode = launch_data.find { |line| line =~ /GAMECODE=/ }\n 11797:       $stdout.puts \"error: launch_data contains no GAMECODE info\"\n 11798:       Lich.log \"error: launch_data contains no GAMECODE info\"\n 11799        exit(1)\n 11800      end\n 11801:     unless gameport = launch_data.find { |line| line =~ /GAMEPORT=/ }\n 11802:       $stdout.puts \"error: launch_data contains no GAMEPORT info\"\n 11803:       Lich.log \"error: launch_data contains no GAMEPORT info\"\n 11804        exit(1)\n 11805      end\n 11806:     unless gamehost = launch_data.find { |opt| opt =~ /GAMEHOST=/ }\n 11807:       $stdout.puts \"error: launch_data contains no GAMEHOST info\"\n 11808:       Lich.log \"error: launch_data contains no GAMEHOST info\"\n 11809        exit(1)\n 11810      end\n 11811:     unless game = launch_data.find { |opt| opt =~ /GAME=/ }\n 11812:       $stdout.puts \"error: launch_data contains no GAME info\"\n 11813:       Lich.log \"error: launch_data contains no GAME info\"\n 11814        exit(1)\n 11815      end\n 11816:     if custom_launch = launch_data.find { |opt| opt =~ /CUSTOMLAUNCH=/ }\n 11817:       custom_launch.sub!(/^.*?\\=/, '')\n 11818:       Lich.log \"info: using custom launch command: #{custom_launch}\"\n 11819      end\n 11820:     if custom_launch_dir = launch_data.find { |opt| opt =~ /CUSTOMLAUNCHDIR=/ }\n 11821:       custom_launch_dir.sub!(/^.*?\\=/, '')\n 11822:       Lich.log \"info: using working directory for custom launch command: #{custom_launch_dir}\"\n 11823      end\n 11824      if ARGV.include?('--without-frontend')\n 11825        $frontend = 'unknown'\n 11826:       unless (game_key = launch_data.find { |opt| opt =~ /KEY=/ }) && (game_key = game_key.split('=').last.chomp)\n 11827:         $stdout.puts \"error: launch_data contains no KEY info\"\n 11828:         Lich.log \"error: launch_data contains no KEY info\"\n 11829          exit(1)\n 11830        end\n 11831      elsif game =~ /SUKS/i\n 11832        $frontend = 'suks'\n 11833:       unless (game_key = launch_data.find { |opt| opt =~ /KEY=/ }) && (game_key = game_key.split('=').last.chomp)\n 11834:         $stdout.puts \"error: launch_data contains no KEY info\"\n 11835:         Lich.log \"error: launch_data contains no KEY info\"\n 11836          exit(1)\n 11837        end\n 11838:     elsif custom_launch\n 11839:       unless (game_key = launch_data.find { |opt| opt =~ /KEY=/ }) && (game_key = game_key.split('=').last.chomp)\n 11840:         $stdout.puts \"error: launch_data contains no KEY info\"\n 11841:         Lich.log \"error: launch_data contains no KEY info\"\n 11842          exit(1)\n 11843        end\n 11844      else\n 11845:       unless launcher_cmd = Lich.get_simu_launcher\n 11846:         $stdout.puts 'error: failed to find the Simutronics launcher'\n 11847:         Lich.log 'error: failed to find the Simutronics launcher'\n 11848          exit(1)\n 11849        end\n .....\n 11883        accept_thread = Thread.new { $_CLIENT_ = SynchronizedSocket.new(listener.accept) }\n 11884        localport = listener.addr[1]\n 11885:       if custom_launch\n 11886          sal_filename = nil\n 11887:         launcher_cmd = custom_launch.sub(/\\%port\\%/, localport.to_s).sub(/\\%key\\%/, game_key.to_s)\n 11888:         scrubbed_launcher_cmd = custom_launch.sub(/\\%port\\%/, localport.to_s).sub(/\\%key\\%/, '[scrubbed key]')\n 11889:         Lich.log \"info: launcher_cmd: #{scrubbed_launcher_cmd}\"\n 11890        else\n 11891:         launch_data.collect! { |line| line.sub(/GAMEPORT=.+/, \"GAMEPORT=#{localport}\").sub(/GAMEHOST=.+/, \"GAMEHOST=localhost\") }\n 11892          sal_filename = \"#{TEMP_DIR}/lich#{rand(10000)}.sal\"\n 11893          while File.exists?(sal_filename)\n 11894            sal_filename = \"#{TEMP_DIR}/lich#{rand(10000)}.sal\"\n 11895          end\n 11896:         File.open(sal_filename, 'w') { |f| f.puts launch_data }\n 11897:         launcher_cmd = launcher_cmd.sub('%1', sal_filename)\n 11898:         launcher_cmd = launcher_cmd.tr('/', \"\\\\\") if (RUBY_PLATFORM =~ /mingw|win/i) and (RUBY_PLATFORM !~ /darwin/i)\n 11899        end\n 11900        begin\n 11901:         if custom_launch_dir\n 11902:           Dir.chdir(custom_launch_dir)\n 11903          end\n 11904          if defined?(Win32)\n 11905:           launcher_cmd =~ /^\"(.*?)\"\\s*(.*)$/\n 11906            dir_file = $1\n 11907            param = $2\n 11908            dir = dir_file.slice(/^.*[\\\\\\/]/)\n 11909            file = dir_file.sub(/^.*[\\\\\\/]/, '')\n 11910:           if Lich.win32_launch_method and Lich.win32_launch_method =~ /^(\\d+):(.+)$/\n 11911              method_num = $1.to_i\n 11912              if $2 == 'fail'\n .....\n 11918            if method_num == 5\n 11919              begin\n 11920:               key = Win32.RegOpenKeyEx(:hKey => Win32::HKEY_LOCAL_MACHINE, :lpSubKey => 'Software\\\\Classes\\\\Simutronics.Autolaunch\\\\Shell\\\\Open\\\\command', :samDesired => (Win32::KEY_ALL_ACCESS|Win32::KEY_WOW64_32KEY))[:phkResult]\n 11921:               if Win32.RegQueryValueEx(:hKey => key)[:lpData] =~ /Launcher\\.exe/i\n 11922                  associated = true\n 11923                else\n .....\n 11930              end\n 11931              unless associated\n 11932:               Lich.log \"warning: skipping launch method #{method_num + 1} because .sal files are not associated with the Simutronics Launcher\"\n 11933                method_num = (method_num + 1) % 6\n 11934              end\n 11935            end\n 11936:           Lich.win32_launch_method = \"#{method_num}:fail\"\n 11937            if method_num == 0\n 11938:             Lich.log \"info: launcher_cmd: #{launcher_cmd}\"\n 11939:             spawn launcher_cmd\n 11940            elsif method_num == 1\n 11941:             Lich.log \"info: launcher_cmd: Win32.ShellExecute(:lpOperation => \\\"open\\\", :lpFile => #{file.inspect}, :lpDirectory => #{dir.inspect}, :lpParameters => #{param.inspect})\"\n 11942              Win32.ShellExecute(:lpOperation => 'open', :lpFile => file, :lpDirectory => dir, :lpParameters => param)\n 11943            elsif method_num == 2\n 11944:             Lich.log \"info: launcher_cmd: Win32.ShellExecuteEx(:lpOperation => \\\"runas\\\", :lpFile => #{file.inspect}, :lpDirectory => #{dir.inspect}, :lpParameters => #{param.inspect})\"\n 11945              Win32.ShellExecuteEx(:lpOperation => 'runas', :lpFile => file, :lpDirectory => dir, :lpParameters => param)\n 11946            elsif method_num == 3\n 11947:             Lich.log \"info: launcher_cmd: Win32.AdminShellExecute(:op => \\\"open\\\", :file => #{file.inspect}, :dir => #{dir.inspect}, :params => #{param.inspect})\"\n 11948              Win32.AdminShellExecute(:op => 'open', :file => file, :dir => dir, :params => param)\n 11949            elsif method_num == 4\n 11950:             Lich.log \"info: launcher_cmd: Win32.AdminShellExecute(:op => \\\"runas\\\", :file => #{file.inspect}, :dir => #{dir.inspect}, :params => #{param.inspect})\"\n 11951              Win32.AdminShellExecute(:op => 'runas', :file => file, :dir => dir, :params => param)\n 11952            else # method_num == 5\n 11953              file = File.expand_path(sal_filename).tr('/', \"\\\\\")\n 11954              dir = File.expand_path(File.dirname(sal_filename)).tr('/', \"\\\\\")\n 11955:             Lich.log \"info: launcher_cmd: Win32.ShellExecute(:lpOperation => \\\"open\\\", :lpFile => #{file.inspect}, :lpDirectory => #{dir.inspect})\"\n 11956              Win32.ShellExecute(:lpOperation => 'open', :lpFile => file, :lpDirectory => dir)\n 11957            end\n 11958          elsif defined?(Wine)\n 11959:           Lich.log \"info: launcher_cmd: #{Wine::BIN} #{launcher_cmd}\"\n 11960:           spawn \"#{Wine::BIN} #{launcher_cmd}\"\n 11961          else\n 11962:           Lich.log \"info: launcher_cmd: #{launcher_cmd}\"\n 11963:           spawn launcher_cmd\n 11964          end\n 11965        rescue\n .....\n 11974          Lich.log \"error: timeout waiting for client to connect\"\n 11975          if defined?(Win32)\n 11976:           Lich.msgbox(:message => \"error: launch method #{method_num + 1} timed out waiting for the client to connect\\n\\nTry again and another method will be used.\", :icon => :error)\n 11977          else\n 11978            Lich.msgbox(:message => \"error: timeout waiting for client to connect\", :icon => :error)\n .....\n 11989        end\n 11990        if defined?(Win32)\n 11991:         Lich.win32_launch_method = \"#{method_num}:success\"\n 11992        end\n 11993        Lich.log 'info: connected'\n\nE:\\Google Drive\\Lich\\scripts\\gmcheck.cmd:\n   68  put ponder\n   69  delay 2\n   70: put say Bleh, I should just go, I need to do laundry.\n   71  exitnow:\n   72  delay 5\n\nE:\\Google Drive\\Lich\\scripts\\grguild.lic:\n  110  #$rgmethods.push(\"rg_hands_checker\") unless $rgmethods.include?(\"hands_checker\")\n  111  def rg_hands_checker\n  112: 	gweaps = [\"achlais\", \"adze\", \"angon\", \"awl\\-pike\", \"axe\", \"backsword\", \"baculus\", \"badelaire\", \"balestarius\", \"breastplate\",\"chain\", \"ball\\-and\\-chain\", \"ball\", \"balta\", \"bardiche\", \"baselard\", \"battle\\-axe\", \"battlesword\", \"bidenhander\", \"bilbo\", \"bill\", \"binnol\", \"bisacuta\", \"blackjack\", \"bodkin\", \"bola\", \"^bow$\", \"brandestoc\", \"braquemar\", \"broadsword\", \"bulawa\", \"bullwhip\", \"cat\\-o'\\-nine\\-tails\", \"cateia\", \"cestus\", \"chakram\", \"chereb\", \"cinquedea\", \"claidhmore\", \"claw\", \"cleaver\", \"club\", \"colichemarde\", \"contus\", \"craquemarte\", \"croc\", \"crook\", \"crosier\", \"crossbow\", \"crowbill\", \"cudgel\", \"cutlass\", \"dagger\", \"dart\", \"dhara\", \"dirk\", \"discus\", \"doloire\", \"dubh\", \"epee\", \"espadon\", \"estoc\", \"falarica\", \"falcastra\", \"falchion\", \"falx\", \"fang\", \"fauchard\", \"fist\\-scythe\", \"flail\", \"flamberge\", \"fleuret\", \"flyssa\", \"foil\", \"fork\", \"framea\", \"francisca\", \"fuscina\", \"gaesum\", \"gauche\", \"gauntlet\\-sword\", \"gladius\", \"glaive\", \"godendag\", \"goliah\", \"goupillon\", \"greataxe\", \"greatsword\", \"guisarme\", \"halberd\", \"half\\-moon\", \"hammer of kai\", \"hammer\", \"handaxe\", \"harpoon\", \"hatchet\", \"hippe\", \"hook\\-knife\", \"hoolurge\", \"jackblade\", \"jaculum\", \"javelin\", \"jeddart\\-axe\", \"jitte\", \"kai\", \"kama\", \"kaskara\", \"katana\", \"katar\", \"katzbalger\", \"kheten\", \"khopesh\", \"kilij\", \"knife\", \"knuckle\\-blade\", \"knuckle\\-duster\", \"korseke\", \"kozuka\", \"kris\", \"lance\", \"lisan\", \"longbow\", \"longsword\", \"mace\", \"machera\", \"machete\", \"magari\\-yari\", \"mail\", \"manople\", \"massuelle\", \"mattina\", \"mattock\", \"maul\", \"misericord\", \"^moon$\", \"nagimaki\", \"naginata\", \"^net$\", \"oncin\", \"paingrip\", \"palache\", \"parazonium\", \"partisan\", \"pavade\", \"pelta\", \"periperiu\", \"pernat\", \"^pick\", \"pike\", \"pill\", \"pilum\", \"poignard\", \"pugio\", \"quadrelle\", \"quoit\", \"ranseur\", \"rapier\", \"razorpaw\", \"runestaff\", \"runka\", \"sabar\", \"sabre\", \"^sai$\", \"^sap$\", \"sapara\", \"sarissa\", \"scepter\", \"schiavona\", \"schlager\", \"scimitar\", \"scorpion\", \"scramasax\", \"scythe\", \"seax\", \"shail\", \"shillelagh\", \"sica\", \"sledgehammer\", \"spadroon\", \"sparte\", \"spatha\", \"spear\", \"spetum\", \"spiculum\", \"spontoon\", \"sprinkler\", \"staff\", \"^star$\", \"^stick$\", \"stiletto\", \"sudis\", \"sword\", \"taavish\", \"tabar\", \"tails\", \"takouba\", \"tambara\", \"tanto\", \"taper\", \"tetsubo\", \"tock\", \"tocke\", \"tongue\", \"toporok\", \"trident\", \"troll\\-claw\", \"truncheon\", \"tuck\", \"verdun\", \"voulge\", \"wakizashi\", \"waraxe\", \"whip\", \"whip\\-blade\", \"xiphos\", \"yataghan\", \"yierka\\-spur\", \"yoribo\", \"zinnor\", \"zweihander\"]\n  113  	fput \"store weapon\" if GameObj.right_hand.noun =~ /#{gweaps.join('|')}/\n  114  	fput \"store shield\" if GameObj.left_hand.noun =~ /shield|buckler|targe|parma|aegis|scutum|greatshield|mantlet|pavis/\n  ...\n 2191  end\n 2192  def check_for_weapon\n 2193: 	$gweaps ||= [\"achlais\", \"adze\", \"angon\", \"awl\\-pike\", \"axe\", \"backsword\", \"baculus\", \"badelaire\", \"balestarius\", \"breastplate\",\"chain\", \"ball\\-and\\-chain\", \"ball\", \"balta\", \"bardiche\", \"baselard\", \"battle\\-axe\", \"battlesword\", \"bidenhander\", \"bilbo\", \"bill\", \"binnol\", \"bisacuta\", \"blackjack\", \"bodkin\", \"bola\", \"^bow$\", \"brandestoc\", \"braquemar\", \"broadsword\", \"bulawa\", \"bullwhip\", \"cat\\-o'\\-nine\\-tails\", \"cateia\", \"cestus\", \"chakram\", \"chereb\", \"chest\\-ripper\", \"cinquedea\", \"claidhmore\", \"claw\", \"cleaver\", \"club\", \"colichemarde\", \"contus\", \"craquemarte\", \"croc\", \"crook\", \"crosier\", \"crossbow\", \"crowbill\", \"cudgel\", \"cutlass\", \"dagger\", \"dart\", \"dhara\", \"dirk\", \"discus\", \"doloire\", \"dubh\", \"epee\", \"espadon\", \"estoc\", \"falarica\", \"falcastra\", \"falchion\", \"falx\", \"fang\", \"fauchard\", \"fist\\-scythe\", \"flail\", \"flamberge\", \"fleuret\", \"flyssa\", \"foil\", \"fork\", \"framea\", \"francisca\", \"fuscina\", \"gaesum\", \"gauche\", \"gauntlet\\-sword\", \"gladius\", \"glaive\", \"godendag\", \"goliah\", \"goupillon\", \"greataxe\", \"greatsword\", \"guisarme\", \"halberd\", \"half\\-moon\", \"hammer of kai\", \"hammer\", \"handaxe\", \"harpoon\", \"hatchet\", \"hippe\", \"hook\\-knife\", \"hoolurge\", \"jackblade\", \"jaculum\", \"javelin\", \"jeddart\\-axe\", \"jitte\", \"kai\", \"kama\", \"kaskara\", \"katana\", \"katar\", \"katzbalger\", \"kheten\", \"khopesh\", \"kilij\", \"knife\", \"knuckle\\-blade\", \"knuckle\\-duster\", \"korseke\", \"kozuka\", \"kris\", \"lance\", \"lisan\", \"longbow\", \"longsword\", \"mace\", \"machera\", \"machete\", \"magari\\-yari\", \"mail\", \"manople\", \"massuelle\", \"mattina\", \"mattock\", \"maul\", \"misericord\", \"^moon$\", \"nagimaki\", \"naginata\", \"^net$\", \"oncin\", \"paingrip\", \"palache\", \"parazonium\", \"partisan\", \"pavade\", \"pelta\", \"periperiu\", \"pernat\", \"^pick\", \"pike\", \"pill\", \"pilum\", \"poignard\", \"pugio\", \"quadrelle\", \"quoit\", \"ranseur\", \"rapier\", \"razorpaw\", \"runestaff\", \"runka\", \"sabar\", \"sabre\", \"^sai$\", \"^sap$\", \"sapara\", \"sarissa\", \"scepter\", \"schiavona\", \"schlager\", \"scimitar\", \"scorpion\", \"scramasax\", \"scythe\", \"seax\", \"shail\", \"shillelagh\", \"sica\", \"sledgehammer\", \"spadroon\", \"sparte\", \"spatha\", \"spear\", \"spetum\", \"spiculum\", \"spontoon\", \"sprinkler\", \"staff\", \"^star$\", \"^stick$\", \"stiletto\", \"sudis\", \"sword\", \"taavish\", \"tabar\", \"tails\", \"takouba\", \"tambara\", \"tanto\", \"taper\", \"tetsubo\", \"tock\", \"tocke\", \"tongue\", \"toporok\", \"trident\", \"troll\\-claw\", \"truncheon\", \"tuck\", \"verdun\", \"voulge\", \"wakizashi\", \"waraxe\", \"whip\", \"whip\\-blade\", \"xiphos\", \"yataghan\", \"yierka\\-spur\", \"yoribo\", \"zinnor\", \"zweihander\"]\n 2194  	fput \"stunman weapon\"\n 2195  	result = matchtimeout(3, \"Could not find\", \"You remove\", \"You're not stunned\")\n ....\n 2209  	rg_hands_checker\n 2210  	fput \"stance off\" unless percentstance <= 20\n 2211: 	taskme = matchwait /shield back into|sword back into|reach down and pick up a small brick|knees and then trembles to a standing position|show you how STANCE(1|2) is done|suddenly launches an attack and swings right for you/\n 2212  	if taskme =~ /shield/\n 2213  		echo \"SHIELD TASK\"\n ....\n 2225  		echo \"STUNMAN STANCE1 TASK\"\n 2226  		task = 'stance1'\n 2227: 	elsif taskme =~ /suddenly launches an attack and swings right for you/\n 2228  		echo \"STUNMAN ATTACK TASK\"\n 2229  		task = 'attack'\n\nE:\\Google Drive\\Lich\\scripts\\killcounter.lic:\n  168  		exit\n  169  end\n  170: creature_list=[[\"zombie rolton\",1],[\"giant ant\",1],[\"black-winged daggerbeak\",1  ],[\"fire ant\",1],[\"fanged rodent\",1],[\"giant rat\",1],[\"spotted gnarp\",1],[\"young grass snake\",1  ],[\"lesser ghoul\",1],[\"black rolton\",1],[\"mountain rolton\",1],[\"carrion worm\",1],[\"slimy little grub\",1  ],[\"pale crab\",2],[\"thyril\",2],[\"spotted gak\",2],[\"brown gak\",2],[\"lesser frost shade\",2  ],[\"cave gnome\",2],[\"big ugly kobold\",2],[\"moaning phantom\",2],[\"sea nymph\",2],[\"fanged goblin\",2],[\"Mistydeep siren\",2],[\"lesser shade\",2],[\"rabid squirrel\",2],[\"mountain snowcat\",3  ],[\"kobold shepherd\",3],[\"striped gak\",3],[\"Bresnahanini rolton\",3  ],[\"troglodyte\",3],[\"cave gnoll\",3],[\"striped relnak\",3],[\"spotted velnalin\",3  ],[\"greater ghoul\",3],[\"white vysan\",3],[\"greater ice spider\",3  ],[\"dark vysan\",3],[\"velnalin\",3],[\"cave nipper\",3],[\"ice skeleton\",3],[\"relnak\",3],[\"fire salamander\",3],[\"water moccasin\",4],[\"mongrel kobold\",4],[\"urgh\",4],[\"ridge orc\",4],[\"fanged viper\",4],[\"cobra\",4],[\"spotted leaper\",4],[\"black urgh\",4],[\"whiptail\",4],[\"revenant\",4],[\"mongrel hobgoblin\",5  ],[\"night golem\",5],[\"mist wraith\",5],[\"coyote\",5],[\"bobcat\",5],[\"water witch\",5],[\"dark apparition\",5],[\"nasty little gremlin\",5  ],[\"spotted lynx\",6],[\"monkey\",6],[\"lesser orc\",6],[\"lesser mummy\",6],[\"snowy cockatrice\",6  ],[\"leaper\",6],[\"cockatrice\",6],[\"firephantom\",6],[\"spectral fisherman\",6  ],[\"hobgoblin shaman\",7  ],[\"blood eagle\",7],[\"lesser burrow orc\",7  ],[\"lesser red orc\",7],[\"shelfae soldier\",7],[\"greater kappa\",7],[\"crystal crab\",8],[\"mottled thrak\",8],[\"greater orc\",8],[\"greater spider\",8],[\"albino tomb spider\",8  ],[\"greater burrow orc\",8  ],[\"bone golem\",8],[\"crocodile\",9],[\"brown spinner\",9],[\"snow spectre\",9],[\"death dirge\",9],[\"rabid guard dog\",10],[\"raider orc\",10],[\"gnoll worker\",10],[\"giant marmot\",10],[\"cave worm\",10],[\"werebear\",10],[\"great boar\",10],[\"wall guardian\",11],[\"Neartofar orc\",11],[\"shelfae chieftain\",11 ],[\"dark orc\",12],[\"crystal golem\",12],[\"deranged sentry\",13],[\"tawny brindlecat\",13 ],[\"great stag\",13],[\"plumed cockatrice\",13 ],[\"gnoll thief\",13],[\"darkwoode\",13],[\"giant weasel\",14],[\"black boar\",14],[\"Agresh troll scout\",14 ],[\"swamp troll\",14],[\"shadowy spectre\",14],[\"brown boar\",14],[\"silverback orc\",14],[\"great brown bear\",14 ],[\"forest troll\",14],[\"grey orc\",14],[\"wolfshade\",15],[\"ridgeback boar\",15],[\"luminescent arachnid\",15 ],[\"gnoll ranger\",15],[\"Neartofar troll\",15],[\"tomb wight\",15],[\"black leopard\",15],[\"arctic puma\",15],[\"humpbacked puma\",15],[\"panther\",15],[\"large ogre\",15],[\"puma\",15],[\"red bear\",16],[\"wind witch\",16],[\"plains orc warrior\",16 ],[\"mongrel wolfhound\",16 ],[\"cave troll\",16],[\"Agresh bear\",16],[\"Agresh troll warrior\",16 ],[\"phosphorescent worm\",16 ],[\"mongrel troll\",16],[\"fire guardian\",16],[\"hill troll\",16],[\"banded rattlesnake\",16 ],[\"mountain ogre\",16],[\"ghost wolf\",16],[\"ghoul master\",16],[\"fire rat\",16],[\"black bear\",16],[\"giant veaba\",17],[\"mountain troll\",17],[\"plains orc scout\",17 ],[\"forest ogre\",17],[\"gnoll guard\",17],[\"plains ogre\",17],[\"spiked cavern urchin\",17 ],[\"black panther\",17],[\"dark shambler\",17],[\"mountain goat\",17],[\"krolvin mercenary\",17 ],[\"mountain lion\",18],[\"nedum vereri\",18],[\"cave lizard\",18],[\"shelfae warlord\",18],[\"rotting krolvin pirate\",18 ],[\"thunder troll\",18],[\"greenwing hornet\",18 ],[\"ghostly warrior\",18],[\"plains lion\",18],[\"plains orc shaman\",18 ],[\"bighorn sheep\",18],[\"elder ghoul master\",18 ],[\"war troll\",18],[\"fire cat\",18],[\"krolvin warrior\",19],[\"striped warcat\",20],[\"gnoll priest\",20],[\"major spider\",20],[\"ogre warrior\",20],[\"Agresh troll chieftain\",20 ],[\"wood wight\",20],[\"massive grahnk\",20],[\"steel golem\",20],[\"arch wight\",20],[\"cave bear\",21],[\"plains orc chieftain\",21 ],[\"ancient ghoul master\",21 ],[\"Arachne servant\",21],[\"crested basilisk\",22 ],[\"cougar\",22],[\"dark panther\",22],[\"warthog\",22],[\"nonomino\",23],[\"niirsha\",23],[\"fenghai\",23],[\"crazed zombie\",23],[\"rotting woodsman\",23 ],[\"centaur\",23],[\"Arachne acolyte\",23],[\"tree viper\",24],[\"giant albino scorpion\",24 ],[\"arctic wolverine\",24 ],[\"wolverine\",24],[\"veteran reiver\",24],[\"burly reiver\",24],[\"ice hound\",24],[\"carceris\",25],[\"gnoll jarl\",25],[\"krolvin warfarer\",25 ],[\"spectral monk\",25],[\"sacristan spirit\",25],[\"Arachne priestess\",26 ],[\"Arachne priest\",26],[\"jungle troll\",26],[\"tree spirit\",26],[\"snow leopard\",27],[\"Grutik savage\",27],[\"troll chieftain\",27],[\"cyclops\",27],[\"lesser stone gargoyle\",27 ],[\"monastic lich\",27],[\"frenzied monk\",27],[\"darken\",28],[\"giant hawk-owl\",28],[\"dobrem\",28],[\"fire ogre\",28],[\"ki-lin\",28],[\"moaning spirit\",28],[\"arctic manticore\",29 ],[\"Grutik shaman\",29],[\"pra'eda\",29],[\"ice troll\",29],[\"scaly burgee\",29],[\"hunter troll\",30],[\"hisskra warrior\",30],[\"jungle troll chieftain\",30 ],[\"elder tree spirit\",30 ],[\"giant albino tomb spider\",30],[\"mammoth arachnid\",30 ],[\"hooded figure\",30],[\"ash hag\",31],[\"skeletal ice troll\",31 ],[\"wild hound\",31],[\"caribou\",32],[\"ghostly mara\",32],[\"rotting corpse\",32],[\"rotting farmhand\",32 ],[\"wild dog\",32],[\"giant fog beetle\",32 ],[\"ghostly pooka\",33],[\"mezic\",33],[\"three-toed tegu\",33],[\"maw spore\",33],[\"sand beetle\",33],[\"hisskra shaman\",33],[\"moor hound\",33],[\"skeletal giant\",33],[\"spectral warrior\",34 ],[\"hisskra chieftain\",34 ],[\"moor witch\",34],[\"lava troll\",34],[\"colossus vulture\",34 ],[\"troll zombie\",34 ],[\"tundra giant\",34],[\"cold guardian\",34],[\"skeletal soldier\",34 ],[\"spectral shade\",35],[\"shimmering fungus\",35 ],[\"spectral woodsman\",35 ],[\"barghest\",35],[\"troll wraith\",35],[\"water wyrd\",35],[\"bog troll\",35],[\"moor eagle\",35],[\"snow crone\",36],[\"dust beetle\",36],[\"spectral lord\",36],[\"fire giant\",36],[\"undertaker bat\",36],[\"arctic titan\",36],[\"krolvin slaver\",36],[\"shadow mare\",37],[\"skeletal warhorse\",37 ],[\"Sheruvian initiate\",37 ],[\"lesser moor wight\",37 ],[\"tusked ursian\",37],[\"huge mein golem\",37],[\"magru\",37],[\"grizzly bear\",38],[\"vesperti\",38],[\"wood sprite\",38],[\"shadow steed\",38],[\"krolvin corsair\",38],[\"mud wasp\",38],[\"frost giant\",38],[\"greater moor wight\",39 ],[\"vourkha\",39],[\"greater bog troll\",39 ],[\"storm giant\",39],[\"stone gargoyle\",39],[\"myklian\",40],[\"spectral miner\",40],[\"kiramon worker\",40],[\"lesser ice giant\",41 ],[\"roa'ter\",41],[\"Sheruvian monk\",41],[\"skeletal lord\",41],[\"bog wraith\",41],[\"minor glacei\",42],[\"dark vortece\",42],[\"phantasma\",42],[\"swamp hag\",42],[\"frozen corpse\",42],[\"baesrukha\",42],[\"shan warrior\",42],[\"shan ranger\",42],[\"shan cleric\",42],[\"shan wizard\",42],[\"siren lizard\",42],[\"wasp nest\",43],[\"night mare\",43],[\"dreadnought raptor\",43 ],[\"bog wight\",44],[\"forest trali shaman\",44 ],[\"mastodonic leopard\",44 ],[\"gaunt spectral servant\",44 ],[\"firethorn shoot\",44],[\"polar bear\",44],[\"ice wraith\",45],[\"lesser vruul\",45],[\"greater ice giant\",46 ],[\"kiramon defender\",46 ],[\"cinder wasp\",46],[\"forest trali\",46],[\"rotting chimera\",46],[\"lesser faeroth\",46],[\"bog spectre\",47],[\"major glacei\",47],[\"horned vor'taz\",48],[\"dybbuk\",48],[\"necrotic snake\",48],[\"sand devil\",48],[\"red-scaled thrak\",48 ],[\"warrior shade\",48],[\"waern\",49],[\"banshee\",50],[\"flesh golem\",50],[\"greater faeroth\",50],[\"wooly mammoth\",52],[\"tomb troll\",52],[\"seeker\",52],[\"snow madrinol\",52],[\"lesser ice elemental\",53 ],[\"sabre-tooth tiger\",53 ],[\"ice golem\",53],[\"stone sentinel\",53],[\"animated slush\",54],[\"skayl\",54],[\"troll necromancer\",54 ],[\"mage apprentice\",54],[\"nightmare steed\",55],[\"eidolon\",55],[\"stone troll\",55],[\"Citadel guardsman\",56],[\"lava golem\",56],[\"glacial morph\",56],[\"stone giant\",58],[\"Citadel arbalester\",58],[\"massive pyrothag\",58 ],[\"massive black boar\",59 ],[\"forest viper\",59 ],[\"fire elemental\",60],[\"forest ogre\",60 ],[\"Citadel herald\",60],[\"stone mastiff\",62],[\"bestial swordsman\", 62],[\"Illoke mystic\",62],[\"massive troll king\",63 ],[\"ice elemental\",63],[\"wind wraith\",63],[\"soul golem\",63],[\"Sheruvian harbinger\",63 ],[\"fire sprite\",64],[\"grifflet\",64],[\"red tsark\",66],[\"emaciated hierophant\",66 ],[\"muscular supplicant\",67 ],[\"Illoke shaman\",67],[\"lesser griffin\",69],[\"krag yeti\",70],[\"hunch-backed dogmatist\",70 ],[\"fire mage\",71],[\"krag dweller\",72],[\"storm griffin\",73],[\"lesser minotaur\",74],[\"moulis\",75],[\"naisirc\",75],[\"greater vruul\",75],[\"minotaur warrior\",76 ],[\"shrickhen\",76],[\"csetairi\",76],[\"raving lunatic\",77],[\"farlook\",77],[\"minotaur magus\",78],[\"dhu goleras\",78],[\"seraceris\",78],[\"gnarled being\",82],[\"caedera\",82],[\"Vvrael witch\",82],[\"lesser construct\",83 ],[\"lich qyn'arj\",84],[\"Vvrael warlock\",84],[\"greater krynch\",84],[\"gremlock\",84],[\"festering taint\",86],[\"aivren\",86],[\"Illoke elder\",86],[\"n'ecare\",87],[\"greater earth elemental\",88 ],[\"Illoke jarl\",89],[\"Ithzir scout\",89],[\"lost soul\",91],[\"Ithzir initiate\",91],[\"Ithzir janissary\",92 ],[\"vaespilon\",93],[\"Ithzir herald\",93],[\"triton dissembler\",94 ],[\"Ithzir adept\",96],[\"siren\",96],[\"triton executioner\",96 ],[\"greater construct\",96 ],[\"Ithzir seer\",97],[\"triton combatant\",98 ],[\"triton defender\",98],[\"war griffin\",100],[\"triton radical\",100],[\"triton magus\",102],[\"triton sentry\",103],[\"greater water elemental\",105],[\"water elemental\",92],[\"rolton\",1],[\"phantom\",2],[\"wraith\",15],[\"ghost\",2],[\"skeleton\",1],[\"kobold\",1],[\"reiver\",24],[\"thrak\",8],[\"manticore\",9],[\"goblin\",2],[\"hobgoblin\",3],[\"yeti\",67],[\"spectre\",14],[\"earth elemental\",82],[\"fallen crusader\",97],[\"murky soul siphon\",106],[\"lich\",110],[\"enormous rift crawler\",103],[\"darkly inked fetish master\", 104],[\"glistening cerebralite\",100],[\"Vvrael destroyer\",108],[\"zombie\",23]]\n  171  \n  172  recognition=Array.new\n\nE:\\Google Drive\\Lich\\scripts\\login.lic:\n  124  		game_name = 'GemStone IV'\n  125  		frontend = $frontend\n  126: 		custom_launch = nil\n  127: 		custom_launch_dir = nil\n  128  		\n  129  		if realm == 'platinum'\n  ...\n  143  				exit\n  144  			else\n  145: 				entry_data.push h={ :char_name => char_name, :game_code => game_code, :game_name => game_name, :user_id => user_id, :password => password, :frontend => frontend, :custom_launch => custom_launch, :custom_launch_dir => custom_launch_dir }\n  146  			end\n  147  		end\n  ...\n  160  			if data\n  161  				entry_data.delete(data)\n  162: 				entry_data.push h={ :char_name => char_name, :game_code => game_code, :game_name => game_name, :user_id => user_id, :password => password, :frontend => frontend, :custom_launch => custom_launch, :custom_launch_dir => custom_launch_dir }\n  163  				echo \"Character information updated.\"\n  164  			else\n  ...\n  261  					if response =~ /^L\\t/\n  262  						login_server.close unless login_server.closed?\n  263: 						launch_data = response.sub(/^L\\tOK\\t/, '').split(\"\\t\")\n  264  						\n  265  						if data[:frontend] == 'wizard'\n  266: 							launch_data.collect! { |line| line.sub(/GAMEFILE=.+/, 'GAMEFILE=WIZARD.EXE').sub(/GAME=.+/, 'GAME=WIZ').sub(/FULLGAMENAME=.+/, 'FULLGAMENAME=Wizard Front End') }\n  267  						end\n  268  						\n  269: 						if data[:custom_launch]\n  270: 							launch_data.push \"CUSTOMLAUNCH=#{data[:custom_launch]}\"\n  271: 							if data[:custom_launch_dir]\n  272: 								launch_data.push \"CUSTOMLAUNCHDIR=#{data[:custom_launch_dir]}\"\n  273  							end\n  274  						end\n  ...\n  306  \n  307  sal_filename = \"#{TEMP_DIR.gsub('/', '\\\\')}\\\\login.sal\"\n  308: File.open(sal_filename, 'w') { |f| f.puts launch_data }\n  309  \n  310  r = Win32.GetModuleFileName\n\nE:\\Google Drive\\Lich\\scripts\\monitor.lic:\n  177  	#'^A hisskra chieftain (stalks|leaps) in',\n  178  	#'^(The|An?) moor wight suddenly stops moving',\n  179: 	#'^A gaunt spectral servant whispers haunting',\n  180  	#'^An? (ancient|grizzled)? ?(shadow|night|black|snow|hunch-backed) (steed|mare|forest ogre|madrinol|dogmatist) (rears|shakes|snorts|nods|waves) (back|her|his|at|as|and)',\n  181  	#'^A spectral miner waves a hand through the',\n  ...\n  312  	\"^<roundTime value=\",\n  313  	'.*<d cmd',\n  314: 	'<LaunchURL',\n  315  	'^Where are you trying',\n  316  	'^<right',\n\nE:\\Google Drive\\Lich\\scripts\\monitor_old.lic:\n  106  	#'^A hisskra chieftain (stalks|leaps) in',\n  107  	'^(The|An?) moor wight suddenly stops moving',\n  108: 	'^A gaunt spectral servant whispers haunting',\n  109  	'^An? (ancient|grizzled)? ?(shadow|night|black|snow|hunch-backed) (steed|mare|forest ogre|madrinol|dogmatist) (rears|shakes|snorts|nods|waves) (back|her|his|at|as|and)',\n  110  	#'^A spectral miner waves a hand through the',\n\nE:\\Google Drive\\Lich\\scripts\\non_global_bigshot.lic:\n 1795              $OP_TOOLTIPS.set_tip($OP_ENTRY['g_disable_commands'], commands_tip, \"\")\n 1796   \n 1797:             signs_tip = \"Combat Movement - 9601\\nCombat Focus - 9602\\nShadow Mastery - 9603\\nSurge of Strength - 9605\\n\\nSigil of Contact - 9703\\nSigil of Resolve - 9704\\nSigil of Minor Bane - 9705\\nSigil of Defense - 9707\\nSigil of Offense - 9708\\nSigil of Minor Protection - 9710\\nSigil of Focus - 9711\\nSigil of Mending - 9713\\nSigil of Concentration - 9714\\nSigil of Major Bane - 9715\\nSigil of Major Determination - 9716\\nSigil of Major Protection - 9719\\n\\nSign of Warding - 9903\\nSign of Striking - 9904\\nSign of Thought - 9906\\nSign of Defending - 9907\\nSign of Smiting - 9908\\nSign of Staunching - 9909\\nSign of Deflection - 9910\\nSign of Swords - 9912\\nSign of Shields - 9913\\nSign of Dissipation - 9914\\nSign of Madness - 9916\\n\\nSymbol of Courage - 9805\\nSymbol of Protection - 9806\"\n 1798              $OP_TOOLTIPS.set_tip($OP_ENTRY['signs'], signs_tip, \"\")\n 1799   \n ....\n 1869   \n 1870  elsif( script.vars[1] =~ /head/i )\n 1871:     # launch DRb server\n 1872      DRb.start_service( nil, Group.new )\n 1873      uri = DRb.uri\n 1874      Thread.new { DRb.thread.join }\n 1875   \n 1876:     # launch DRb client\n 1877      DRb.start_service()\n 1878      bs = Bigshot.new()\n\nE:\\Google Drive\\Lich\\scripts\\profanity.rb:\n 1973  							end\n 1974  						end\n 1975: 					elsif xml =~ /^<LaunchURL src=\"([^\"]+)\"/\n 1976  						url = \"\\\"https://www.play.net#{$1}\\\"\"\n 1977  						# assume linux if not mac\n\nE:\\Google Drive\\Lich\\scripts\\spellactive.lic:\n   94  			# Logic for casting spells\n   95  			if (spell.affordable? and spell.known? and (spell.spirit_cost.zero? or (percentspirit > 75 and spirit_count < 2)) and ([Wounds.head, Scars.head].max < 2))\n   96: 				next if (spell.name == 'Sign of Clotting' and Spell['Sign of Staunching'].active?)\n   97  				\n   98  				was_hidden = hidden?\n\n491 matches across 28 files\n\n\nSearching 322 files for \"aim\"\n\nE:\\Google Drive\\Lich\\scripts\\commonFight.lic:\n   28      $uac = 'punch' if Char.name == 'Lumino' || Char.name == 'Iloru' || Char.name == 'Iloru'\n   29      $position = 'decent'\n   30:     $aim_location = 'head'\n   31      $champion = false\n   32      @guild = 'none'\n   33      @guild = 'wizard' if Char.name == 'Lumino' || Char.name == 'Iloru'\n   34      @guild = 'bard' if Char.name == 'Iloru'\n   35:     @attackMsg = \"^You attempt|^What were|^Try|^You make|^You cannot aim that high|already missing that\"\n   36    end\n   37    module_function :commonFightInit\n   ..\n   44        if line =~ /^You have (decent|good|excellent) positioning/\n   45          $position = $1\n   46:         if (($position == 'excellent' and $aim_location != \"\") || ($position != 'excellent' || Char.name == 'Lumino' || Char.name == 'Iloru'))\n   47            if $champion \n   48:             ($uac = 'punch'; $aim_location = '') if Char.name == 'Atilio'\n   49:             ($uac = 'punch'; $aim_location = '') if Char.name == 'Lumino' || Char.name == 'Iloru'\n   50            else\n   51:             ($uac = 'punch'; $aim_location = 'head') if Char.name == 'Atilio'\n   52:             ($uac = 'punch'; $aim_location = 'head') if Char.name == 'Lumino' || Char.name == 'Iloru'\n   53            end\n   54          end\n   ..\n   59        $pause_combat = true if line =~ /#{$pause_lines}/\n   60        $pause_combat = false if line =~ /#{$unpause_lines}/\n   61:       $aim_location = \"right leg\" if line =~ /^The .+ does not have a chest|^You cannot aim that/\n   62:       $aim_location = \"head\" if line =~ /already missing that/\n   63        $new_vaesp = true if line =~ /^A vaespilon drags/\n   64        $monsterGone = true if line =~ /A gornar-shackled ogre lumbers in/\n   ..\n  139        else\n  140          #GSC.bput \"kick\", \"#{@attackMsg}\" if Char.name == 'Lumino' || Char.name == 'Iloru'\n  141:         GSC.bput \"#{$uac} ##{target.id} #{$aim_location}\", \"#{@attackMsg}\"\n  142        end\n  143      else\n  144        #GSC.bput \"kick\", \"#{@attackMsg}\" if Char.name == 'Lumino' || Char.name == 'Iloru'\n  145:       GSC.bput \"#{$uac} ##{target.id} #{$aim_location}\", \"#{@attackMsg}\"\n  146      end\n  147    end\n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n    8  @guild = 'wizard' if Char.name == 'Bilkago'\n    9  @guild = 'bard' if Char.name == 'Iloru'\n   10: $aim = 'none'\n   11  $trapcommand = \"none\"\n   12  $watchAgain = false\n   ..\n   46      elsif line =~ /(Eye crushed|Crushing blow to head|Slash across right|Surgical strike)/\n   47        echo line\n   48:       if $aim == 'right eye'\n   49:         $aim = 'left eye'\n   50:         put 'aim left eye'\n   51:       elsif $aim == 'left eye'\n   52:         $aim = 'chest'\n   53:         put 'aim chest'\n   54        end\n   55      elsif line =~ /(Skull cracks in several places|Strike to temple! Saved by|Beautiful shot pierces skull!)/\n   56        echo line\n   57:       if $aim == 'head'\n   58:         $aim = 'neck'\n   59:         put 'aim neck'\n   60        end\n   61      elsif line =~ /(Throat nearly crushed|Pierced through neck, a fine|Neck skewered, sliding past)/\n   62        echo line\n   63:       if $aim =='neck'\n   64:         $aim = 'right eye'\n   65:         put 'aim right eye'\n   66        end\n   67:     elsif line =~ /#{$legCritMsgs}/ and $aim == 'right leg'\n   68:       $aim = 'left leg'\n   69:       put 'aim left leg'\n   70:     elsif line =~ /#{$legCritMsgs}/ and $aim == 'left leg'\n   71:       $aim = 'clear'\n   72:       put 'aim clear'\n   73      elsif line =~ /fall victim|^You glance around/\n   74        $watchAgain = true\n   75      elsif line =~ /An announcer shouts, \"Send in a champion!/\n   76        $champNumber = $champNumber + 1\n   77:     elsif line =~ /^The .+ does not have a chest|^You cannot aim that/\n   78:       $aim = 'right leg'\n   79:       put 'aim right leg'\n   80      elsif line =~ /already missing thatxxxx/\n   81:       $aim = 'chest'\n   82:       put 'aim chest'\n   83      end\n   84  \n   ..\n   90  fput 'stance off' until stance == \"offensive\"\n   91  if @guild == 'bard'\n   92:   #$aim = 'head'\n   93:   #GSC.bput \"aim head\", \"You're\"\n   94    #GSC.bput \"get my warblade from my bag\", \"You grab\"\n   95    #GSC.bput \"remove shield\", \"You sling\"\n   ..\n  119      if @guild == 'bardxxxx'\n  120        if checknpcs[0] =~ /champion/\n  121:         #$aim = 'right leg'\n  122:         #put 'aim right leg'\n  123:         #$aim = 'clear'\n  124:         #put 'aim clear'\n  125        end\n  126        Spell[1005].cast if checknpcs[0] =~ /slaver|champion|grahnk|cave worm|automaton/\n  ...\n  149        end\n  150      end\n  151:     #if $aim != 'head' and $aim != 'none'\n  152:     #  $aim = 'head'\n  153:     #  put 'aim head'\n  154      #end\n  155      $watchAgain = false\n\nE:\\Google Drive\\Lich\\scripts\\monitor.lic:\n   86  \n   87  ## *** This is a list of certain keywords that GMS may/may not use.\n   88: dangerTriggers = /(ignor|continu|\\btyp(e[sd]?|ing)\\b|hello|respond|reply|answer|speak|spoken|whisper|scream|\\bSEND\\b|aloud|talk|\\bscript(s?|ing|ed)\\b|smil|frown|snort|\\byell\\b|exclaim|announc|declar|voic|say|claim|boom|shout|this place|you there|squeak|spider|alert|cheer|nod|jump|wav|stop|attention|\\bsilver[s]?\\b|responsive|wrong|spider|monkey|mouse|\\brat\\b|frog|demand)/i\n   89  ### Checks for CAPITAL letters length 5 to 100. See ignores below.\n   90  capitalTriggers = /([A-Z]{5,100})/\n\nE:\\Google Drive\\Lich\\scripts\\ubermonk.lic:\n   13  $uac = 'punch'\n   14  $position = 'decent'\n   15: $aim_location = 'head'\n   16  $pause_lines = /^A calm washes over|^You are unable to muster the will/\n   17  $unpause_lines = /^You are enraged/\n   ..\n   33    if line =~ /^You have (decent|good|excellent) positioning/\n   34      $position = $1\n   35:     ($uac = 'punch'; $aim_location = '') if $position == 'excellent' and $aim_location != \"\" and $champion\n   36      $uac = 'punch' if $position == 'good'\n   37    end\n   ..\n   39    $pause_combat = true if line =~ /#{$pause_lines}/\n   40    $pause_combat = false if line =~ /#{$unpause_lines}/\n   41:   $aim_location = \"right leg\" if line =~ /^The .+ does not have a chest|^You cannot aim that/\n   42:   $aim_location = \"\" if line =~ /already missing that/\n   43    $new_vaesp = true if line =~ /^A vaespilon drags/\n   44  end\n   ..\n   85          GSC.bput \"mstrike punch ##{target.id}\", \"^You concentrate\"\n   86        else\n   87:         GSC.bput \"#{$uac} ##{target.id} #{$aim_location}\", \"^You attempt|^What were|^Try|^You make|^You cannot aim that high|is missing\"\n   88        end\n   89      else\n   90:         GSC.bput \"#{$uac} ##{target.id} #{$aim_location}\", \"^You attempt|^What were|^Try|^You make|^You cannot aim that high|is missing\"\n   91      end  \n   92      #waitrt?\n\nE:\\Google Drive\\Lich\\scripts\\1monitor.lic:\n   87  \n   88  ## *** This is a list of certain keywords that GMS may/may not use.\n   89: dangerTriggers = /(ignor|continu|\\btyp(e[sd]?|ing)\\b|hello|respond|reply|answer|speak|spoken|whisper|scream|\\bSEND\\b|aloud|talk|\\bscript(s?|ing|ed)\\b|smil|frown|snort|\\byell\\b|exclaim|announc|declar|voic|say|claim|boom|shout|this place|you there|squeak|spider|alert|cheer|nod|jump|wav|stop|attention|\\bsilver[s]?\\b|responsive|wrong|spider|monkey|mouse|\\brat\\b|frog|demand)/i\n   90  \n   91  ### Checks for CAPITAL letters length 5 to 100. See ignores below.\n\nE:\\Google Drive\\Lich\\scripts\\alchemy.lic:\n  842  correct_herb_count = Array.new\n  843  \n  844: check_ingredient = proc { |ingredient_name,temp_claimed_ingredients,temp_ingredient_count|\n  845: 	temp_claimed_ingredients ||= Array.new\n  846  	if temp_ingredient_count.nil? or temp_ingredient_count.empty?\n  847  		temp_ingredient_count = ingredient_count.dup\n  ...\n  849  	found = false\n  850  	equivalent_ingredients = (equivalent.find { |list| list.include?(ingredient_name) } || [ ingredient_name ])\n  851: 	if ingredient = all_sack_contents.call.find { |obj| equivalent_ingredients.include?(obj.name) and (obj.name !~ bundled_herb) and not temp_claimed_ingredients.include?(obj.id) }\n  852: 		temp_claimed_ingredients.push(ingredient.id)\n  853  		found = true\n  854  	elsif bundle = all_sack_contents.call.find { |obj| equivalent_ingredients.include?(obj.name) and (obj.name =~ bundled_herb) and (temp_ingredient_count[obj.id].nil? or temp_ingredient_count[obj.id] > 0) }\n  ...\n  921  		found = true\n  922  	end\n  923: 	[ found, temp_claimed_ingredients, temp_ingredient_count ]\n  924  }\n  925  \n  ...\n 1060  				tracker[:extra_ingredients].delete_at(tracker[:extra_ingredients].index(ingredient_name))\n 1061  			else\n 1062: 				found_this, temp_claimed_ingredients, temp_ingredient_count = check_ingredient.call(ingredient_name, tracker[:claimed_ingredients].dup, tracker[:ingredient_count].dup)\n 1063  				if found_this\n 1064: 					tracker[:claimed_ingredients] = temp_claimed_ingredients\n 1065  					tracker[:ingredient_count] = temp_ingredient_count\n 1066  					tracker[:found][ingredient_name] = tracker[:found][ingredient_name].to_i + 1\n ....\n 1073  						tracker_list = Array.new\n 1074  						for support_recipe in support_recipe_list\n 1075: 							temp_tracker = { :error => tracker[:error].dup, :recipe_count => tracker[:recipe_count].dup, :claimed_ingredients => tracker[:claimed_ingredients].dup, :ingredient_count => tracker[:ingredient_count].dup, :extra_ingredients => tracker[:extra_ingredients].dup, :found => tracker[:found].dup, :buy => tracker[:buy].dup, :forage => tracker[:forage].dup, :kill_for => tracker[:kill_for].dup, :steps => tracker[:steps].dup, :prepare_steps => tracker[:prepare_steps].dup, :finish_steps => tracker[:finish_steps].dup, :cost => tracker[:cost], :time => tracker[:time], :itime => tracker[:itime].dup, :icost => tracker[:icost].dup }\n 1076  							temp_tracker = recursive_check_recipe.call(support_recipe.dup, temp_tracker, _top_level=false)\n 1077  							tracker_list.push(temp_tracker)\n ....\n 1235  		recipe_list = args[:recipes]\n 1236  	end\n 1237: 	tracker = { :error => Hash.new, :recipe_count => Hash.new, :claimed_ingredients => Array.new, :ingredient_count => ingredient_count.dup, :extra_ingredients => Array.new, :found => Hash.new, :buy => Hash.new, :forage => Hash.new, :kill_for => Hash.new, :steps => Array.new, :prepare_steps => Array.new, :finish_steps => Array.new, :cost => 0, :time => 0, :itime => Hash.new, :icost => Hash.new }\n 1238  	args[:reps] ||= 1\n 1239  	args[:reps].times {\n ....\n 1241  			tracker_list = Array.new\n 1242  			for recipe in recipe_list\n 1243: 				temp_tracker = { :error => tracker[:error].dup, :recipe_count => tracker[:recipe_count].dup, :claimed_ingredients => tracker[:claimed_ingredients].dup, :ingredient_count => tracker[:ingredient_count].dup, :extra_ingredients => tracker[:extra_ingredients].dup, :found => tracker[:found].dup, :buy => tracker[:buy].dup, :forage => tracker[:forage].dup, :kill_for => tracker[:kill_for].dup, :steps => tracker[:steps].dup, :prepare_steps => tracker[:prepare_steps].dup, :finish_steps => tracker[:finish_steps].dup, :cost => tracker[:cost], :time => tracker[:time], :itime => tracker[:itime].dup, :icost => tracker[:icost].dup }\n 1244  				temp_tracker = recursive_check_recipe.call(recipe, temp_tracker, top_level=true)\n 1245  				tracker_list.push(temp_tracker)\n ....\n 1259  	}\n 1260  	tracker[:buy] = fixed_buy\n 1261: 	tracker.delete(:claimed_ingredients)\n 1262  	tracker.delete(:ingredient_count)\n 1263  	tracker.delete(:extra_ingredients)\n ....\n 1266  \n 1267  other_check_recipe = proc { |recipe,repetitions|\n 1268: 	tracker = { :error => Hash.new, :recipe_count => Hash.new, :claimed_ingredients => Array.new, :ingredient_count => ingredient_count.dup, :extra_ingredients => Array.new, :found => Hash.new, :buy => Hash.new, :forage => Hash.new, :kill_for => Hash.new, :steps => Array.new, :prepare_steps => Array.new, :finish_steps => Array.new, :cost => 0, :time => 0, :itime => Hash.new, :icost => Hash.new }\n 1269  	repetitions.times {\n 1270  		tracker_list = Array.new\n 1271: 		temp_tracker = { :error => tracker[:error].dup, :recipe_count => tracker[:recipe_count].dup, :claimed_ingredients => tracker[:claimed_ingredients].dup, :ingredient_count => tracker[:ingredient_count].dup, :extra_ingredients => tracker[:extra_ingredients].dup, :found => tracker[:found].dup, :buy => tracker[:buy].dup, :forage => tracker[:forage].dup, :kill_for => tracker[:kill_for].dup, :steps => tracker[:steps].dup, :prepare_steps => tracker[:prepare_steps].dup, :finish_steps => tracker[:finish_steps].dup, :cost => tracker[:cost], :time => tracker[:time], :itime => tracker[:itime].dup, :icost => tracker[:icost].dup }\n 1272  		temp_tracker = recursive_check_recipe.call(recipe, temp_tracker, top_level=true)\n 1273  		tracker_list.push(temp_tracker)\n ....\n 1283  	}\n 1284  	tracker[:buy] = fixed_buy\n 1285: 	tracker.delete(:claimed_ingredients)\n 1286  	tracker.delete(:ingredient_count)\n 1287  	tracker.delete(:extra_ingredients)\n ....\n 1375  			need_empty_flask = false\n 1376  			wait_spirit = false\n 1377: 			temp_claimed_ingredients = Array.new\n 1378  			temp_ingredient_count = ingredient_count.dup\n 1379  			for sub_step in steps\n 1380  				if sub_step =~ /^add\\s+(.*)/\n 1381  					ingredient_name = $1\n 1382: 					found, temp_claimed_ingredients, temp_ingredient_count = check_ingredient.call(ingredient_name,temp_claimed_ingredients,temp_ingredient_count)\n 1383  					unless found\n 1384  						error = true\n ....\n 1605  			# >alchemy refract\n 1606  			# You select an unused gem lens assembly and set it up on the brushed steel workbench.\n 1607: 			# You carefully set the sapphire lens within the assembly and adjust it, aiming the refracted sunlight into your iron cauldron.\n 1608  			# The surface of the solution in the iron cauldron shimmers in response!\n 1609  			lens_name = $1\n ....\n 2264  	recipe_list = $alchemy_recipes.find_all { |recipe| (recipe[:steps].first =~ /^grind/) and not $alchemy_grind_history.keys.include?(recipe[:product]) }\n 2265  	for recipe in recipe_list\n 2266: 		tracker = { :error => Hash.new, :recipe_count => Hash.new, :claimed_ingredients => Array.new, :ingredient_count => ingredient_count.dup, :extra_ingredients => Array.new, :found => Hash.new, :buy => Hash.new, :forage => Hash.new, :kill_for => Hash.new, :steps => Array.new, :prepare_steps => Array.new, :finish_steps => Array.new, :cost => 0, :time => 0, :itime => Hash.new, :icost => Hash.new }\n 2267  		tracker = recursive_check_recipe.call(recipe, tracker, top_level=true)\n 2268  		fixed_buy = Hash.new\n ....\n 2273  		}\n 2274  		tracker[:buy] = fixed_buy\n 2275: 		tracker.delete(:claimed_ingredients)\n 2276  		tracker.delete(:ingredient_count)\n 2277  		tracker.delete(:extra_ingredients)\n\nE:\\Google Drive\\Lich\\scripts\\araksai_routineGMcheck.cmd:\n    3  	var randomanswer 0\n    4  \n    5: #	var dangertriggers (\\bignor(?:e[sd]?|ing)\\b|\\bcontinu(?:e[sd]?|ing)\\b|\\btyp(?:e[sd]?|ing)\\b|\\bhello\\b|\\brespond(?:e[sd]?|ing)\\b|\\breply(?:e[sd]?|ing)\\b|\\banswer(?:e[sd]?|ing)\\b|\\bspeak(?:e[sd]?|ing)\\b|\\bwhisper(?:e[sd]?|ing)\\b|\\bscream(?:e[sd]?|ing)\\b|\\bwait(?:e[sd]?|ing)\\b|\\byou have\\b|SEND\\[|\\]SEND|\\*SEND\\*|\\baloud\\b|\\btalk(?:e[sd]?|ing)\\b|\\\".*\\\"|\\bscript(?:e[sd]?|ing)\\b|\\bsmil(?:e[sd]?|ing)\\b|\\bfrown(?:e[sd]?|ing)\\b|\\bsnort(?:e[sd]?|ing)\\b|\\byell(?:e[sd]?|ing)\\b|\\bexclaim(?:e[sd]?|ing)\\b|\\bannounc(?:e[sd]?|ing)\\b|\\bdeclar(?:e[sd]?|ing)\\b|\\bvoic(?:e[sd]?|ing)\\b|\\bsa(?:id|y(?:ing)?s?)\\b|\\bclaim(?:e[sd]?|ing)\\b|\\bboom(?:e[sd]?|ing)\\b|\\bshout(?:s|ed|ing)?\\b|\\bthis place\\b|you there\\b|\\bsqueak(?:s|ed|ing)?\\b|\\bdoing\\b|\\bspider(?:s)?\\b|\\balert(?:s|ed|ing)?\\b|\\bcheer(?:s|ed|ing)?\\b|\\bnod(?:s|ded|ding)?\\b|\\btyp(?:|e|es|ed|ing)\\b|\\bjump(?:s|ed|ing)?\\b|\\bwav(?:e[sd]?|ing)\\b|\\bstop(?:|s|ped|ping)\\b  )/i\n    6  #	math keywords add 1;put #echo >log Orange *** KEYWORD: %keyword_was ****;if %keywords < 0 then math keywords\n    7  \n    8: 	var dangertriggers (\\!\\?|\\?\\!|\\!\\!|Continues|Hello|Respond|Reply|Answer|Speak|whisper|Scream|Ignoring| Wait|Y...have.*Seconds|SEND\\[|\\]SEND|\\*SEND\\*|Aloud| Talk|\\\".*\\\"|scripting|smil|frown|snort |yell|exclaim|announc|declar|voic|say| claim|announce|boom|shout|this place|you there| squeak| doing| spider|alert|cheer|nod|type |typing|typed|monkey|spider|mouse|rat\\b|frog|demand)/i\n    9  	var combinedtriggers (your name)\n   10  	var SP (\\!| |@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|_|-|\\+|\\=|\\{|\\}|\\||\\\\|\\;|\\'|\\\"|\\<|\\>|,|\\.|\\?|\\/)\n   ..\n   76  	setvariable say 0\n   77  	setvariable whisper 0\n   78: 	setvariable exclaim 0\n   79  	setvariable announce 0\n   80  	setvariable declare 0\n   ..\n  101  	action math jump add 1 when jump\n  102  	action math whisper add 1 when whisper\n  103: 	action math exclaim add 1 when exlcaim\n  104  	action math whistle add 1 when whistl\n  105  	action math touch add 1 when touch\n\nE:\\Google Drive\\Lich\\scripts\\auto-level.lic:\n   58  #27 Magic Item Use\n   59  #28 Harness Power\n   60: #29 Spell Aiming\n   61  #30 Mana Control: Elemental\n   62  #31 Mana Control: Spiritual\n   ..\n  385  		add_label_entry($auto_level_TABLE4, \"Magic Item Use\", 'a27')\n  386  		add_label_entry($auto_level_TABLE4, \"Harness Power\", 'a28')\n  387: 		add_label_entry($auto_level_TABLE4, \"Spell Aiming\", 'a29')\n  388  		add_label_entry($auto_level_TABLE4, \"Mana Control: Elemental\", 'a30')\n  389  		add_label_entry($auto_level_TABLE4, \"Mana Control: Spiritual\", 'a31')\n\nE:\\Google Drive\\Lich\\scripts\\burst_calc.lic:\n   29  as = Skills.arcanesymbols\n   30  hp = Skills.harnesspower\n   31: sa = Skills.spellaiming\n   32  emc = Skills.emc\n   33  smc = Skills.smc\n   ..\n   53  first_limit = Char.level / 2.0\n   54  burst_mana = (100 * (prime_stats + (second_stats / 2.0)) / burst_factor).round / 100.0\n   55: disclaimer = false\n   56  if burst_mana > first_limit\n   57: 	disclaimer = true\n   58  	###\n   59  #	burst_factor = 3.5\n   ..\n  169  end\n  170  respond \"\"\n  171: respond \"Your wearable mana exceeds half your level.  Formula used may over-estimate wearable mana, use with caution.\" if disclaimer\n  172: respond \"\" if disclaimer\n\nE:\\Google Drive\\Lich\\scripts\\calcredux.lic:\n 1105  	\"Minor puncture to the left arm.\" => 3,\n 1106  	\"Strike pierces upper arm!\" => 5,\n 1107: 	\"Well aimed shot, punctures upper arm!\" => 7,\n 1108  	\"Strike pierces forearm!\" => 10,\n 1109  	\"Elbow punctured, oh what pain!\" => 14,\n 1110: 	\"Well aimed strike shatters bone in left arm!\" => 17,\n 1111  	\"Strike to the left arm cleanly severs it at the shoulder!\" => 22,\n 1112  	\"Strike to the left arm shatters elbow and severs forearm!\" => 25,\n ....\n 1114  #\n 1115  	\"Minor puncture to the right arm.\" => 3,\n 1116: 	\"Well aimed strike shatters bone in right arm!\" => 17,\n 1117  	\"Strike to the right arm cleanly severs it at the shoulder!\" => 22,\n 1118  	\"Strike to the right arm shatters elbow and severs forearm!\" => 25,\n ....\n 1136  	\"Attack bumps an eyebrow.\" => 0,\n 1137  	\"Minor strike under the left eye, that was close!\" => 1,\n 1138: 	\"Well aimed shot almost removes an eye!\" => 5,\n 1139  	\"Surgical strike removes your left eye!\" => 10,\n 1140  	\"Attack punctures the eye and connects with something really vital!\" => 17,\n ....\n 1151  	\"Minor puncture to the left leg.\" => 5,\n 1152  	\"Strike pierces thigh!\" => 9,\n 1153: 	\"Well aimed shot, punctures calf!\" => 13,\n 1154  	\"Strike pierces calf!\" => 17,\n 1155  	\"Well placed shot pierces knee, that hurt!\" => 20,\n\nE:\\Google Drive\\Lich\\scripts\\combo.lic:\n   26  		\n   27  		v2.4:\n   28: 		-Added aiming\n   29  		\n   30  		v2.5:\n   ..\n   33  		\n   34  		v2.6:\n   35: 		-Doesn't aim your jabs for faster tier up.\n   36  		\n   37  		v2.7\n   38: 		-Fixed broken aiming cycling.\n   39  		\n   40  		v2.8\n   ..\n   63  	fput \"stand\" unless standing?\n   64  	put 'stance offensive' unless percentstance(0)\n   65: 	if CharSettings['aim'] && @action !~ /jab/\n   66  		put \"#{@action} ##{target.id} #{@location}\"\n   67  	else\n   ..\n   92  }\n   93  \n   94: CharSettings['aim'] ||= false \n   95: CharSettings['aim_location'] ||= Array.new\n   96  CharSettings['stance'] ||= 'defensive'\n   97  \n   ..\n  101  	respond \"You can change this setting by typing ;#{script.name} tier#{$1} <jab/punch/grapple/kick>\"\n  102  	exit\n  103: elsif script.vars[1] =~ /^aim=(on|off)$/\n  104  	option = $1\n  105  	if option == 'on'\n  106: 		CharSettings['aim']=true\n  107  	elsif option == 'off'\n  108: 		CharSettings['aim']=false\n  109  	else\n  110  		respond \"Bad option: #{option}\"\n  111  		exit\n  112  	end\n  113: 	respond \"Turning aiming #{option}\"\n  114  	exit\n  115: elsif script.vars[1] =~ /^aim$/\n  116: 	unless CharSettings['aim']\n  117: 		respond \"Aiming is turned off.\"\n  118: 		respond \"Please enable aiming before using this option\"\n  119: 		respond \";#{script.name} aim=<on/off>\"\n  120  		respond\n  121  		exit\n  ...\n  127  		exit\n  128  	end\n  129: 	CharSettings['aim_location'].clear\n  130  	script.vars[2..-1].join(' ').gsub(', ', ',').split(',').reverse.each{|location|\n  131: 		CharSettings['aim_location'].push(location)\n  132  	}\n  133: 	respond \"Now aiming in this order (one body part per line):\"\n  134: 	respond CharSettings['aim_location'].reverse\n  135  	respond\n  136  	respond \"Note: Remember to use a comma to seperate the body parts\"\n  ...\n  147  	respond \";#{script.name} tier3 <jab/punch/grapple/kick>\"\n  148  	respond\n  149: 	respond \";#{script.name} aim=<on/off>\"\n  150: 	respond \";#{script.name} aim <body parts>\"\n  151: 	respond \" ex: ;#{script.name} aim head, neck, right arm, chest\" \n  152  	respond\n  153  	respond \";#{script.name} stance <offensive/defensive/neutral/whatever>\"\n  ...\n  173  end\n  174  \n  175: put 'aim clear'\n  176  put 'stance off'\n  177  @action =  CharSettings['tierup']\n  ...\n  186  	exit\n  187  end\n  188: locations = CharSettings['aim_location'].dup\n  189  @location = locations.pop\n  190  attack.call(@target)\n  ...\n  210  	elsif line =~ /is already missing that!/\n  211  		@location = locations.pop\n  212: 		put 'aim clear' unless @location\n  213  		attack.call(@target)\n  214  	elsif line =~ /Roundtime:/\n\nE:\\Google Drive\\Lich\\scripts\\commonFight.lic:\n   28      $uac = 'punch' if Char.name == 'Lumino' || Char.name == 'Iloru' || Char.name == 'Iloru'\n   29      $position = 'decent'\n   30:     $aim_location = 'head'\n   31      $champion = false\n   32      @guild = 'none'\n   33      @guild = 'wizard' if Char.name == 'Lumino' || Char.name == 'Iloru'\n   34      @guild = 'bard' if Char.name == 'Iloru'\n   35:     @attackMsg = \"^You attempt|^What were|^Try|^You make|^You cannot aim that high|already missing that\"\n   36    end\n   37    module_function :commonFightInit\n   ..\n   44        if line =~ /^You have (decent|good|excellent) positioning/\n   45          $position = $1\n   46:         if (($position == 'excellent' and $aim_location != \"\") || ($position != 'excellent' || Char.name == 'Lumino' || Char.name == 'Iloru'))\n   47            if $champion \n   48:             ($uac = 'punch'; $aim_location = '') if Char.name == 'Atilio'\n   49:             ($uac = 'punch'; $aim_location = '') if Char.name == 'Lumino' || Char.name == 'Iloru'\n   50            else\n   51:             ($uac = 'punch'; $aim_location = 'head') if Char.name == 'Atilio'\n   52:             ($uac = 'punch'; $aim_location = 'head') if Char.name == 'Lumino' || Char.name == 'Iloru'\n   53            end\n   54          end\n   ..\n   59        $pause_combat = true if line =~ /#{$pause_lines}/\n   60        $pause_combat = false if line =~ /#{$unpause_lines}/\n   61:       $aim_location = \"right leg\" if line =~ /^The .+ does not have a chest|^You cannot aim that/\n   62:       $aim_location = \"head\" if line =~ /already missing that/\n   63        $new_vaesp = true if line =~ /^A vaespilon drags/\n   64        $monsterGone = true if line =~ /A gornar-shackled ogre lumbers in/\n   ..\n  139        else\n  140          #GSC.bput \"kick\", \"#{@attackMsg}\" if Char.name == 'Lumino' || Char.name == 'Iloru'\n  141:         GSC.bput \"#{$uac} ##{target.id} #{$aim_location}\", \"#{@attackMsg}\"\n  142        end\n  143      else\n  144        #GSC.bput \"kick\", \"#{@attackMsg}\" if Char.name == 'Lumino' || Char.name == 'Iloru'\n  145:       GSC.bput \"#{$uac} ##{target.id} #{$aim_location}\", \"#{@attackMsg}\"\n  146      end\n  147    end\n\nE:\\Google Drive\\Lich\\scripts\\crit-tracking.lic:\n 2071  'Attack bumps an eyebrow\\.'         			 			    => { :r => 0, :d => 0,   :l => \"Right Eye\",      :t => \"Puncture\", :stat => \"None\",                       :wound => \"None\" },\n 2072  'Minor strike under the right eye\\, that was close\\!'         			    => { :r => 1, :d => 1,   :l => \"Right Eye\",      :t => \"Puncture\", :stat => \"None\",                       :wound => \"Rank 1 Right Eye\" },\n 2073: 'Well aimed shot almost removes an eye\\!'         			 	    => { :r => 2, :d => 5,   :l => \"Right Eye\",      :t => \"Puncture\", :stat => \"Stun 3\",                     :wound => \"Rank 2 Right Eye\" },\n 2074  'Slash across right eye\\!'         			 		   	    => { :r => 3, :d => 10,  :l => \"Right Eye\",      :t => \"Puncture\", :stat => \"Stun 5\",                     :wound => \"Rank 3 Right Eye\" },\n 2075  'Attack punctures the eye and connects with something really vital\\!'         	    => { :r => 4, :d => 17,  :l => \"Right Eye\",      :t => \"Puncture\", :stat => \"Fatal\",                      :wound => \"Rank 3 Right Eye, Rank 3 Head\" },\n ....\n 2082  'Attack bumps an eyebrow\\.'         			 			    => { :r => 0, :d => 0,   :l => \"Left Eye\",       :t => \"Puncture\", :stat => \"None\",                       :wound => \"None\" },\n 2083  'Minor strike under the left eye\\, that was close\\!'         			    => { :r => 1, :d => 1,   :l => \"Left Eye\",       :t => \"Puncture\", :stat => \"None\",                       :wound => \"Rank 1 Left Eye\" },\n 2084: 'Well aimed shot almost removes an eye\\!'         			 	    => { :r => 2, :d => 5,   :l => \"Left Eye\",       :t => \"Puncture\", :stat => \"Stun 3\",                     :wound => \"Rank 2 Left Eye\" },\n 2085  'Surgical strike removes .*\\'s left eye\\!'         			 	    => { :r => 3, :d => 10,  :l => \"Left Eye\",       :t => \"Puncture\", :stat => \"Stun 5\",                     :wound => \"Rank 3 Left Eye\" },\n 2086  'Attack punctures the eye and connects with something really vital\\!'         	    => { :r => 4, :d => 17,  :l => \"Left Eye\",       :t => \"Puncture\", :stat => \"Fatal\",                      :wound => \"Rank 3 Left Eye, Rank 3 Head\" },\n ....\n 2127  'Minor puncture to the right arm\\.'         			 		    => { :r => 1, :d => 3,  :l => \"Right Arm\",       :t => \"Puncture\", :stat => \"None\",                       :wound => \"Rank 1 Righ Arm\" },\n 2128  'Strike pierces upper arm\\!'         			 			    => { :r => 2, :d => 5,  :l => \"Right Arm\",       :t => \"Puncture\", :stat => \"None\",                       :wound => \"Rank 1 Righ Arm\" },\n 2129: 'Well aimed shot\\, punctures upper arm\\!'         			 	    => { :r => 3, :d => 7,  :l => \"Right Arm\",       :t => \"Puncture\", :stat => \"Stun 1\",                     :wound => \"Rank 1 Righ Arm\" },\n 2130  'Strike pierces forearm\\!'         			 			    => { :r => 4, :d => 10,  :l => \"Right Arm\",      :t => \"Puncture\", :stat => \"Stun 2\",                     :wound => \"Rank 2 Righ Arm\" },\n 2131  'Elbow punctured\\, oh what pain\\!'         			 		    => { :r => 5, :d => 14,  :l => \"Right Arm\",      :t => \"Puncture\", :stat => \"Stun 3\",                     :wound => \"Rank 2 Righ Arm\" },\n 2132: 'Well aimed strike shatters bone in right arm\\!'         			    => { :r => 6, :d => 17,  :l => \"Right Arm\",      :t => \"Puncture\", :stat => \"Stun 5\",                     :wound => \"Rank 2 Righ Arm\" },\n 2133  'Strike to right arm cleanly severs it at the shoulder\\!'         		    => { :r => 7, :d => 22,  :l => \"Right Arm\",      :t => \"Puncture\", :stat => \"Stun 6, Limb Loss\",          :wound => \"Rank 3 Righ Arm\" },\n 2134  'Strike to right arm shatters elbow and severs forearm\\!'         		    => { :r => 8, :d => 25,  :l => \"Right Arm\",      :t => \"Puncture\", :stat => \"Stun 8, Limb Loss\",          :wound => \"Rank 3 Righ Arm\" },\n ....\n 2138  'Minor puncture to the left arm\\.'         			 		    => { :r => 1, :d => 3,   :l => \"Left Arm\",       :t => \"Puncture\", :stat => \"None\",                       :wound => \"Rank 1 Left Arm\" },\n 2139  'Strike pierces upper arm\\!'         			 			    => { :r => 2, :d => 5,   :l => \"Left Arm\",       :t => \"Puncture\", :stat => \"None\",                       :wound => \"Rank 1 Left Arm\" },\n 2140: 'Well aimed shot\\, punctures upper arm\\!'         			 	    => { :r => 3, :d => 7,   :l => \"Left Arm\",       :t => \"Puncture\", :stat => \"Stun 1\",                     :wound => \"Rank 1 Left Arm\" },\n 2141  'Strike pierces forearm\\!'         			 			    => { :r => 4, :d => 10,  :l => \"Left Arm\",       :t => \"Puncture\", :stat => \"Stun 2\",                     :wound => \"Rank 2 Left Arm\" },\n 2142  'Elbow punctured\\, oh what pain\\!'         			 		    => { :r => 5, :d => 14,  :l => \"Left Arm\",       :t => \"Puncture\", :stat => \"Stun 3\",                     :wound => \"Rank 2 Left Arm\" },\n 2143: 'Well aimed strike shatters bone in left arm\\!'         			    => { :r => 6, :d => 17,  :l => \"Left Arm\",       :t => \"Puncture\", :stat => \"Stun 5\",                     :wound => \"Rank 2 Left Arm\" },\n 2144  'Strike to left arm cleanly severs it at the shoulder\\!'         		    => { :r => 7, :d => 22,  :l => \"Left Arm\",       :t => \"Puncture\", :stat => \"Stun 6, Limb Loss\",          :wound => \"Rank 3 Left Arm\" },\n 2145  'Strike to left arm shatters elbow and severs forearm\\!'         		    => { :r => 8, :d => 25,  :l => \"Left Arm\",       :t => \"Puncture\", :stat => \"Stun 8, Limb Loss\",          :wound => \"Rank 3 Left Arm\" },\n ....\n 2171  'Minor puncture to the right leg\\.'         			 		    => { :r => 1, :d => 5,   :l => \"Right Leg\",      :t => \"Puncture\", :stat => \"None\",                          :wound => \"Rank 1 Right Leg\" },\n 2172  'Strike pierces thigh\\!'         			 			    => { :r => 2, :d => 9,   :l => \"Right Leg\",      :t => \"Puncture\", :stat => \"Knockdown\",                     :wound => \"Rank 1 Right Leg\" },\n 2173: 'Well aimed shot, punctures calf\\!'         			 		    => { :r => 3, :d => 13,  :l => \"Right Leg\",      :t => \"Puncture\", :stat => \"Stun 1\",                        :wound => \"Rank 1 Right Leg\" },\n 2174  'Strike pierces calf\\!'         			 			    => { :r => 4, :d => 17,  :l => \"Right Leg\",      :t => \"Puncture\", :stat => \"Stun 3, Knockdown\",             :wound => \"Rank 2 Right Leg\" },\n 2175  'Well placed shot pierces knee\\, that hurt\\!'         			 	    => { :r => 5, :d => 20,  :l => \"Right Leg\",      :t => \"Puncture\", :stat => \"Stun 5, Knockdown\",             :wound => \"Rank 2 Right Leg\" },\n ....\n 2182  'Minor puncture to the left leg\\.'         			 		    => { :r => 1, :d => 5,   :l => \"Left Leg\",       :t => \"Puncture\", :stat => \"None\",                          :wound => \"Rank 1 Left Leg\" },\n 2183  'Strike pierces thigh\\!'         			 			    => { :r => 2, :d => 9,   :l => \"Left Leg\",       :t => \"Puncture\", :stat => \"Knockdown\",                     :wound => \"Rank 1 Left Leg\" },\n 2184: 'Well aimed shot\\, punctures calf\\!'         			 		    => { :r => 3, :d => 13,  :l => \"Left Leg\",       :t => \"Puncture\", :stat => \"Stun 1\",                        :wound => \"Rank 2 Left Leg\" },\n 2185  'Strike pierces calf\\!'         			 			    => { :r => 4, :d => 17,  :l => \"Left Leg\",       :t => \"Puncture\", :stat => \"Stun 3, Knockdown\",             :wound => \"Rank 2 Left Leg\" },\n 2186  'Well placed shot pierces knee\\, that hurt\\!'         			 	    => { :r => 5, :d => 20,  :l => \"Left Leg\",       :t => \"Puncture\", :stat => \"Stun 5, Knockdown\",             :wound => \"Rank 2 Left Leg\" },\n\nE:\\Google Drive\\Lich\\scripts\\crit_type_tracker.lic:\n  199  	/Attack bumps an eyebrow./ => \"RANK 0 RIGHT EYE PUNCTURE:    Damage:  0     Status Effect:  0     Wounds:  0\",\n  200  	/Minor strike under the right eye, that was close./ => \"RANK 1 RIGHT EYE PUNCTURE:    Damage:  1     Status Effect:  0     Wounds:  Rank 1\",\n  201: 	/Well aimed shot almost removes an eye./ => \"RANK 2 RIGHT EYE PUNCTURE:    Damage:  5     Status Effect:  Stunned 3 Rounds     Wounds:  Rank 2\",\n  202  	/Slash across right eye/ => \"RANK 3 RIGHT EYE PUNCTURE:    Damage:  10     Status Effect:  Stunned 5 Rounds     Wounds:  Rank 3\",\n  203  	/Attack punctures the eye and connects with something really vital./ => \"RANK 4 RIGHT EYE PUNCTURE:    Damage:  17     Status Effect:  FATAL     Wounds:  Rank 3, + head Rank 3\",\n  ...\n  209  	/Attack bumps an eyebrow./ => \"RANK 0 LEFT EYE PUNCTURE:    Damage:  0     Status Effect:  0     Wounds:  0\",\n  210  	/Minor strike under the left eye, that was close./ => \"RANK 1 LEFT EYE PUNCTURE:    Damage:  1     Status Effect:  0     Wounds:  Rank 1\",\n  211: 	/Well aimed shot almost removes an eye./ => \"RANK 2 LEFT EYE PUNCTURE:    Damage:  5     Status Effect:  Stunned 3 Rounds     Wounds:  Rank 2\",\n  212  	/Surgical strike removes the .*?'s left eye./ => \"RANK 3 LEFT EYE PUNCTURE:    Damage:  10     Status Effect:  Stunned 5 Rounds     Wounds:  Rank 3\",\n  213  	/Attack punctures the eye and connects with something really vital./ => \"RANK 4 LEFT EYE PUNCTURE:    Damage:  17     Status Effect:  FATAL     Wounds:  Rank 3, + head Rank 3\",\n  ...\n  240  	/Minor puncture to the right arm./ => \"RANK 1 RIGHT ARM PUNCTURE:    Damage:  3     Status Effect:  0     Wounds:  Rank 1\",\n  241  	/Strike pierces upper arm./ => \"RANK 2 RIGHT ARM PUNCTURE:    Damage:  5     Status Effect:  0     Wounds:  Rank 1\",\n  242: 	/Well aimed shot, punctures upper arm./ => \"RANK 3 RIGHT ARM PUNCTURE:    Damage:  7     Status Effect:  Stunned 1 Round     Wounds:  Rank 1\",\n  243  	/Strike pierces forearm./ => \"RANK 4 RIGHT ARM PUNCTURE:    Damage:  10     Status Effect:  Stunned 2 Rounds     Wounds:  Rank 2\",\n  244  	/Elbow punctured, oh what pain./ => \"RANK 5 RIGHT ARM PUNCTURE:    Damage:  14     Status Effect:  Stunned 3 Rounds     Wounds:  Rank 2\",\n  245: 	/Well aimed strike shatters bone in right arm./ => \"RANK 6 RIGHT ARM PUNCTURE:    Damage:  17     Status Effect:  Stunned 5 Rounds     Wounds:  Rank 2\",\n  246  	/Strike to right arm cleanly severs it at the shoulder./ => \"RANK 7 RIGHT ARM PUNCTURE:    Damage:  22     Status Effect:  Stunned 6 Rounds, AMPUTATE     Wounds:  Rank 3\",\n  247  	/Strike to right arm shatters elbow and severs forearm./ => \"RANK 8 RIGHT ARM PUNCTURE:    Damage:  25     Status Effect:  Stunned ?? Rounds, AMPUTATE     Wounds:  Rank 3\",\n  ...\n  250  	/Minor puncture to the left arm./ => \"RANK 1 LEFT ARM PUNCTURE:    Damage:  3     Status Effect:  0     Wounds:  Rank 1\",\n  251  	/Strike pierces upper arm./ => \"RANK 2 LEFT ARM PUNCTURE:    Damage:  5     Status Effect:  0     Wounds:  Rank 1\",\n  252: 	/Well aimed shot, punctures upper arm./ => \"RANK 3 LEFT ARM PUNCTURE:    Damage:  7     Status Effect:  Stunned 1 Round     Wounds:  Rank 1\",\n  253  	/Strike pierces forearm./ => \"RANK 4 LEFT ARM PUNCTURE:    Damage:  10     Status Effect:  Stunned 2 Rounds     Wounds:  Rank 2\",\n  254  	/Elbow punctured, oh what pain./ => \"RANK 5 LEFT ARM PUNCTURE:    Damage:  14     Status Effect:  Stunned 3 Rounds     Wounds:  Rank 2\",\n  255: 	/Well aimed strike shatters bone in left arm./ => \"RANK 6 LEFT ARM PUNCTURE:    Damage:  17     Status Effect:  Stunned 5 Rounds     Wounds:  Rank 2\",\n  256  	/Strike to left arm cleanly severs it at the shoulder./ => \"RANK 7 LEFT ARM PUNCTURE:    Damage:  22     Status Effect:  Stunned 6 Rounds, AMPUTATE     Wounds:  Rank 3\",\n  257  	/Strike to left arm shatters elbow and severs forearm./ => \"RANK 8 LEFT ARM PUNCTURE:    Damage:  25     Status Effect:  Stunned ?? Rounds, AMPUTATE     Wounds:  Rank 3\",\n  ...\n  260  	/Minor puncture to the right leg./ => \"RANK 1 RIGHT LEG PUNCTURE:    Damage:  5     Status Effect:  0     Wounds:  Rank 1\",\n  261  	/Strike pierces thigh./ => \"RANK 2 RIGHT LEG PUNCTURE:    Damage:  9     Status Effect:  Knockdown     Wounds:  Rank 1\",\n  262: 	/Well aimed shot, punctures calf./ => \"RANK 3 RIGHT LEG PUNCTURE:    Damage:  13     Status Effect:  Stunned 1 Round     Wounds:  Rank 1\",\n  263  	/Strike pierces calf./ => \"RANK 4 RIGHT LEG PUNCTURE:    Damage:  17     Status Effect:  Stunned 3 Rounds, Knockdown     Wounds:  Rank 2\",\n  264  	/Well placed shot pierces knee, that hurt./ => \"RANK 5 RIGHT LEG PUNCTURE:    Damage:  20     Status Effect:  Stunned 5 Rounds, Knockdown     Wounds:  Rank 2\",\n  ...\n  270  	/Minor puncture to the left leg./ => \"RANK 1 LEFT LEG PUNCTURE:    Damage:  5     Status Effect:  0     Wounds:  Rank 1\",\n  271  	/Strike pierces thigh./ => \"RANK 2 LEFT LEG PUNCTURE:    Damage:  9     Status Effect:  Knockdown     Wounds:  Rank 1\",\n  272: 	/Well aimed shot, punctures calf./ => \"RANK 3 LEFT LEG PUNCTURE:    Damage:  13     Status Effect:  Stunned 1 Round     Wounds:  Rank 1\",\n  273  	/Strike pierces calf./ => \"RANK 4 LEFT LEG PUNCTURE:    Damage:  17     Status Effect:  Stunned 3 Rounds, Knockdown     Wounds:  Rank 2\",\n  274  	/Well placed shot pierces knee, that hurt./ => \"RANK 5 LEFT LEG PUNCTURE:    Damage:  20     Status Effect:  Stunned 5 Rounds, Knockdown     Wounds:  Rank 2\",\n  ...\n 2646  	/Well executed roundhouse knocks the .*? back!/ => \"RANK 6 ABDOMEN, UAC-KICK, Damage:  48  Status Effect:  Stunned 5 Rounds  Wounds:  Rank 2\",\n 2647  	/Strong kick to gut knocks the .*? back a few feet\\./ => \"RANK 7 ABDOMEN, UAC-KICK, Damage:  56  Status Effect:  Stunned 6 Rounds, Knockdown  Wounds:  Rank 3\",\n 2648: 	/Well\\-aimed hook kick strikes a vital spot in the abdomen... from the inside!/ => \"RANK 8 ABDOMEN, UAC-KICK, Damage:  64  Status Effect:  FATAL  Wounds:  Rank 3\",\n 2649  	/Powerful front kick connects with a sickening \\*CRUNCH\\*, shattering bones and rupturing internal organs!/ => \"RANK 9 ABDOMEN, UAC-KICK, Damage:  72  Status Effect:  FATAL  Wounds:  Rank 3\",\n 2650  	/Reverse roundhouse drives through abdomen, stopping only when it encounters the spine!/ => \"RANK 10 ABDOMEN, UAC-KICK, Damage:  80  Status Effect:  FATAL  Wounds:  Rank 3 + Rank 3 Back\",\n ....\n 2720  	/Snap kick to right knee catches the .*? by surprise!/ => \"RANK 2 RIGHT LEG, UAC-KICK, Damage:  10  Status Effect:  Stunned 1 Round  Wounds:  Rank 1\",\n 2721  	/Front kick catches the right shin, splintering bone\\./ => \"RANK 3 RIGHT LEG, UAC-KICK, Damage:  15  Status Effect:  Stunned 2 Rounds, Forced Kneeling  Wounds:  Rank 1\",\n 2722: 	/Well\\-aimed side kick gives the .*? a limp!/ => \"RANK 4 R/L LEG, UAC-KICK, Damage:  20  Status Effect:  Stunned 3 Rounds, Forced Kneeling, Favors Limb  Wounds:  Rank 2\",\n 2723  	/Hook kick connects with right thigh, fracturing the hip!/ => \"RANK 5 RIGHT LEG, UAC-KICK, Damage:  25  Status Effect:  Stunned 4 Rounds, Knockdown, Favors Limb  Wounds:  Rank 2\",\n 2724  	/Wheel kick connects with the right leg, tearing into tendons and muscle\\./ => \"RANK 6 RIGHT LEG, UAC-KICK, Damage:  30  Status Effect:  Stunned 5 Rounds, Knockdown  Wounds:  Rank 2\",\n ....\n 2733  	/Snap kick to left knee catches the .*? by surprise!/ => \"RANK 2 LEFT LEG, UAC-KICK, Damage:  10  Status Effect:  Stunned 1 Round  Wounds:  Rank 1\",\n 2734  	/Front kick catches the left shin, splintering bone\\./ => \"RANK 3 LEFT LEG, UAC-KICK, Damage:  15  Status Effect:  Stunned 2 Rounds, Forced Kneeling  Wounds:  Rank 1\",\n 2735: 	/Well-aimed side kick gives the .*? a limp!/ => \"RANK 4 LEFT LEG, UAC-KICK, Damage:  20  Status Effect:  Stunned 3 Rounds, Forced Kneeling, Favors Limb  Wounds:  Rank 2\",\n 2736  	/Hook kick connects with left thigh, fracturing the hip!/ => \"RANK 5 LEFT LEG, UAC-KICK, Damage:  25  Status Effect:  Stunned 4 Rounds, Knockdown, Favors Limb  Wounds:  Rank 2\",\n 2737  	/Wheel kick connects with the left leg, tearing into tendons and muscle\\./ => \"RANK 6 LEFT LEG, UAC-KICK, Damage:  30  Status Effect:  Stunned 5 Rounds, Knockdown  Wounds:  Rank 2\",\n\nE:\\Google Drive\\Lich\\scripts\\drafix scripts\\combo.lic:\n   26  		\n   27  		v2.4:\n   28: 		-Added aiming\n   29  		\n   30  		v2.5:\n   ..\n   33  		\n   34  		v2.6:\n   35: 		-Doesn't aim your jabs for faster tier up.\n   36  		\n   37  		v2.7\n   38: 		-Fixed broken aiming cycling.\n   39  		\n   40  		v2.8\n   ..\n   63  	fput \"stand\" unless standing?\n   64  	put 'stance offensive' unless percentstance(0)\n   65: 	if CharSettings['aim'] && @action !~ /jab/\n   66  		put \"#{@action} ##{target.id} #{@location}\"\n   67  	else\n   ..\n   92  }\n   93  \n   94: CharSettings['aim'] ||= false \n   95: CharSettings['aim_location'] ||= Array.new\n   96  CharSettings['stance'] ||= 'defensive'\n   97  \n   ..\n  101  	respond \"You can change this setting by typing ;#{script.name} tier#{$1} <jab/punch/grapple/kick>\"\n  102  	exit\n  103: elsif script.vars[1] =~ /^aim=(on|off)$/\n  104  	option = $1\n  105  	if option == 'on'\n  106: 		CharSettings['aim']=true\n  107  	elsif option == 'off'\n  108: 		CharSettings['aim']=false\n  109  	else\n  110  		respond \"Bad option: #{option}\"\n  111  		exit\n  112  	end\n  113: 	respond \"Turning aiming #{option}\"\n  114  	exit\n  115: elsif script.vars[1] =~ /^aim$/\n  116: 	unless CharSettings['aim']\n  117: 		respond \"Aiming is turned off.\"\n  118: 		respond \"Please enable aiming before using this option\"\n  119: 		respond \";#{script.name} aim=<on/off>\"\n  120  		respond\n  121  		exit\n  ...\n  127  		exit\n  128  	end\n  129: 	CharSettings['aim_location'].clear\n  130  	script.vars[2..-1].join(' ').gsub(', ', ',').split(',').reverse.each{|location|\n  131: 		CharSettings['aim_location'].push(location)\n  132  	}\n  133: 	respond \"Now aiming in this order (one body part per line):\"\n  134: 	respond CharSettings['aim_location'].reverse\n  135  	respond\n  136  	respond \"Note: Remember to use a comma to seperate the body parts\"\n  ...\n  147  	respond \";#{script.name} tier3 <jab/punch/grapple/kick>\"\n  148  	respond\n  149: 	respond \";#{script.name} aim=<on/off>\"\n  150: 	respond \";#{script.name} aim <body parts>\"\n  151: 	respond \" ex: ;#{script.name} aim head, neck, right arm, chest\" \n  152  	respond\n  153  	respond \";#{script.name} stance <offensive/defensive/neutral/whatever>\"\n  ...\n  173  end\n  174  \n  175: put 'aim clear'\n  176  put 'stance off'\n  177  @action =  CharSettings['tierup']\n  ...\n  186  	exit\n  187  end\n  188: locations = CharSettings['aim_location'].dup\n  189  @location = locations.pop\n  190  attack.call(@target)\n  ...\n  210  	elsif line =~ /is already missing that!/\n  211  		@location = locations.pop\n  212: 		put 'aim clear' unless @location\n  213  		attack.call(@target)\n  214  	elsif line =~ /Roundtime:/\n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n    8  @guild = 'wizard' if Char.name == 'Bilkago'\n    9  @guild = 'bard' if Char.name == 'Iloru'\n   10: $aim = 'none'\n   11  $trapcommand = \"none\"\n   12  $watchAgain = false\n   ..\n   46      elsif line =~ /(Eye crushed|Crushing blow to head|Slash across right|Surgical strike)/\n   47        echo line\n   48:       if $aim == 'right eye'\n   49:         $aim = 'left eye'\n   50:         put 'aim left eye'\n   51:       elsif $aim == 'left eye'\n   52:         $aim = 'chest'\n   53:         put 'aim chest'\n   54        end\n   55      elsif line =~ /(Skull cracks in several places|Strike to temple! Saved by|Beautiful shot pierces skull!)/\n   56        echo line\n   57:       if $aim == 'head'\n   58:         $aim = 'neck'\n   59:         put 'aim neck'\n   60        end\n   61      elsif line =~ /(Throat nearly crushed|Pierced through neck, a fine|Neck skewered, sliding past)/\n   62        echo line\n   63:       if $aim =='neck'\n   64:         $aim = 'right eye'\n   65:         put 'aim right eye'\n   66        end\n   67:     elsif line =~ /#{$legCritMsgs}/ and $aim == 'right leg'\n   68:       $aim = 'left leg'\n   69:       put 'aim left leg'\n   70:     elsif line =~ /#{$legCritMsgs}/ and $aim == 'left leg'\n   71:       $aim = 'clear'\n   72:       put 'aim clear'\n   73      elsif line =~ /fall victim|^You glance around/\n   74        $watchAgain = true\n   75      elsif line =~ /An announcer shouts, \"Send in a champion!/\n   76        $champNumber = $champNumber + 1\n   77:     elsif line =~ /^The .+ does not have a chest|^You cannot aim that/\n   78:       $aim = 'right leg'\n   79:       put 'aim right leg'\n   80      elsif line =~ /already missing thatxxxx/\n   81:       $aim = 'chest'\n   82:       put 'aim chest'\n   83      end\n   84  \n   ..\n   90  fput 'stance off' until stance == \"offensive\"\n   91  if @guild == 'bard'\n   92:   #$aim = 'head'\n   93:   #GSC.bput \"aim head\", \"You're\"\n   94    #GSC.bput \"get my warblade from my bag\", \"You grab\"\n   95    #GSC.bput \"remove shield\", \"You sling\"\n   ..\n  119      if @guild == 'bardxxxx'\n  120        if checknpcs[0] =~ /champion/\n  121:         #$aim = 'right leg'\n  122:         #put 'aim right leg'\n  123:         #$aim = 'clear'\n  124:         #put 'aim clear'\n  125        end\n  126        Spell[1005].cast if checknpcs[0] =~ /slaver|champion|grahnk|cave worm|automaton/\n  ...\n  149        end\n  150      end\n  151:     #if $aim != 'head' and $aim != 'none'\n  152:     #  $aim = 'head'\n  153:     #  put 'aim head'\n  154      #end\n  155      $watchAgain = false\n\nE:\\Google Drive\\Lich\\scripts\\ego2.lic:\n   34  			pay attention to disks\n   35  		0.4 (2014-11-04):\n   36: 			fixed poaching issue where escort id wasn't being checked when he exclaims, \"It's an ambush!\"\n   37  		0.3 (2014-09-29):\n   38  			reworked ambush detection to prevent false positives (poaching other peoples bandits)\n   ..\n  294  			$ego2_staggered_ambush = false\n  295  			echo 'not my ambush' if $ego2_debug\n  296: 		elsif line =~ /An? .*?\\#{$ego2_escort_id}.*? fearfully exclaims, \\\"It's an ambush!\\\"|<compass>.*?(?:quickly approaches|suddenly leaps from|leaps out of|suddenly jumps out of the shadows)|carefully concealed metal jaws|nearly invisible length of razor wire|length of nearly invisible razor wire|carefully concealed inflated pouch|carefully concealed looped rope|a carefully concealed net|Suddenly, the ground gives out from under you as you fall into a shallow pit filled with tiny spikes!/\n  297  			# removed cause it caused a poach: tiny shard of jet black crystal\n  298  			$ego2_my_ambush = true\n  ...\n 1837  	A giantman traveller looks faint.\n 1838  	A giantman traveller mumbles, \"I'm bleeding.\"\n 1839: 	A half-elven rogue turns to a giantman traveller and exclaims, \"I've got ya now!\"\n 1840  	A half-elven rogue swings a backsword at a giantman traveller!\n 1841  	AS: +414 vs DS: +204 with AvD: +38 + d100 roll: +49 = +297\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\Base.cmd:\n  691  \n  692  \n  693: aim:\n  694: var location aim1\n  695  var todo $0\n  696: aim1:\n  697  matchre return ^You begin to target\n  698  matchre return ^You shift your target to\n  699  matchre return ^You are already targetting that\\!\n  700: matchre return ^You need both hands in order to aim\\.\n  701: matchre return ^At what are you trying to aim\\?\n  702  matchre return ^Your .+ isn't loaded\\!\n  703  matchre return ^But the .+ in your right hand isn't a ranged weapon\\!\n  704: matchre return ^You don't have a ranged weapon to aim with\\!\n  705: put aim %todo\n  706  goto retry\n  707  \n  ...\n 1692  #action goto exit.full when ^\\w+ gestures at you\\.\n 1693  action goto exit.temp when ^\\* Someone snipes .* at you\\.\n 1694: action goto exit.temp when ^\\w+ begins to aim at you\n 1695  action goto exit.temp when ^\\w+ turns to face you\\.\n 1696: action goto exit.temp when ^\\w+ appears to be aiming at you\n 1697  action goto exit.temp when ^Something grabs your arm and drags you \\w+ with it . . .\n 1698  action goto exit.temp when ^Something grabs your arm and tries to drag you, but you resist and stand firm\\.\n ....\n 1764  action var People.Room occupied when ^With a waver like a mirage, \\w+ fades into view\\.$\n 1765  action var People.Room occupied when ^You notice \\w+ loading\n 1766: action var People.Room occupied when ^\\w+ appears to be aiming at\n 1767  action var People.Room occupied when ^You notice \\w+'s attempt to remain hidden\n 1768  action var People.Room occupied when Appearing to have lost sight of its target\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\favors.cmd:\n  202       setvariable text $0\n  203       if %display = 1 then put #statusbar Getting %quantity favors from %god. %favorsgot favors gained so far. --- [ %text ] --- If you like this script please send a tip to Gavinne@play.net via Paypal\n  204:      if %display = 2 then put #statusbar Getting %quantity favors from %god. %favorsgot favors gained so far. --- [ %text ] --- Or contact XLNOTHINGLX on AIM and ask about the awesome scripts we sell!\n  205       math display add 1\n  206       if %display > 2 then setvariable display 1\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\hunt.cmd:\n   98  ## TEND: Will tend external wounds if bleeding - WILL NOT UNWRAP IF   ##\n   99  ##		 WOUND STARTS BLEEDING WORSE								  ##\n  100: ## TARGET: specifies a target to aim/target for attacks               ##\n  101  ## TIE: Ties bundles when first created, saves inventory space        ##\n  102  ## TIMER: will set a timer to abort the script after x seconds        ##\n  ...\n  166  action (hunt) put #queue clear; send 1 $lastcommand when ^\\.\\.\\.wait|^Sorry, you may only type\n  167  action (hunt) put #queue clear; send 1 $lastcommand when ^You are still stunned\n  168: action put #beep;put #flash when ^(.+) (say|says|asks|exlaims|whispers)\n  169  action (stalk) put #send put #script pause hunt;put #send 1 walk %starter.room;put #send 2 put #script resume;put #echo >Log Returned to starting room when eval $roomid != %starter.room\n  170  action (stalk) off\n  ...\n  199  var skinnablemonsters1 frog|silverfish|musk hog|grub|crayfish|burrower|crab|boar|skunk|badger|pothanit|trollkin|brocket deer|deer\n  200  var skinnablemonsters2 kobold|s'lai scout|jackal|bobcat|cougar|grass eel|bear|ram|spider|wolf|boobrie|beisswurm|rock troll|sluagh\n  201: var skinnablemonsters3 serpent|firecat|vulture|arbelog|caiman|steed|larva|snowbeast|sow|worm|unyn|gargoyle|crocodile|Isundjen conjurer\n  202  var skinnablemonsters4 merrows|viper|peccary|la'tami|barghest|angiswaerd hatchling|vykathi harvester|pard|moth|kartais\n  203  var skinnablemonsters5 la'heke|vykathi soldier|boa|warcat|moda|arzumo|carcal|blood warrior|goblin|cave troll|black ape\n  ...\n  295  var APPRAISE_COMBAT true \n  296  \n  297: ## Has full aim been attained yet\n  298: var FULL_AIM NO\n  299  \n  300  ## Has full targetting been attained yet\n  ...\n  544  ## SNAP can be OFF or ON\n  545  ## ON - Snap fires a ranged weapon\n  546: ## OFF - Default, waits for a full aim to fire a ranged\n  547  put #var GH_SNAP OFF\n  548  \n  ...\n 4034  	var LAST RANGED\n 4035  	save 1000\n 4036: 	action var FULL_AIM YES when You think you have your best shot possible\n 4037: 	action var FULL_AIM NO when stop concentrating on aiming\n 4038  	if ((toupper(\"$GH_RETREAT\") = \"ON\") && (\"%RETREATING\" = \"OFF\") && ((\"%FIRE_TYPE\" != \"SNIPE\") || (\"%FIRE_TYPE\" != \"POACH\"))) then gosub RETREAT_TRIGGERS\n 4039  	if (\"%lastmaneuver\" = \"none\") then gosub COMBAT_COMMAND dodge\n ....\n 4048  		if \"%RETREATING\" = \"ON\" then action (retreat) off\n 4049  		gosub LOAD\n 4050: 		gosub AIM\n 4051  		if \"%RETREATING\" = \"ON\" then action (retreat) on\n 4052  		#if (toupper(\"$GH_SNAP\") = \"ON\")) then gosub stun\n 4053  		if ((\"%FIRE_TYPE\" = \"POACH\") || (\"%FIRE_TYPE\" = \"SNIPE\")) then gosub HIDE\n 4054: 		if (toupper(\"$GH_SNAP\") = \"OFF\")) then gosub AIMING\n 4055  		elseif ($GH_SNAP_PAUSE > 0) then pause $GH_SNAP_PAUSE\n 4056: 		var FULL_AIM NO\n 4057  			matchre RANGE_FIRE2 You can not poach|are not hidden\n 4058  			match RETURN isn't loaded\n ....\n 4071  	goto RANGED_ERROR\n 4072  \n 4073: AIM:\n 4074: 	var AIM_TIMEOUT %t\n 4075: 	math AIM_TIMEOUT add 30\n 4076  		match RE_LOAD loaded\n 4077  		matchre RETURN best shot possible now|already targetting|begin to target|You shift your\n 4078  		matchre FACE ^There is nothing|Face what\n 4079: 	put aim\n 4080  	matchwait 80\n 4081  	goto RANGED_ERROR\n ....\n 4085  	goto RANGED_COMBAT\n 4086  \n 4087: AIMING:\n 4088: 	if (\"%FULL_AIM\" = \"YES\") then return\n 4089  	else\n 4090  	{\n 4091: 		if (%t > %AIM_TIMEOUT) then goto RANGED_COMBAT\n 4092  		else\n 4093  		{\n 4094  			pause 3\n 4095: 			goto AIMING\n 4096  		}\n 4097  	}\n ....\n 5858  		echo ***      If you think this is an error,      ***\n 5859  		echo *** post the creature you just killed please ***\n 5860: 		echo ***          Or AIM IRXSwmr about it         ***\n 5861  		echo\n 5862  	}\n ....\n 6026  		{\n 6027  			action remove You think you have your best shot possible\n 6028: 			action remove stop concentrating on aiming\n 6029  			gosub RANGE_SHEATHE\n 6030  			if (matchre(\"$roomobjs\", \"%AMMO\\b\")) then gosub RANGED_CLEAN\n ....\n 6860  	echo ** EXAMPLE: .hunt MULTI - starts with Set-up1\n 6861  	echo ** EXAMPLE: .hunt MULTI 3 - starts with Set-up3\n 6862: 	echo ** I know its a bit complex. AIM: IRXSwmr EMAIL: KllrWhle79@hotmail.com\n 6863  	echo **\n 6864  	echo ** A note on multi word weapons:\n ....\n 7022  	echo **************************************************************************************\n 7023  	echo ** For those of us who are impatient, ALL Ranged systems can be snapfired.\n 7024: 	echo **   Snapfiring will cause the script to aim and fire instanly after you load until\n 7025  	echo ** your target is dead.\n 7026  	echo **\n\nE:\\Google Drive\\Lich\\scripts\\gemstonegmcheck.cmd:\n   60  	goto pausequit\n   61  \n   62: (ignor|continu|\\btyp(e[sd]?|ing)\\b|hello|respond|reply|answer|speak|spoken|whisper|scream| you (have|are)|\\bSEND\\b|aloud|talk|\\bscript(s?|ing|ed)\\b|smil|frown|snort|yell|exclaim|announc|declar|voic|say|claim|boom|shout|this place|you there|squeak|doing|spider|alert|cheer|nod|jump|wav|stop)\n   63  \n   64  \n\nE:\\Google Drive\\Lich\\scripts\\glitch.rbw:\n   10  #\n   11  # Redistributions of source code must retain the above copyright\n   12: # notice, this list of conditions and the following disclaimer.\n   13  #\n   14  # Redistributions in binary form must reproduce the above copyright\n   15: # notice, this list of conditions and the following disclaimer in the\n   16  # documentation and/or other materials provided with the distribution.\n   17  #\n   ..\n   23  # \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n   24  # LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n   25: # A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n   26  # CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n   27  # EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n   ..\n 7315          ary.push sprintf(\"  %-035s| Current Current\", 'Skill Name')\n 7316          ary.push sprintf(\"  %-035s|%08s%08s\", '', 'Bonus', 'Ranks')\n 7317:         fmt = [ [ 'Two Weapon Combat', 'Armor Use', 'Shield Use', 'Combat Maneuvers', 'Edged Weapons', 'Blunt Weapons', 'Two-Handed Weapons', 'Ranged Weapons', 'Thrown Weapons', 'Polearm Weapons', 'Brawling', 'Ambush', 'Multi Opponent Combat', 'Combat Leadership', 'Physical Fitness', 'Dodging', 'Arcane Symbols', 'Magic Item Use', 'Spell Aiming', 'Harness Power', 'Elemental Mana Control', 'Mental Mana Control', 'Spirit Mana Control', 'Elemental Lore - Air', 'Elemental Lore - Earth', 'Elemental Lore - Fire', 'Elemental Lore - Water', 'Spiritual Lore - Blessings', 'Spiritual Lore - Religion', 'Spiritual Lore - Summoning', 'Sorcerous Lore - Demonology', 'Sorcerous Lore - Necromancy', 'Mental Lore - Divination', 'Mental Lore - Manipulation', 'Mental Lore - Telepathy', 'Mental Lore - Transference', 'Mental Lore - Transformation', 'Survival', 'Disarming Traps', 'Picking Locks', 'Stalking and Hiding', 'Perception', 'Climbing', 'Swimming', 'First Aid', 'Trading', 'Pickpocketing' ], [ 'twoweaponcombat', 'armoruse', 'shielduse', 'combatmaneuvers', 'edgedweapons', 'bluntweapons', 'twohandedweapons', 'rangedweapons', 'thrownweapons', 'polearmweapons', 'brawling', 'ambush', 'multiopponentcombat', 'combatleadership', 'physicalfitness', 'dodging', 'arcanesymbols', 'magicitemuse', 'spellaiming', 'harnesspower', 'emc', 'mmc', 'smc', 'elair', 'elearth', 'elfire', 'elwater', 'slblessings', 'slreligion', 'slsummoning', 'sldemonology', 'slnecromancy', 'mldivination', 'mlmanipulation', 'mltelepathy', 'mltransference', 'mltransformation', 'survival', 'disarmingtraps', 'pickinglocks', 'stalkingandhiding', 'perception', 'climbing', 'swimming', 'firstaid', 'trading', 'pickpocketing' ] ]\n 7318          0.upto(fmt.first.length - 1) { |n|\n 7319            dots = '.' * (35 - fmt[0][n].length)\n ....\n 7496        @@arcanesymbols ||= 0\n 7497        @@magicitemuse ||= 0\n 7498:       @@spellaiming ||= 0\n 7499        @@harnesspower ||= 0\n 7500        @@emc ||= 0\n ....\n 7562        def Skills.magicitemuse;              @@magicitemuse;            end\n 7563        def Skills.magicitemuse=(val);        @@magicitemuse=val;        end\n 7564:       def Skills.spellaiming;               @@spellaiming;             end\n 7565:       def Skills.spellaiming=(val);         @@spellaiming=val;         end\n 7566        def Skills.harnesspower;              @@harnesspower;            end\n 7567        def Skills.harnesspower=(val);        @@harnesspower=val;        end\n ....\n 7622  \n 7623        def Skills.serialize\n 7624:         [@@twoweaponcombat, @@armoruse, @@shielduse, @@combatmaneuvers, @@edgedweapons, @@bluntweapons, @@twohandedweapons, @@rangedweapons, @@thrownweapons, @@polearmweapons, @@brawling, @@ambush, @@multiopponentcombat, @@combatleadership, @@physicalfitness, @@dodging, @@arcanesymbols, @@magicitemuse, @@spellaiming, @@harnesspower, @@emc, @@mmc, @@smc, @@elair, @@elearth, @@elfire, @@elwater, @@slblessings, @@slreligion, @@slsummoning, @@sldemonology, @@slnecromancy, @@mldivination, @@mlmanipulation, @@mltelepathy, @@mltransference, @@mltransformation, @@survival, @@disarmingtraps, @@pickinglocks, @@stalkingandhiding, @@perception, @@climbing, @@swimming, @@firstaid, @@trading, @@pickpocketing]\n 7625        end\n 7626        def Skills.load_serialized=(array)\n 7627:         @@twoweaponcombat, @@armoruse, @@shielduse, @@combatmaneuvers, @@edgedweapons, @@bluntweapons, @@twohandedweapons, @@rangedweapons, @@thrownweapons, @@polearmweapons, @@brawling, @@ambush, @@multiopponentcombat, @@combatleadership, @@physicalfitness, @@dodging, @@arcanesymbols, @@magicitemuse, @@spellaiming, @@harnesspower, @@emc, @@mmc, @@smc, @@elair, @@elearth, @@elfire, @@elwater, @@slblessings, @@slreligion, @@slsummoning, @@sldemonology, @@slnecromancy, @@mldivination, @@mlmanipulation, @@mltelepathy, @@mltransference, @@mltransformation, @@survival, @@disarmingtraps, @@pickinglocks, @@stalkingandhiding, @@perception, @@climbing, @@swimming, @@firstaid, @@trading, @@pickpocketing = array\n 7628        end\n 7629        def Skills.to_bonus(ranks)\n\nE:\\Google Drive\\Lich\\scripts\\grguild.lic:\n   37  	ERRORS:\n   38  			(A log, UNEDITED, is always helpful when you find a bug, and I'll try to squish em ASAP.)\n   39: 			For help, check the PC thread in the ROGUE folder, or find me on AIM at Lord Gibreficul.  Please make sure you've read the PC thread and the script notes (;grguild notes and ;grguild help) before contacting me directly.  I'm busy writing scripts!\n   40  \n   41  	version: 0.4\n   ..\n 1174  		fput \"say #{x5}\"\n 1175  	end\n 1176: 	y = matchwait /[^\\s]+\\s(says|exclaims),/\n 1177  	z = false\n 1178  	z = matchtimeout(1, \"repetition|complete\")\n ....\n 1235  	clear\n 1236  	fput \"say #{hacked_line.join(', ')}\"\n 1237: 	y = matchwait /[^\\s]+\\s(says|exclaims),/\n 1238  	z = false\n 1239  	z = matchtimeout(1, \"repetition|complete\")\n 1240  	spells = []\n 1241  	if z =~ /repetition/i\n 1242: 		wtf = matchwait /[^\\s]+\\s(says|exclaims),/\n 1243  		vars = []\n 1244  		if wtf =~ /best trap/ then vars.push('trap') end\n ....\n 1406  		end\n 1407  	}\n 1408: 	y = matchwait /[^\\s]+\\s(says|exclaims),/\n 1409  	z = false\n 1410  	z = matchtimeout(1, \"repetition|complete\")\n ....\n 2929  	respond \"          restart the script with 'start' as the command variable.\"\n 2930  	respond \"   \"\n 2931: 	respond \"   Problems, suggestions, submissions for incomplete tasks(will be credited),  AIM @ Lord Gibreficul\"\n 2932  	respond \"  For current update notes, use ;grguild notes\"\n 2933  	respond \"\"\n\nE:\\Google Drive\\Lich\\scripts\\infomon.lic:\n  975  			begin\n  976  				before_ranks = [ Spells.minorelemental, Spells.minormental, Spells.majorelemental, Spells.minorspiritual, Spells.majorspiritual, Spells.wizard, Spells.sorcerer, Spells.ranger, Spells.paladin, Spells.empath, Spells.cleric, Spells.bard, Skills.magicitemuse, Skills.arcanesymbols ]\n  977: 				Skills.armoruse, Skills.shielduse, Skills.combatmaneuvers, Skills.edgedweapons, Skills.bluntweapons, Skills.twohandedweapons, Skills.rangedweapons, Skills.thrownweapons, Skills.polearmweapons, Skills.brawling, Skills.ambush, Skills.multiopponentcombat, Skills.combatleadership, Skills.physicalfitness, Skills.dodging, Skills.arcanesymbols, Skills.magicitemuse, Skills.spellaiming, Skills.harnesspower, Skills.emc, Skills.mmc, Skills.smc, Skills.elair, Skills.elearth, Skills.elfire, Skills.elwater, Skills.slblessings, Skills.slreligion, Skills.slsummoning, Skills.sldemonology, Skills.slnecromancy, Skills.mldivination, Skills.mlmanipulation, Skills.mltelepathy, Skills.mltransference, Skills.mltransformation, Skills.survival, Skills.disarmingtraps, Skills.pickinglocks, Skills.stalkingandhiding, Skills.perception, Skills.climbing, Skills.swimming, Skills.firstaid, Skills.trading, Skills.pickpocketing, Spells.minorelemental, Spells.minormental, Spells.majorelemental, Spells.minorspiritual, Spells.majorspiritual, Spells.wizard, Spells.sorcerer, Spells.ranger, Spells.paladin, Spells.empath, Spells.cleric, Spells.bard = 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0\n  978  				until (line = get) =~ /\\(Use |[0-9]+ days? remain|You started this migration period|Further information can be found in the FAQs./\n  979  					if line =~ /Two Weapon Combat/\n  ...\n 1013  					elsif line =~ /Magic Item Use/\n 1014  						Skills.magicitemuse = $'.split[2].to_i\n 1015: 					elsif line =~ /Spell Aiming/\n 1016: 						Skills.spellaiming = $'.split[2].to_i\n 1017  					elsif line =~ /Harness Power/\n 1018  						Skills.harnesspower = $'.split[2].to_i\n\nE:\\Google Drive\\Lich\\scripts\\lnet.lic:\n  455  						skills['Arcane Symbols'] = Skills.arcanesymbols if Skills.arcanesymbols > 0\n  456  						skills['Magic Item Use'] = Skills.magicitemuse if Skills.magicitemuse > 0\n  457: 						skills['Spell Aiming'] = Skills.spellaiming if Skills.spellaiming > 0\n  458  						skills['Harness Power'] = Skills.harnesspower if Skills.harnesspower > 0\n  459  						skills['Elemental Mana Control'] = Skills.emc if Skills.emc > 0\n  ...\n  861  					end\n  862  				elsif (@active_attributes.last['type'] == 'skills') and (name = @active_attributes.last['from'])\n  863: 					order = [ 'Two Weapon Combat', 'Armor Use', 'Shield Use', 'Combat Maneuvers', 'Edged Weapons', 'Blunt Weapons', 'Two-Handed Weapons', 'Ranged Weapons', 'Thrown Weapons', 'Polearm Weapons', 'Brawling', 'Ambush', 'Multi Opponent Combat', 'Combat Leadership', 'Physical Fitness', 'Dodging', 'Arcane Symbols', 'Magic Item Use', 'Spell Aiming', 'Harness Power', 'Elemental Mana Control', 'Mental Mana Control', 'Spirit Mana Control', 'Elemental Lore - Air', 'Elemental Lore - Earth', 'Elemental Lore - Fire', 'Elemental Lore - Water', 'Spiritual Lore - Blessings', 'Spiritual Lore - Religion', 'Spiritual Lore - Summoning', 'Sorcerous Lore - Demonology', 'Sorcerous Lore - Necromancy', 'Mental Lore - Divination', 'Mental Lore - Manipulation', 'Mental Lore - Telepathy', 'Mental Lore - Transference', 'Mental Lore - Transformation', 'Survival', 'Disarming Traps', 'Picking Locks', 'Stalking and Hiding', 'Perception', 'Climbing', 'Swimming', 'First Aid', 'Trading', 'Pickpocketing', 'Major Elemental', 'Minor Elemental', 'Minor Mental', 'Major Spirit', 'Minor Spirit', 'Wizard', 'Sorcerer', 'Ranger', 'Paladin', 'Empath', 'Cleric', 'Bard' ]\n  864  					unless LNet.ignored?(name)\n  865  						if data.nil?\n\nE:\\Google Drive\\Lich\\scripts\\monitor.lic:\n   86  \n   87  ## *** This is a list of certain keywords that GMS may/may not use.\n   88: dangerTriggers = /(ignor|continu|\\btyp(e[sd]?|ing)\\b|hello|respond|reply|answer|speak|spoken|whisper|scream|\\bSEND\\b|aloud|talk|\\bscript(s?|ing|ed)\\b|smil|frown|snort|\\byell\\b|exclaim|announc|declar|voic|say|claim|boom|shout|this place|you there|squeak|spider|alert|cheer|nod|jump|wav|stop|attention|\\bsilver[s]?\\b|responsive|wrong|spider|monkey|mouse|\\brat\\b|frog|demand)/i\n   89  ### Checks for CAPITAL letters length 5 to 100. See ignores below.\n   90  capitalTriggers = /([A-Z]{5,100})/\n\nE:\\Google Drive\\Lich\\scripts\\monitor_old.lic:\n   32  \n   33  ## ** This is what is used to check for dangertriggers. These could probably use some toning down.\n   34: danger_triggers = /(ignor|continu|\\btyp(e[sd]?|ing)\\b|hello|respond|reply|answer|speak|spoken|whisper|scream|\\bSEND\\b|aloud|talk|\\bscript(s?|ing|ed)\\b|smil|frown|snort|\\byell\\b|exclaim|announc|declar|voic|say|claim|boom|shout|this place|you there|squeak|spider|alert|cheer|nod|jump|wav|stop|attention|\\bsilver[s]?\\b|responsive|wrong|spider|monkey|mouse|\\brat\\b|frog|demand)/i\n   35  \n   36  ### Checks for CAPITAL letters length 5 to 100. See ignores below.\n\nE:\\Google Drive\\Lich\\scripts\\new_scriptcheck.lic:\n   18  end\n   19  \n   20: dangertriggers = /(ignor|continu|\\btyp(e[sd]?|ing)\\b|hello|respond|reply|answer|speak|spoken|whisper|scream|\\bSEND\\b|aloud|talk|\\bscript(s?|ing|ed)\\b|smil|frown|snort|\\byell\\b|exclaim|announc|declar|voic|say|claim|boom|shout|this place|you there|squeak|spider|alert|cheer|nod|jump|wav|stop|attention|\\bsilver[s]?\\b|responsive|wrong|spider|monkey|mouse|\\brat\\b|frog|demand)/i\n   21  \n   22  ## *** Set room numbers for your city if not listed here.\n\nE:\\Google Drive\\Lich\\scripts\\routineGMcheck.cmd:\n    6  	var td_gmcheck 0\n    7  \n    8: #	var dangertriggers (\\bignor(?:e[sd]?|ing)\\b|\\bcontinu(?:e[sd]?|ing)\\b|\\btyp(?:e[sd]?|ing)\\b|\\bhello\\b|\\brespond(?:e[sd]?|ing)\\b|\\breply(?:e[sd]?|ing)\\b|\\banswer(?:e[sd]?|ing)\\b|\\bspeak(?:e[sd]?|ing)\\b|\\bwhisper(?:e[sd]?|ing)\\b|\\bscream(?:e[sd]?|ing)\\b|\\bwait(?:e[sd]?|ing)\\b|\\byou have\\b|SEND\\[|\\]SEND|\\*SEND\\*|\\baloud\\b|\\btalk(?:e[sd]?|ing)\\b|\\\".*\\\"|\\bscript(?:e[sd]?|ing)\\b|\\bsmil(?:e[sd]?|ing)\\b|\\bfrown(?:e[sd]?|ing)\\b|\\bsnort(?:e[sd]?|ing)\\b|\\byell(?:e[sd]?|ing)\\b|\\bexclaim(?:e[sd]?|ing)\\b|\\bannounc(?:e[sd]?|ing)\\b|\\bdeclar(?:e[sd]?|ing)\\b|\\bvoic(?:e[sd]?|ing)\\b|\\bsa(?:id|y(?:ing)?s?)\\b|\\bclaim(?:e[sd]?|ing)\\b|\\bboom(?:e[sd]?|ing)\\b|\\bshout(?:s|ed|ing)?\\b|\\bthis place\\b|you there\\b|\\bsqueak(?:s|ed|ing)?\\b|\\bdoing\\b|\\bspider(?:s)?\\b|\\balert(?:s|ed|ing)?\\b|\\bcheer(?:s|ed|ing)?\\b|\\bnod(?:s|ded|ding)?\\b|\\btyp(?:|e|es|ed|ing)\\b|\\bjump(?:s|ed|ing)?\\b|\\bwav(?:e[sd]?|ing)\\b|\\bstop(?:|s|ped|ping)\\b  )/i\n    9  #	math keywords add 1;put #echo >log Orange *** KEYWORD: %keyword_was ****;if %keywords < 0 then math keywords\n   10  \n   11: 	var dangertriggers (\\!\\?|\\?\\!|\\!\\!|Continues|Hello|Respond|Reply|Answer|Speak|whisper|Scream|Ignoring| Wait|Y...have.*Seconds|SEND\\[|\\]SEND|\\*SEND\\*|Aloud| Talk|\\\".*\\\"|scripting|smil|frown|snort |yell|exclaim|announc|declar|voic|say| claim|announce|boom|shout|this place|you there| squeak| doing| spider|alert|cheer|nod|type |typing|typed|monkey|spider|mouse|rat\\b|frog|demand|itch|pinch|tap|^You hear someone)/i\n   12  	var combinedtriggers (your name|yourself and|yourself to)\n   13  	var SP (\\!| |@|\\#|\\$|\\%|\\^|\\&|\\*|\\(|\\)|_|-|\\+|\\=|\\{|\\}|\\||\\\\|\\;|\\'|\\\"|\\<|\\>|,|\\.|\\?|\\/)\n   ..\n  146  	setvariable say 0\n  147  	setvariable whisper 0\n  148: 	setvariable exclaim 0\n  149  	setvariable announce 0\n  150  	setvariable declare 0\n  ...\n  171  	action math jump add 1 when jump\n  172  	action math whisper add 1 when whisper\n  173: 	action math exclaim add 1 when exlcaim\n  174  	action math whistle add 1 when whistl\n  175  	action math touch add 1 when touch\n\nE:\\Google Drive\\Lich\\scripts\\switch_hunting.lic:\n   66  echo $to_hunt_zone\n   67  \n   68: ## Append with (a) or (b) to determine where to aim attacks based on skin locations\n   69  creature_name.each{|i|\n   70    short = hunt_settings['Creatures'][i]['short_name']\n\nE:\\Google Drive\\Lich\\scripts\\test10.lic:\n   31          fput \"mstrike punch ##{target.id}\"\n   32        else\n   33:         GSC.bput \"#{$uac} ##{target.id} #{$aim_location}\", \"^You attempt\"\n   34        end\n   35      else\n   36:         GSC.bput \"#{$uac} ##{target.id} #{$aim_location}\", \"^You attempt\"\n   37      end  \n   38  \n\nE:\\Google Drive\\Lich\\scripts\\ubermonk.lic:\n   13  $uac = 'punch'\n   14  $position = 'decent'\n   15: $aim_location = 'head'\n   16  $pause_lines = /^A calm washes over|^You are unable to muster the will/\n   17  $unpause_lines = /^You are enraged/\n   ..\n   33    if line =~ /^You have (decent|good|excellent) positioning/\n   34      $position = $1\n   35:     ($uac = 'punch'; $aim_location = '') if $position == 'excellent' and $aim_location != \"\" and $champion\n   36      $uac = 'punch' if $position == 'good'\n   37    end\n   ..\n   39    $pause_combat = true if line =~ /#{$pause_lines}/\n   40    $pause_combat = false if line =~ /#{$unpause_lines}/\n   41:   $aim_location = \"right leg\" if line =~ /^The .+ does not have a chest|^You cannot aim that/\n   42:   $aim_location = \"\" if line =~ /already missing that/\n   43    $new_vaesp = true if line =~ /^A vaespilon drags/\n   44  end\n   ..\n   85          GSC.bput \"mstrike punch ##{target.id}\", \"^You concentrate\"\n   86        else\n   87:         GSC.bput \"#{$uac} ##{target.id} #{$aim_location}\", \"^You attempt|^What were|^Try|^You make|^You cannot aim that high|is missing\"\n   88        end\n   89      else\n   90:         GSC.bput \"#{$uac} ##{target.id} #{$aim_location}\", \"^You attempt|^What were|^Try|^You make|^You cannot aim that high|is missing\"\n   91      end  \n   92      #waitrt?\n\nE:\\Google Drive\\Lich\\scripts\\ubermonk_bu:\n   55  elsif line =~ /is already missing that!/\n   56  @location = locations.pop\n   57: put 'aim clear' unless @location\n   58  elsif line =~ /You attempt to jab/\n   59  @uac = 'jab'\n\n311 matches across 33 files\n\n\nSearching 322 files for \"put aim\"\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\Base.cmd:\n  703  matchre return ^But the .+ in your right hand isn't a ranged weapon\\!\n  704  matchre return ^You don't have a ranged weapon to aim with\\!\n  705: put aim %todo\n  706  goto retry\n  707  \n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\hunt.cmd:\n 4077  		matchre RETURN best shot possible now|already targetting|begin to target|You shift your\n 4078  		matchre FACE ^There is nothing|Face what\n 4079: 	put aim\n 4080  	matchwait 80\n 4081  	goto RANGED_ERROR\n\n2 matches across 2 files\n\n\nSearching 322 files for \"aim right leg\"\n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n   77      elsif line =~ /^The .+ does not have a chest|^You cannot aim that/\n   78        $aim = 'right leg'\n   79:       #put 'aim right leg'\n   80      elsif line =~ /already missing thatxxxx/\n   81        $aim = 'chest'\n   ..\n  120        if checknpcs[0] =~ /champion/\n  121          #$aim = 'right leg'\n  122:         ##put 'aim right leg'\n  123          #$aim = 'clear'\n  124          ##put 'aim clear'\n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n   77      elsif line =~ /^The .+ does not have a chest|^You cannot aim that/\n   78        $aim = 'right leg'\n   79:       #put 'aim right leg'\n   80      elsif line =~ /already missing thatxxxx/\n   81        $aim = 'chest'\n   ..\n  120        if checknpcs[0] =~ /champion/\n  121          #$aim = 'right leg'\n  122:         ##put 'aim right leg'\n  123          #$aim = 'clear'\n  124          ##put 'aim clear'\n\n4 matches across 2 files\n\n\nSearching 323 files for \"aim right leg\"\n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n   77      elsif line =~ /^The .+ does not have a chest|^You cannot aim that/\n   78        $aim = 'right leg'\n   79:       #put 'aim right leg'\n   80      elsif line =~ /already missing thatxxxx/\n   81        $aim = 'chest'\n   ..\n  120        if checknpcs[0] =~ /champion/\n  121          #$aim = 'right leg'\n  122:         ##put 'aim right leg'\n  123          #$aim = 'clear'\n  124          ##put 'aim clear'\n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n   77      elsif line =~ /^The .+ does not have a chest|^You cannot aim that/\n   78        $aim = 'right leg'\n   79:       #put 'aim right leg'\n   80      elsif line =~ /already missing thatxxxx/\n   81        $aim = 'chest'\n   ..\n  120        if checknpcs[0] =~ /champion/\n  121          #$aim = 'right leg'\n  122:         ##put 'aim right leg'\n  123          #$aim = 'clear'\n  124          ##put 'aim clear'\n\n4 matches across 2 files\n\n\nSearching 324 files for \"running\"\n\nE:\\Google Drive\\Lich\\scripts\\10deeds.lic:\n    3  \n    4  \n    5: 	start_script 'go2', [ '400', '_disable_confirm_' ]; wait_while { running?('go2') }\n    6  	if checkleft then lefthand = GameObj.left_hand; multifput \"open  ##{lootsack}\",\"put ##{lefthand.id} in  ##{lootsack}\"; end\n    7  	if checkright then righthand = GameObj.right_hand; multifput \"open  ##{lootsack}\",\"put ##{righthand.id} in  ##{lootsack}\"; end\n    .\n    9  	fput \"withdraw 45000\"\n   10  	# Buy rubies\n   11: 	start_script 'go2', [ '285', '_disable_confirm_' ]; wait_while { running?('go2') }\n   12: 	start_script 'go2', [ '9269', '_disable_confirm_' ]; wait_while { running?('go2') }\n   13  	fput \"open  ##{lootsack}\"\n   14  	10.times{multifput(\"order 14\",\"buy\",\"put ruby in  ##{lootsack}\")}\n   15  	fput \"close  ##{lootsack}\"\n   16  	# Go to temple\n   17: 	start_script 'go2', [ '4044', '_disable_confirm_' ]; wait_while { running?('go2') }\n   18  	fput \"open  ##{lootsack}\"\n   19  	10.times{multifput(\"go tapestry\",\"ring chime with mallet\",\"ring chime with mallet\",\"kneel\",\"get ruby from  ##{lootsack}\",\"drop  ruby\",\"ring chime with mallet\",\"out\")}\n   ..\n   22  	fput \"close  ##{lootsack}\"\n   23  	# Return to Landing bank\n   24: 	start_script 'go2', [ '400', '_disable_confirm_' ]; wait_while { running?('go2') }\n   25  	echo \"You should have 10 more deeds now\"\n   26  \n\nE:\\Google Drive\\Lich\\scripts\\common.lic:\n   25  $pick_room = 19\n   26  $no_tpick = false\n   27: #start_script \"checkemail\" if !running? \"checkemail\"\n   28  $FAILED_COMMAND = '*FAILED*'\n   29  $ORDINALS = %w(first second third fourth fifth sixth seventh eighth ninth tenth eleventh twelfth thirteenth)\n   ..\n   41  delayed_start_script = <<-eos\n   42    sleep 5\n   43:   wait_while { running?(\"repository\")}\n   44    sleep 5\n   45    start_script 'map_mod'\n   ..\n  142  \n  143    def pauseScript(script)\n  144:     if Script.running?(script) and !Script.paused?(script)\n  145        Script.pause(script)\n  146        return true\n  ...\n  159      $silvers = 0\n  160  \n  161:     wait_while { running?('go2')}\n  162      $check_silvers = <<-eos\n  163      while line = get\n  ...\n  377      start_script \"#{script}\" if var1 =~ /xx/\n  378      sleep 1\n  379:     wait_while { running?(\"#{script}\")}\n  380      waitrt?\n  381      sleep 1\n  ...\n  516          if success\n  517            pause 2\n  518:           pause 1 while Script.running?(name)\n  519          end\n  520          success\n  ...\n  666          start_script 'go2', [\"#{room_num}\"]\n  667          timer = Time.now\n  668:         while Script.running?('go2')\n  669            if (Time.now - timer) > 30\n  670              kill_script 'go2'\n  ...\n  672              start_script 'go2', [\"#{room_num}\"]\n  673            end\n  674:           timer = Time.now if Script.running?('escort')\n  675            pause 0.5\n  676          end\n\nE:\\Google Drive\\Lich\\scripts\\commonFight.lic:\n   19  $new_vaesp = false\n   20  $max_npc = 2\n   21: $max_npc = 3 if running? 'bigshot'\n   22  $monsterGone = false\n   23  \n   ..\n   44      uac_line_checks = <<-eos\n   45      while line = get\n   46:       break unless running?($current_script_name)\n   47        if line =~ /^You have (decent|good|excellent) positioning/\n   48          $position = $1\n   ..\n   93    def loot()\n   94      dead_npcs = GameObj.npcs.find_all { |i| i.status == 'dead' }\n   95:     dead_npcs.each { |i| start_script ('sloot') if !running?('sloot')\n   96:     wait_while { running?('sloot') }}\n   97    end\n   98    module_function :loot\n   ..\n  103        returnTemp = false if (GameObj.npcs.size < 1 || status =~ /dead|gone/)\n  104      else\n  105:       returnTemp = (!bleeding? and health > 0 and !stunned?) and GameObj.npcs.size <= $max_npc and status !~ /dead|gone/ and (running? 'bigshot' or $manual_target)\n  106      end\n  107      return returnTemp\n  108:     #while GameObj.npcs.size <= $max_npc and target.status !~ /dead|gone/ and (running? 'bigshot' or $manual_target)\n  109    end\n  110    module_function :attack?\n\nE:\\Google Drive\\Lich\\scripts\\drDriver.lic:\n   82  \n   83    waitfor \"Stygian Annex\"\n   84:   kill_script 'waggle' if running? 'waggle'\n   85    clearPackage()\n   86  end\n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n   16  start_script('commonFight')\n   17  \n   18: #start_script 'monitor' if !running? 'monitor'\n   19: kill_script 'transcend' if running? 'transcend' \n   20  \n   21  $legCritMsgs = \"Blow shatters knee|Strike punctures|Shot shatters|You ripped|(Left|Right) leg ripped|Lucky shop rips|(Left|Right) hip\"\n   ..\n   24    while line = get\n   25     #echo line\n   26:     break if !running?('duskruinArena')\n   27      kill_script 'duskruinArena' if line =~ /^You've been defeated.  You'll/\n   28      #kill_script 'duskruinArena' if line =~ /^An arena guard escorts you from/\n\nE:\\Google Drive\\Lich\\scripts\\monitor.lic:\n   45  4. Update exception patterns as needed if things are popping that should not be.\n   46  \n   47: 5. Review line 352, it contains a break if !running certain scripts. Uncomment if you want.\n   48  \n   49  =end\n   ..\n  223  ignore_misc = [\n  224  	'^You (attach|add|forage|pick|put|push|remove|tap|gather|swap|open|carefully|grab|tuck|drop|climb|close|settle|reach|rummage|slip|give|toss|take|seize)',\n  225: 	'^Running your fingers',\n  226  	'^With a quick flick of',\n  227  	'^As you place',\n  ...\n  372  	\n  373  	## UNCOMMENT THIS LINE IF YOU WANT\n  374: 	#break unless running?('sbounty') or running?('grguild') or running?('bigshot') or $monitor_debug == true   ## Scripts that need to be running for monitor to stay running.\n  375  	\n  376  	## Always send emails if a prior script pattern is triggered.\n\nE:\\Google Drive\\Lich\\scripts\\transcend.lic:\n   10  \n   11  \n   12:   trans_count = Script.running.find_all { |s| s.name == 'transcend' }.length\n   13    exit if trans_count > 1\n   14  \n   ..\n   16  Thread.new {\n   17  	while true\n   18: 		wait_until{(not Spell[9049].active? and not Spell[9812].active? and not dead? and running?('sbounty')) and percenthealth <= 80 and (!standing? or stunned? or webbed?) and ((GameObj.npcs.any? { |npc| npc.type !~ /passive/ and npc.status !~ /dead/ }) or (GameObj.loot.each { |i| i.noun =~ /cloud/}))}\n   19      echo 'sym trans loop'\n   20  		bigshotPaused = GSC.pauseScript 'bigshot'\n   ..\n   26  Thread.new {\n   27  	while true\n   28: 		wait_until{(percenthealth <= 50 and not dead? and not stunned? and running?('sbounty')) }\n   29  		echo 'sym resto loop'\n   30      bigshotPaused = GSC.pauseScript 'bigshot'\n   ..\n   51      fput \"quit\"\n   52      fput \"quit\"\n   53:     kill_script 'sbounty' if running? 'sbounty'\n   54:     kill_script 'bigshot' if running? 'bigshot' \n   55    end\n   56  }\n   ..\n  103        eos\n  104        cast_exec_script = ExecScript.start(cast_exec, :quiet => false)\n  105:       wait_until {!running? cast_exec_script.name}\n  106      }\n  107  \n  ...\n  147    \n  148    if line =~ /^A vaespilon draws an ancient sigil/\n  149:     pause_script 'bigshot' if running? 'bigshot'\n  150:     pause_script 'ubermonk' if running? 'ubermonk'\n  151  \n  152      for targetNum in ['first', 'second', 'third']\n  ...\n  157      end\n  158      \n  159:     unpause_script 'bigshot' if running? 'bigshot'\n  160:     unpause_script 'ubermonk' if running? 'ubermonk'\n  161    end\n  162  \n  ...\n  166  \n  167  \n  168:   #break unless running?('sbounty') or running?('loot-be-gone') or running?('bigshot') or running?('fbigshot')\n  169  	if line =~ /A roa'ter suddenly lurches/\n  170  		if not Spell[9049].active? and not Spell[9812].active?\n  ...\n  174  		else\n  175  			start_exec_script( <<-eos\n  176:         	kill_script 'sbounty' if running? 'sbounty';\n  177: 			kill_script 'bigshot' if running? 'bigshot' or running? 'fbigshot';\n  178: 			kill_script 'go2' if running? 'go2';\n  179  			force_start_script 'go2', [ 'town' ];\n  180  			sleep 0.5;\n  ...\n  193    else\n  194        start_exec_script( <<-eos\n  195:       kill_script 'sbounty' if running? 'sbounty';\n  196:       kill_script 'bigshot' if running? 'bigshot'\n  197:       kill_script 'go2' if running? 'go2';\n  198        force_start_script 'go2', [ '228' ];\n  199        sleep 0.5;\n  ...\n  209    if line =~ /An Ithzir herald reaches into a pocket and produces a small silvery disc,|You suddenly feel angered beyond all reason|sticky web/ and Char.name == 'Kalros'\n  210      start_exec_script( <<-eos\n  211:     kill_script 'sbounty' if running? 'sbounty';\n  212:     kill_script 'bigshot' if running? 'bigshot'\n  213:     kill_script 'go2' if running? 'go2';\n  214      force_start_script 'go2', [ '20' ];\n  215      sleep 0.5;\n  ...\n  244  \n  245    if line =~ /^Your armor prevents the spell from working/\n  246:     GameObj.inv.find {|i| @remove_item = i if i.name =~ /#{$armorshort}/}; (put \"_drag ##{@remove_item.id} ##{GameObj[/sack/].id}\"; waitrt?) if @remove_item and !running? 'bigshot'\n  247    end\n  248  \n  ...\n  261      $bless_hands = true if $1 == 'handwraps'\n  262      if GameObj.npcs.find{ |npc| npc.type =~ /undead/}\n  263:       pause_script 'bigshot' if running? 'bigshot'\n  264        dothistimeout \"symbol of bless footwrap\", 5, /^A wave of power|^You strain/ if $bless_feet == true\n  265        $bless_feet = false if $bless_feet == true\n  266        dothistimeout \"symbol of bless handwrap\", 5, /^A wave of power|^You strain/ if $bless_hands == true\n  267        $bless_hands = false if $bless_hands == true\n  268:       unpause_script 'bigshot' if running? 'bigshot'\n  269      end\n  270    end\n  ...\n  272    if line =~ /^Your muscles are starting to ache with exhaustion/\n  273      start_exec_script( <<-eos\n  274:                        kill_script 'sbounty' if running? 'sbounty';\n  275:                        kill_script 'go2' if running? 'go2';\n  276                         sleep 0.5;\n  277                         fput 'symbol of return';\n  ...\n  285      if $rescue_child == false\n  286        start_exec_script( <<-eos\n  287:                          kill_script 'sbounty' if running? 'sbounty';\n  288:                          kill_script 'go2' if running? 'go2';\n  289                           sleep 0.5;\n  290                           fput 'symbol of return';\n  ...\n  315    if line =~ /^You lose your balance on the slanted deck|^The tilt of the deck causes you to mistep|^The slant of the deck/\n  316      start_exec_script( <<-eos\n  317:                        kill_script 'sbounty' if running? 'sbounty';\n  318:                        kill_script 'go2' if running? 'go2';\n  319                         sleep 0.5;\n  320                         fput 'symbol of return';\n\nE:\\Google Drive\\Lich\\scripts\\ubermonk.lic:\n   23  @guild = 'wizard' if Char.name == 'Lumino'\n   24  $champion = false\n   25: $max_npc = 3 if running? 'bigshot'\n   26  #fput 'sym sleep' if GameObj.npcs.size > 1\n   27  \n   ..\n   30  uac_line_checks = <<-eos\n   31  while line = get\n   32:   break unless running?($current_script_name)\n   33    if line =~ /^You have (decent|good|excellent) positioning/\n   34      $position = $1\n   ..\n   61  def loot()\n   62    dead_npcs = GameObj.npcs.find_all { |i| i.status == 'dead' }\n   63:   dead_npcs.each { |i| start_script ('sloot') if !running?('sloot')\n   64:   wait_while { running?('sloot') }}\n   65  end\n   66  \n   67  def attack(target)\n   68:   while (!bleeding? and health > 0 and !stunned?) and GameObj.npcs.size <= $max_npc and target.status !~ /dead|gone/ and (running? 'bigshot' or $manual_target)\n   69:   #while GameObj.npcs.size <= $max_npc and target.status !~ /dead|gone/ and (running? 'bigshot' or $manual_target)\n   70      sleep 0.5 while $pause_combat\n   71      arenaWatch() if $watchAgain\n   ..\n  112  $champion = true if target.name =~ /champion/\n  113  attack(target)\n  114: #loot() if !running?('bigshot')\n  115  \n  116  \n\n<untitled 746>:\n    3      uac_line_checks = <<-eos\n    4      while line = get\n    5:       break unless running?($current_script_name)\n    6        if line =~ /^You have (decent|good|excellent) positioning/\n    7          $position = $1\n\nE:\\Google Drive\\Lich\\scripts\\1030_script.lic:\n    4  check_lines = <<-eos\n    5    while line = get\n    6:     break if !running?('1030_loop')\n    7      kill_script '1030_loop' if line =~ /^An arena guard escorts you from/\n    8      put 'incant 1030' if line =~ /^Your armor/\n\nE:\\Google Drive\\Lich\\scripts\\10deeds.lic:\n    3  \n    4  \n    5: 	start_script 'go2', [ '400', '_disable_confirm_' ]; wait_while { running?('go2') }\n    6  	if checkleft then lefthand = GameObj.left_hand; multifput \"open  ##{lootsack}\",\"put ##{lefthand.id} in  ##{lootsack}\"; end\n    7  	if checkright then righthand = GameObj.right_hand; multifput \"open  ##{lootsack}\",\"put ##{righthand.id} in  ##{lootsack}\"; end\n    .\n    9  	fput \"withdraw 45000\"\n   10  	# Buy rubies\n   11: 	start_script 'go2', [ '285', '_disable_confirm_' ]; wait_while { running?('go2') }\n   12: 	start_script 'go2', [ '9269', '_disable_confirm_' ]; wait_while { running?('go2') }\n   13  	fput \"open  ##{lootsack}\"\n   14  	10.times{multifput(\"order 14\",\"buy\",\"put ruby in  ##{lootsack}\")}\n   15  	fput \"close  ##{lootsack}\"\n   16  	# Go to temple\n   17: 	start_script 'go2', [ '4044', '_disable_confirm_' ]; wait_while { running?('go2') }\n   18  	fput \"open  ##{lootsack}\"\n   19  	10.times{multifput(\"go tapestry\",\"ring chime with mallet\",\"ring chime with mallet\",\"kneel\",\"get ruby from  ##{lootsack}\",\"drop  ruby\",\"ring chime with mallet\",\"out\")}\n   ..\n   22  	fput \"close  ##{lootsack}\"\n   23  	# Return to Landing bank\n   24: 	start_script 'go2', [ '400', '_disable_confirm_' ]; wait_while { running?('go2') }\n   25  	echo \"You should have 10 more deeds now\"\n   26  \n\nE:\\Google Drive\\Lich\\scripts\\1monitor.lic:\n   45  4. Update exception patterns as needed if things are popping that should not be.\n   46  \n   47: 5. Review line 352, it contains a break if !running certain scripts. Uncomment if you want.\n   48  \n   49  =end\n   ..\n  262  	\n  263  	## UNCOMMENT THIS LINE IF YOU WANT\n  264: 	#break unless running?('sbounty') or running?('grguild') or running?('bigshot') or $monitor_debug == true   ## Scripts that need to be running for monitor to stay running.\n  265  	\n  266  	## Always send emails if a prior script pattern is triggered.\n\nE:\\Google Drive\\Lich\\scripts\\alchemy.lic:\n   59  	unless Script.exists?('alchemy-recipes')\n   60  		start_script 'repository', [ 'download', 'alchemy-recipes' ]\n   61: 		wait_while { running?('repository') }\n   62  		unless Script.exists?('alchemy-recipes')\n   63  			echo 'failed to download alchemy-recipes.lic'\n   ..\n   66  	end\n   67  	start_script 'alchemy-recipes'\n   68: 	wait_while { running?('alchemy-recipes') }\n   69  	unless defined?($alchemy_recipes)\n   70  		echo 'no recipes'\n   ..\n   73  	unless defined?($alchemy_reagent_op_cost)\n   74  		start_script 'repository', [ 'download', 'alchemy-recipes' ]\n   75: 		wait_while { running?('repository') }\n   76  		start_script 'alchemy-recipes'\n   77: 		wait_while { running?('alchemy-recipes') }\n   78  		unless defined?($alchemy_reagent_op_cost)\n   79  			echo 'error: failed to download a new enough version of alchemy-recipes'\n   ..\n  549  			break if where_is_shortest_distances_var[room_id] > 15\n  550  			start_script 'go2', [ room_id.to_s ]\n  551: 			wait_while { running?('go2') }\n  552  			break unless checkpcs\n  553  		end\n  ...\n  732  			if room_id = where_is.call(\"#{Char.prof.downcase} alchemy administrator\").first\n  733  				start_script 'go2', [ room_id.to_s ]\n  734: 				wait_while { running?('go2') }\n  735  				did_something = false\n  736  				if gld.call['alchemy'].nil?\n  ...\n  759  								if room_id = where_is.call(\"#{Char.prof.downcase} alchemy guildmaster\").first\n  760  									start_script 'go2', [ room_id.to_s ]\n  761: 									wait_while { running?('go2') }\n  762  									result = dothistimeout \"ask #{GameObj.npcs.last.noun} about next #{type}\", 10, /^#{GameObj.npcs.last.noun} .*?, \"/\n  763  									unless result =~ /you must diversify/\n  ...\n  768  									room_id = where_is.call(\"#{Char.prof.downcase} alchemy administrator\").first\n  769  									start_script 'go2', [ room_id.to_s ]\n  770: 									wait_while { running?('go2') }\n  771  								else\n  772  									echo 'error: failed to find guildmaster'\n  ...\n 1507  					if return_room\n 1508  						start_script 'go2', [ return_room.id.to_s ]\n 1509: 						wait_while { running?('go2') }\n 1510  					end\n 1511  					if result.nil?\n ....\n 1537  					if return_room\n 1538  						start_script 'go2', [ return_room.id.to_s ]\n 1539: 						wait_while { running?('go2') }\n 1540  					end\n 1541  				else\n ....\n 1645  					return_room = Room.current\n 1646  					start_script 'go2', [ room_id.to_s ]\n 1647: 					wait_while { running?('go2') }\n 1648  					dothis \"collect water with ##{flask.id}\", /under water until it is filled|is already filled/\n 1649  					dothis \"get ##{vial.id}\", get_regex\n 1650  					dothis \"collect water with ##{vial.id}\", /under water until it is filled|is already filled/\n 1651  					start_script 'go2', [ return_room.id.to_s ]\n 1652: 					wait_while { running?('go2') }\n 1653  				else\n 1654  					echo 'error: failed to find a place to collect sea water'\n ....\n 1681  				if return_room\n 1682  					start_script 'go2', [ return_room.id.to_s ]\n 1683: 					wait_while { running?('go2') }\n 1684  				end\n 1685  				if result.nil?\n ....\n 1698  		get_cauldron.call\n 1699  		start_script 'go2', [ uber_return_room.id.to_s ]\n 1700: 		wait_while { running?('go2') }\n 1701  	end\n 1702  	invalid_gld.call\n ....\n 1708  	if CharSettings['before-forage-script']\n 1709  		start_script(CharSettings['before-forage-script'])\n 1710: 		wait_while { running?(CharSettings['before-forage-script']) }\n 1711  	end\n 1712  	start_forage_time = Time.now\n ....\n 1719  			break if (Time.now - start_forage_time) > CharSettings['max-forage-time']\n 1720  			start_script 'go2', [ room_num.to_s ]\n 1721: 			wait_while { running? 'go2' }\n 1722  			unless checkpcs\n 1723  				start_time = Time.now\n ....\n 1770  					elsif forage_result =~ /^As you forage around you suddenly feel a sharp pain in your right hand!/\n 1771  						start_script 'useherbs'\n 1772: 						wait_while { running? 'useherbs' }\n 1773  					elsif forage_result.nil?  or (forage_result =~ /you are unable to find anything useful|^As you carefully forage around you (can find no hint|see no evidence) of what you are looking for(?: right now, though you are fairly certain this is where it can be found)?\\./)\n 1774  						break\n ....\n 1796  		if room_id = where_is.call(\"#{Char.prof.downcase} alchemy administrator\").first\n 1797  			start_script 'go2', [ room_id.to_s ]\n 1798: 			wait_while { running?('go2') }\n 1799  		end\n 1800  		start_script(CharSettings['after-forage-script'])\n 1801: 		wait_while { running?(CharSettings['after-forage-script']) }\n 1802  	end\n 1803  	forage_list\n ....\n 1818  		end\n 1819  		start_script 'go2', [ room_id.to_s ]\n 1820: 		wait_while { running?('go2') }\n 1821  		if place =~ /^(?:Icemule|River's Rest) empath guild entrance$/\n 1822  			get_result = dothis \"get ##{note.id}\", get_regex\n ....\n 1909  		if CharSettings['before-hunt-script']\n 1910  			start_script(CharSettings['before-hunt-script'])\n 1911: 			wait_while { running?(CharSettings['before-hunt-script']) }\n 1912  		end\n 1913  		for npc,foo in kill_for_list.dup\n ....\n 1920  					current_ingredient_count = start_ingredient_count = all_sack_contents.call.find_all { |obj| obj.name == ingredient_name }.length\n 1921  					start_script 'go2', [ start_kill_room.to_s ]\n 1922: 					wait_while { running?('go2') }\n 1923  					start_time = Time.now\n 1924  					$alchemy_abort_room = false\n ....\n 1941  								else\n 1942  									start_script(CharSettings['attack-script'], target_ids)\n 1943: 									wait_while { running?(CharSettings['attack-script']) }\n 1944  									if $alchemy_abort_room or $alchemy_abort_hunt\n 1945  										$alchemy_abort_room = false\n ....\n 1978  			if room_id = where_is.call(\"#{Char.prof.downcase} alchemy administrator\").first\n 1979  				start_script 'go2', [ room_id.to_s ]\n 1980: 				wait_while { running?('go2') }\n 1981  			end\n 1982  			start_script(CharSettings['after-hunt-script'])\n 1983: 			wait_while { running?(CharSettings['after-hunt-script']) }\n 1984  		end\n 1985  	end\n ....\n 2022  	if room_id = where_is.call(\"#{Char.prof.downcase} alchemy cleaning supplies\").first\n 2023  		start_script 'go2', [ room_id.to_s ]\n 2024: 		wait_while { running?('go2') }\n 2025  		dothis 'get cloth', /^You take/\n 2026  	else\n ....\n 2034  			for room_id in room_list\n 2035  				start_script 'go2', [ room_id.to_s ]\n 2036: 				wait_while { running?('go2') }\n 2037  				haste.cast if haste.known? and haste.affordable? and not haste.active?\n 2038  				clean_result = dothis 'polish ass', /You have|Perhaps you should check another workshop/\n ....\n 2049  	unless Room.current == return_room\n 2050  		start_script 'go2', [ return_room.id.to_s ]\n 2051: 		wait_while { running?('go2') }\n 2052  	end\n 2053  	invalid_gld.call\n ....\n 2090  		unless Room.current == return_room\n 2091  			start_script 'go2', [ return_room.id.to_s ]\n 2092: 			wait_while { running?('go2') }\n 2093  		end\n 2094  		invalid_gld.call\n ....\n 2109  			get_cauldron.call\n 2110  			start_script 'go2', [ room_id.to_s ]\n 2111: 			wait_while { running?('go2') }\n 2112  		end\n 2113  		empty_hands\n ....\n 2118  			for room_id in room_list\n 2119  				start_script 'go2', [ room_id.to_s ]\n 2120: 				wait_while { running?('go2') }\n 2121  				haste.cast if haste.known? and haste.affordable? and not haste.active?\n 2122  				clean_result = dothistimeout 'clean crucible', 10, /You have|Perhaps you should check another workshop/\n ....\n 2133  		unless Room.current == return_room\n 2134  			start_script 'go2', [ return_room.id.to_s ]\n 2135: 			wait_while { running?('go2') }\n 2136  		end\n 2137  	else\n ....\n 2151  			get_cauldron.call\n 2152  			start_script 'go2', [ cleaning_supplies_room_id.to_s ]\n 2153: 			wait_while { running?('go2') }\n 2154  			empty_hands\n 2155  			dothis 'get broom', /^You take/\n ....\n 2163  				for room_id in room_list\n 2164  					start_script 'go2', [ room_id.to_s ]\n 2165: 					wait_while { running?('go2') }\n 2166  					loop {\n 2167  						haste.cast if haste.known? and haste.affordable? and not haste.active?\n ....\n 2174  				end\n 2175  				start_script 'go2', [ cleaning_supplies_room_id.to_s ]\n 2176: 				wait_while { running?('go2') }\n 2177  				if sweep_result =~ /^Your dust pan appears to be full\\.$|^But your dust pan is already full\\.$/\n 2178  					put_result = dothis 'put my pan in bin', /^.You have/\n ....\n 2189  			}\n 2190  			start_script 'go2', [ return_room.id.to_s ]\n 2191: 			wait_while { running?('go2') }\n 2192  			fill_hands\n 2193  		else\n ....\n 2208  		get_cauldron.call\n 2209  		start_script 'go2', [ room_id.to_s ]\n 2210: 		wait_while { running?('go2') }\n 2211  		haste = Spell[506]\n 2212  		clerk = checknpcs.find { |npc_name| npc_name =~ /^clerk$|acolyte$|^hobgoblin$|^gnome$|^apothecary$|^apprentice$/ } || 'clerk'\n ....\n 2248  		unless Room.current == return_room\n 2249  			start_script 'go2', [ return_room.id.to_s ]\n 2250: 			wait_while { running?('go2') }\n 2251  		end\n 2252  		invalid_gld.call\n ....\n 2288  		unless Room.current == return_room\n 2289  			start_script 'go2', [ return_room.id.to_s ]\n 2290: 			wait_while { running?('go2') }\n 2291  		end\n 2292  		if got_crap\n ....\n 2313  			if room_id = where_is.call(\"#{Char.prof.downcase} alchemy masters\").first\n 2314  				start_script 'go2', [ room_id.to_s ]\n 2315: 				wait_while { running?('go2') }\n 2316  				if checkpoison # fixme: failed\n 2317  					echo \"masters won't talk to you while you're poisoned...\"\n 2318  					wait_while { checkpoison }\n 2319  					start_script 'go2', [ room_id.to_s ]\n 2320: 					wait_while { running?('go2') }\n 2321  				end\n 2322  				dothistimeout \"ask #{GameObj.npcs.last.noun} about training #{type}\", 10, /^#{GameObj.npcs.last.noun}/\n ....\n 2340  							if ((silvers = check_silvers.call) > 0) and room_id = where_is.call('bank').first\n 2341  								start_script 'go2', [ room_id.to_s ]\n 2342: 								wait_while { running?('go2') }\n 2343  								fput \"deposit #{silvers}\"\n 2344  							end\n ....\n 2370  							if room_id = where_is.call(\"#{Char.prof.downcase} alchemy masters\").first\n 2371  								start_script 'go2', [ room_id.to_s ]\n 2372: 								wait_while { running?('go2') }\n 2373  								if checkpoison\n 2374  									echo \"masters won't talk to you while you're poisoned...\"\n 2375  									wait_while { checkpoison }\n 2376  									start_script 'go2', [ room_id.to_s ]\n 2377: 									wait_while { running?('go2') }\n 2378  								end\n 2379  								dothistimeout \"ask #{GameObj.npcs.last.noun} about training #{type}\", 10, /^#{GameObj.npcs.last.noun}/\n ....\n 2392  						if ((silvers = check_silvers.call) > 0) and room_id = where_is.call('bank').first\n 2393  							start_script 'go2', [ room_id.to_s ]\n 2394: 							wait_while { running?('go2') }\n 2395  							fput \"deposit #{silvers}\"\n 2396  						end\n ....\n 2435  							get_cauldron.call\n 2436  							start_script 'go2', [ cauldron_room_id.to_s ]\n 2437: 							wait_while { running?('go2') }\n 2438  							do_steps.call(check_info[:finish_steps])\n 2439  						else\n 2440  							start_script 'go2', [ cauldron_room_id.to_s ]\n 2441: 							wait_while { running?('go2') }\n 2442  							show_check.call(check_info)\n 2443  							fput 'stance offensive' unless stance =~ /offensive/\n ....\n 2520  		unless trash_items.empty?\n 2521  			start_script 'go2', [ room_id.to_s ]\n 2522: 			wait_while { running?('go2') }\n 2523  			if trash_container = GameObj.loot.find { |obj| obj.noun =~ /^(?:receptacle|bin|barrel|trashcan)$/ }\n 2524  				empty_hand\n ....\n 2544  		if room_id = where_is.call('pawnshop').first\n 2545  			start_script 'go2', [ room_id.to_s ]\n 2546: 			wait_while { running?('go2') }\n 2547  			empty_hand\n 2548  			for item in sell_items\n ....\n 2560  		if room_id = where_is.call('consignment').first\n 2561  			start_script 'go2', [ room_id.to_s ]\n 2562: 			wait_while { running?('go2') }\n 2563  			empty_hand\n 2564  			for item in sell_items\n ....\n 2580  			if note = all_sack_contents.call.find { |obj| obj.name == the_note_name }\n 2581  				start_script 'go2', [ adj_room_id ]\n 2582: 				wait_while { running?('go2') }\n 2583  				move way\n 2584  				if table = (GameObj.loot.to_a + GameObj.room_desc.to_a).find { |obj| obj.noun == 'table' }\n ....\n 2859  		unless Room.current == return_room\n 2860  			start_script 'go2', [ return_room.id.to_s ]\n 2861: 			wait_while { running?('go2') }\n 2862  		end\n 2863  		if prepare_only\n ....\n 2927  		if ((silvers = check_silvers.call) > 0) and room_id = where_is.call('bank').first\n 2928  			start_script 'go2', [ room_id.to_s ]\n 2929: 			wait_while { running?('go2') }\n 2930  			fput \"deposit #{silvers}\"\n 2931  		end\n\nE:\\Google Drive\\Lich\\scripts\\alias.lic:\n   40  		respond \"\\n--- Lich: alias service stopped\\n\\n\"\n   41  	else\n   42: 		respond \"\\n--- Lich: alias service is not running\\n\\n\"\n   43  	end\n   44  	exit\n\nE:\\Google Drive\\Lich\\scripts\\atanDusk.lic:\n   13    start_script \"#{script}\" if var1 =~ /xx/\n   14    sleep 1\n   15:   wait_while { running?(\"#{script}\")}\n   16    waitrt?\n   17    sleep 1\n\nE:\\Google Drive\\Lich\\scripts\\auto-level.lic:\n  798  		move 'out' if checkpaths 'out'\n  799  		start_script 'go2', [ \"town\" ]\n  800: 		wait_while { running?('go2') }\n  801  		if UserVars.auto_level[\"loot_script\"] == \"loot\"\n  802  			start_script \"loot-be-gone\"\n  803: 			wait_while{ running?('loot-be-gone') }\n  804  		elsif UserVars.auto_level[\"loot_script\"] == \"sloot\"\n  805  			start_script \"sloot\", [ \"sell\" ]\n  806: 			wait_while{ running?('sloot') }\n  807  		else\n  808  			start_script 'go2', [ \"bank\" ]\n  809: 			wait_while { running?('go2') }\n  810  			fput \"depo all\"\n  811  		end\n  812  		move 'out' if checkpaths 'out'\n  813  		start_script 'go2', [ \"town\" ]\n  814: 		wait_while { running?('go2') }\n  815  		sleep 5\n  816  		need_disk = nil\n  ...\n  831  			move 'out' if checkpaths 'out'\n  832  			start_script 'go2', [ \"town\" ]\n  833: 			wait_while { running?('go2') }\n  834  		end\n  835  		(Spell[606].cast) if (!Spell[606].active?) && (Spell[606].known?) && (Spell[606].affordable?)\n  ...\n  874  	else\n  875  		start_script 'go2', [ Room.current.find_nearest(current_hunting_grounds.collect { |id| id.to_i }).to_s ]\n  876: 		wait_while { running?('go2') }\n  877  		new_room_stuff_to_do.call	\n  878  	end\n  ...\n  976  \n  977  stand_check = proc{\n  978: 	wait_while { running?('waitloot') } if running? \"waitloot\"\n  979  	until standing?\n  980  		waitrt?\n  ...\n  994  		if UserVars.auto_level[\"loot_script\"] == \"loot\"\n  995  			start_script \"waitloot\"\n  996: 			wait_while { running?('waitloot') }\n  997  		elsif UserVars.auto_level[\"loot_script\"] == \"sloot\"\n  998  			start_script \"sloot\"\n  999: 			wait_while { running?('sloot') }\n 1000  		else\n 1001  			fput \"loot\"\n ....\n 1038  	roaming_npc_here = nil\n 1039  	person = nil\n 1040: 	kill_script \"go2\" if running? \"go2\"\n 1041: 	wait_until { !running? \"go2\" }\n 1042  	(start_script 'go2', [ 294 ])	\n 1043: 	wait_while { running?('go2') }\n 1044  	landing_roaming_npc_layout.each { |room|\n 1045  		sleep 0.1\n ....\n 1070  	fput \"stand\" if !standing?\n 1071  	move 'out' if checkpaths 'out'\n 1072: 	kill_script \"go2\" if running? \"go2\"\n 1073: 	wait_until { !running? \"go2\" }\n 1074  	move 'out' if checkpaths 'out'\n 1075  	start_script 'go2', [ target_room.to_s ]\n 1076: 	wait_while { running?('go2') }\n 1077  }\n 1078  \n ....\n 1082  		fput \"stand\" if !standing?\n 1083  		move 'out' if checkpaths 'out'\n 1084: 		kill_script \"go2\" if running? \"go2\"\n 1085: 		wait_until { !running? \"go2\" }\n 1086  		move 'out' if checkpaths 'out'\n 1087  		start_script 'go2', [ 3235 ]\n 1088: 		wait_while { running?('go2') }\n 1089: 		kill_script \"go2\" if running? \"go2\"\n 1090: 		wait_until { !running? \"go2\" }\n 1091  		move 'out' if checkpaths 'out'\n 1092  		start_script 'go2', [ 3431 ]\n 1093: 		wait_while { running?('go2') }\n 1094  	elsif result =~ /Ta\\'Vaalor|Landing/\n 1095  		nil\n 1096  	end\n 1097  	list_of_all_shops.each{ |room|\n 1098: 		kill_script \"go2\" if running? \"go2\"\n 1099: 		wait_until { !running? \"go2\" }\n 1100  		if room == \"npccleric\"\n 1101  			result = dothistimeout \"location\", 3, /Icemule|Ice Plains|southern snowfields|High Plains|location is the Glacier|Ta\\'Vaalor|Landing/\n ....\n 1110  			start_script 'go2', [ \"#{room}\" ]\n 1111  		end\n 1112: 		wait_while { running?('go2') }\n 1113  		if room == \"bank\"\n 1114  			fput \"depo all\"\n ....\n 1154  			fput \"ask warrior about help\"\n 1155  		elsif line =~ /let\\'s go get that warrior a new sword/\n 1156: 			kill_script \"go2\" if running? \"go2\"\n 1157: 			wait_until { !running? \"go2\" }\n 1158  			move 'out' if checkpaths 'out'\n 1159  			start_script 'go2', [ \"weaponshop\" ]\n 1160: 			wait_while { running?('go2') }\n 1161  		elsif line =~ /\\[You can click on the .* and select ORDER from the menu to get started\\.\\]/\n 1162  			fput \"stow right\" if checkright != nil\n ....\n 1176  			fput \"accept\"\n 1177  		elsif line =~ /we can use DIRECTIONS TAVERN to find the Honeybeer Inn|we can use DIRECTIONS MUSEUM to find the Wehnimer\\'s Museum|we can use DIRECTIONS ALCHEMIST to find Elantaran\\'s Magic Supply/\n 1178: 			kill_script \"go2\" if running? \"go2\"\n 1179: 			wait_until { !running? \"go2\" }\n 1180  			move 'out' if checkpaths 'out'\n 1181  			(start_script 'go2', [ 3448 ]) if line =~ /we can use DIRECTIONS TAVERN to find the Honeybeer Inn/\n 1182  			(start_script 'go2', [ 14448 ]) if line =~ /we can use DIRECTIONS MUSEUM to find the Wehnimer\\'s Museum/\n 1183  			(start_script 'go2', [ 10364 ]) if line =~ /we can use DIRECTIONS ALCHEMIST to find Elantaran\\'s Magic Supply/\n 1184: 			wait_while { running?('go2') }\n 1185  		elsif line =~ /\\[You can select the HIDE option from the Actions menu on the quicklinks bar\\.\\]/\n 1186  			fput \"hide\"\n ....\n 1215  			move 'out' if checkpaths 'out'\n 1216  			start_script 'go2', [ \"bank\" ]\n 1217: 			wait_while { running?('go2') }\n 1218  			fput \"depo all\"\n 1219  			fput \"nod sprite\"\n ....\n 1277  	\n 1278  wait_timer_for_message = proc{\n 1279: 	kill_script \"go2\" if running? \"go2\"\n 1280: 	wait_until { !running? \"go2\" }\n 1281  	move 'out' if checkpaths 'out'\n 1282  	start_script 'go2', [ \"town\" ]\n 1283: 	wait_while { running?('go2') }\n 1284  	echo \"Couldn't get a message. Trying again in 1 minute.\"\n 1285  	sleep 60\n ....\n 1290  	echo \"Delivering message.\"\n 1291  	if roaming_npc_message == nil\n 1292: 		kill_script \"go2\" if running? \"go2\"\n 1293: 		wait_until { !running? \"go2\" }\n 1294  		move 'out' if checkpaths 'out'\n 1295  		start_script 'go2', [ message_destination_room ]\n 1296: 		wait_while { running?('go2') }\n 1297  		if (message_destination_npc == \"North guard\") || (message_destination_npc == \"East guard\") || (message_destination_npc == \"South guard\") || (message_destination_npc == \"West guard\")\n 1298  			guard_here = nil\n 1299  			(guard_here = true) if GameObj.npcs.find{ |npc| npc.name =~ /guard/}\n 1300  			if guard_here == nil\n 1301: 				kill_script \"go2\" if running? \"go2\"\n 1302: 				wait_until { !running? \"go2\" }\n 1303  				move 'out' if checkpaths 'out'\n 1304  				start_script 'go2', [ 3424 ]\n 1305: 				wait_while { running?('go2') }\n 1306  			end\n 1307  		end\n ....\n 1314  	else\n 1315  		echo \"Depositing silver.\"\n 1316: 		kill_script \"go2\" if running? \"go2\"\n 1317: 		wait_until { !running? \"go2\" }\n 1318  		move 'out' if checkpaths 'out'\n 1319  		start_script 'go2', [ \"bank\" ]\n 1320: 		wait_while { running?('go2') }\n 1321  		fput \"depo all\"\n 1322  		get_message_job.call\n ....\n 1467  			waitrt?\n 1468  			fput \"depart confirm\"\n 1469: 			kill_script \"go2\" if running? \"go2\"\n 1470: 			wait_until { !running? \"go2\" }\n 1471  			move 'out' if checkpaths 'out'\n 1472  			start_script 'go2', [ \"town\" ]\n 1473: 			wait_while { running?('go2') }\n 1474  			target = nil\n 1475  			hunt_my_room = nil\n ....\n 1494  	if (Wounds.head >= 2) || (Wounds.neck >= 2) || (Wounds.abs >= 2) || (Wounds.lhand >= 2) || (Wounds.rhand >= 2) || (Wounds.larm >= 2) || (Wounds.rarm >= 2) || (Wounds.chest >= 2) || (Wounds.back >= 2) || (Wounds.rleg >= 2) || (Wounds.lleg >= 2) || (Wounds.nerves >= 2) || (Wounds.leye >= 2) || (Wounds.reye >= 2) || (Scars.head >= 2) || (Scars.neck >= 2) || (Scars.abs >= 2) || (Scars.lhand >= 2) || (Scars.rhand >= 2) || (Scars.larm >= 2) || (Scars.rarm >= 2) || (Scars.chest >= 2) || (Scars.back >= 2) || (Scars.rleg >= 2) || (Scars.lleg >= 2) || (Scars.nerves >= 2) || (Scars.leye >= 2) || (Scars.reye >= 2) || (Wounds.larm >= 1 && Wounds.rarm >= 1) || (Scars.larm >= 1 && Scars.rarm >= 1) || (Scars.lhand >= 1 && Scars.rhand >= 1) || (Wounds.lhand >= 1 && Wounds.rhand >= 1) || (Wounds.leye >= 1 && Wounds.reye >= 1) || (Scars.leye >= 1 && Scars.reye >= 1) || (percenthealth < 40)\n 1495  		echo \"Wounded. Heading to town.\"\n 1496: 		kill_script \"go2\" if running? \"go2\"\n 1497: 		wait_until { !running? \"go2\" }\n 1498  		move 'out' if checkpaths 'out'\n 1499  		start_script 'go2', [ \"town\" ]\n 1500: 		wait_while { running?('go2') }\n 1501  		if UserVars.auto_level[\"healing_preference\"] =~ /ask/i\n 1502  			unless UserVars.auto_level[\"tip_amount\"].empty?\n 1503  				move 'out' if checkpaths 'out'\n 1504  				start_script 'go2', [ \"bank\" ]\n 1505: 				wait_while { running?('go2') }\n 1506  				fput \"withdraw #{UserVars.auto_level[\"tip_amount\"].to_i} silvers\"\n 1507  				move 'out' if checkpaths 'out'\n 1508  				start_script 'go2', [ \"town\" ]\n 1509: 				wait_while { running?('go2') }\n 1510  			end\n 1511  			number_of_tries = UserVars.auto_level[\"number_of_tries\"].to_i\n ....\n 1525  use_use_herbs_script_to_heal = proc{\n 1526  	if Script.exists?('useherbs')\n 1527: 		echo \"Running ;useherbs to heal wounds.\"\n 1528  		start_script 'useherbs'\n 1529: 		wait_while { running?('useherbs') }\n 1530  	else\n 1531  		echo \"Script ;useherbs not found. Sorry, I can't heal you. You're on your own.\"\n ....\n 1562  	if (checkpoison) || (checkdisease)\n 1563  		echo \"I am diseased or poisoned. Heading to town.\"\n 1564: 		kill_script \"go2\" if running? \"go2\"\n 1565: 		wait_until { !running? \"go2\" }\n 1566  		move 'out' if checkpaths 'out'\n 1567  		start_script 'go2', [ \"town\" ]\n 1568: 		wait_while { running?('go2') }\n 1569  		if (checkpoison) || (checkdisease)\n 1570  			if (checkdisease) && (Spell[113].known?)\n ....\n 1613  update_hunting_area = proc{\n 1614  	valid_targets = /rat|thyril|hobgoblin|snowcat|orc|leaper|monkey|crab|crocodile|guardian|dog|ant|squirrel|goblin|siren|relnak|kappa|warlord|chieftain|soldier/\n 1615: 	kill_script \"go2\" if running? \"go2\"\n 1616: 	wait_until { !running? \"go2\" }\n 1617  	move 'out' if checkpaths 'out'\n 1618  	start_script 'go2', [ \"town\" ]\n 1619: 	wait_while { running?('go2') }\n 1620  	if Room.current.id == 2300\n 1621  		if Char.level < 6\n ....\n 1681  	if UserVars.auto_level[\"loot_script\"]  == \"loot\"\n 1682  		start_script \"loot-be-gone\"\n 1683: 		wait_while{ running?('loot-be-gone') }\n 1684  	elsif UserVars.auto_level[\"loot_script\"]  == \"sloot\"\n 1685  		start_script \"sloot\", [ \"sell\" ]\n 1686: 		wait_while{ running?('sloot') }\n 1687  	else\n 1688  		move 'out' if checkpaths 'out'\n 1689  		start_script 'go2', [ \"bank\" ]\n 1690: 		wait_while { running?('go2') }\n 1691  		fput \"depo all\"\n 1692  	end\n\nE:\\Google Drive\\Lich\\scripts\\backup\\child2.lic:\n   67  			waitrt?\n   68  			start_script 'step2', [\"#{place}\"]\n   69: 			wait_while{running?('step2')}\n   70  			wait_until{ thatroom != Room.current.id }\n   71  			waitrt?\n   ..\n  125  waitfor \"Adventurer's Guild\"\n  126  start_script 'go2',  ['advguild']\n  127: wait_while {running? ('go2')}\n  128  fput \"ask taskmaster about bounty\"\n  129  \n\nE:\\Google Drive\\Lich\\scripts\\Bardhunt.lic:\n    1: start_script \"monitor\" if !running? \"monitor\"\n    2: start_script \"transcend\" if !running? \"transcend\"\n    3  \n    4  sonicWeapon = false\n\nE:\\Google Drive\\Lich\\scripts\\betazzherb.lic:\n  394  \n  395    start_script 'go2', [ herb_room.to_s ]\n  396:   wait_while { running?('go2') }\n  397  \n  398  \n  ...\n  507          else\n  508            start_script 'useherbs'\n  509:           wait_while { running? 'useherbs' }\n  510          end\n  511        end\n  ...\n  533    end\n  534    start_script('go2', [ room.to_s ])\n  535:   wait_while{running?('go2')}\n  536  \n  537    echo \"Found \" + herb_count.to_s + \" of \" + herb\n\nE:\\Google Drive\\Lich\\scripts\\bigbounty.lic:\n  782  \n  783  def go2(target)\n  784:     wait_while { running? 'go2' }\n  785      unless target.to_i == Room.current.id\n  786          start_script( 'go2', [target, '_disable_confirm_']  )\n  787:         wait_while { running?('go2') }\n  788      end\n  789  end\n  ...\n  821      if not next_room\n  822          start_script 'go2', [ Room.current.find_nearest(hunting_ground_rooms.collect { |id| id.to_i }).to_s ]\n  823:         wait_while { running?('go2') }\n  824      else\n  825          wander_rooms.delete(next_room)\n  ...\n 1042          @HUNTING_SCRIPTS.each { |i|\n 1043              echo \"Cleaning up hunting scripts: #{i}.\"\n 1044:             stop_script(i) if running?(i)\n 1045          }\n 1046      }\n ....\n 1480          if @DEAD_MAN_SWITCH\n 1481              Thread.new {\n 1482:                 while( running?('bigbounty') )\n 1483                      if( dead? ||  percenthealth < 40 )\n 1484                          echo 'AUTOBOT ALERT: Your character is in trouble!'\n ....\n 1490          elsif @DEATH_RECOVERY_SWITCH\n 1491              start_exec_script( <<-EOF\n 1492:                 while( running?('bigbounty') );\n 1493                      if(dead?);\n 1494                          stop_script('bigbounty');\n ....\n 1496  			sleep 45\n 1497  			start_script('go2',['town','_disable_confirm_'])\n 1498: 			wait_while { running?('go2') }\n 1499  			sleep 15\n 1500  			start_script('useherbs');\n 1501: 			wait_while { running?('useherbs') }\n 1502  			start_script('waggle');\n 1503  			5.times { sleep 60; fput 'info'; echo 'YOU BIT THE DUST DURING YOUR LAST ADVENTURE!'; echo 'HOW UNFORTUNATE!'; };\n 1504: 			sleep 1 until percentspirit == 100 && !running?('waggle');\n 1505  			start_script('go2',['bank','_disable_confirm_'])\n 1506: 			wait_while { running?('go2') }\n 1507  			fput \"withdraw 25\"\n 1508  			start_script( 'bigshot', ['solo'] );\n ....\n 1523      def keep_awake()\n 1524          Thread.new {\n 1525:             while( running?('bigbounty') )\n 1526                  sleep 150; put 'look';\n 1527              end\n ....\n 1545                  end;\n 1546                  while(line = get);\n 1547:                     break unless running?('bigbounty');\n 1548                      if(line =~ /SEND|POLICY|[Rr](\\s)*[Ee](\\s)*[Pp](\\s)*[Oo](\\s)*[Rr](\\s)*[Tt]|peaking to you|unresponsive|taps you|nods to you|lease respond|not in control|character|violation|lease speak|peak out loud|Y U SHOU D|whispers,|speaking to you|smiles at you|waves to you|grins at you|hugs you|takes hold your hand|grabs your hand|clasps your hand|trying to drag you/);\n 1549                          unless(line =~ /LNet/);\n ....\n 1613  \n 1614      def run_script( name, pause_bigbounty = false, args = [] )\n 1615:         if Script.running.find { |s| s.name.downcase == name.downcase }.paused or running? name\n 1616              stop_script name\n 1617:             wait_while { running? name }\n 1618          end\n 1619  \n 1620          start_script name, args \n 1621          if pause_bigbounty\n 1622:             wait_until { !running? name }\n 1623          end\n 1624      end\n ....\n 1638  \n 1639      def croak_script(name)\n 1640:         kill_script(name) if running?(name)\n 1641      end\n 1642  \n ....\n 1941      def display_watch_total()\n 1942          total = Time.now.to_i - @BIRTH_TIME\n 1943:         message( sprintf( \"BIGBOUNTY: Total Time Running: %d min.  %0.2f secs.\",\n 1944              total / 60, total % 60 ) )\n 1945      end\n ....\n 2123          return false\n 2124      end\n 2125:     if( @RESTING_SCRIPTS.any? { |i| running?(i) } )\n 2126:         $not_hunting_reason = 'Resting scripts still running.'\n 2127          return false\n 2128      end\n ....\n 2663              until( checkpcs.include?(leader) )\n 2664                  start_script( 'go2', [ group.room_id, '_disable_confirm_' ] )\n 2665:                 wait_while { running?('go2') }\n 2666                  fput \"join #{leader}\"\n 2667                  sleep 1\n ....\n 2715              if( bs.RESTING_ROOM_ID && bs.RESTING_ROOM_ID != 4 )\n 2716                  start_script( 'go2', [ bs.RESTING_ROOM_ID, '_disable_confirm_' ] )\n 2717:                 wait_while { running?('go2') }\n 2718              end\n 2719              echo \"Fatal exception!\"\n\nE:\\Google Drive\\Lich\\scripts\\bigshot.lic:\n  196      start_script \"#{script}\" if var1 =~ /xx/\n  197      sleep 1\n  198:     wait_while { running?(\"#{script}\")}\n  199      waitrt?\n  200      sleep 1\n  ...\n  235  $exec_ambush = true\n  236    while(line = get)\n  237:     break unless running?($current_script_name)\n  238      $ambusher_here = true if line =~ /^\\\\w+ leaps from hiding to attack|^\\\\w+ is revealed|^Be at peace|^You attempt to renew/\n  239    end\n  ...\n  420              @HUNTING_SCRIPTS.each { |i|\n  421                  echo \"Cleaning up hunting scripts: #{i}.\"\n  422:                 stop_script(i) if running?(i)\n  423              }\n  424          }\n  ...\n  851          if @DEAD_MAN_SWITCH\n  852              Thread.new {\n  853:                 while( running?($current_script_name) )\n  854                      if( dead? ||  percenthealth < 40 )\n  855                          echo 'AUTOBOT ALERT: Your character is in trouble!'\n  ...\n  861          elsif @DEPART_SWITCH\n  862              start_exec_script( <<-EOF\n  863:                 while( running?($current_script_name) );\n  864                      if(dead?);\n  865                          stop_script($current_script_name);\n  ...\n  868                          start_script('waggle');\n  869                          15.times { sleep 60; fput info; };\n  870:                         sleep 1 until percentspirit == 100 && !running?('waggle');\n  871                          start_script( \"#{$current_script_name}\", ['solo'] );\n  872                          Script.self.kill;\n  ...\n  885      def keep_awake()\n  886          Thread.new {\n  887:             while( running?($current_script_name) )\n  888                  sleep 150; put 'look';\n  889              end\n  ...\n  906                  end;\n  907                  while(line = get);\n  908:                     break unless running?($current_script_name);\n  909                      if(line =~ /SEND|POLICY|[Rr](\\s)*[Ee](\\s)*[Pp](\\s)*[Oo](\\s)*[Rr](\\s)*[Tt]|peaking to you|unresponsive|taps you|nods to you|lease respond|not in control|character|violation|lease speak|peak out loud|Y U SHOU D|whispers,|speaking to you|smiles at you|waves to you|grins at you|hugs you|takes hold your hand|grabs your hand|clasps your hand|trying to drag you/);\n  910                          unless(line =~ /LNet/);\n  ...\n  957              $stop_wait = true if line =~ /#{$global_target}.*#{$pcs}/ and line !~ /style id=\"\".*style id=\"roomDesc\"|(?:component|compDef) id='room objs'/\n  958              break if $stop_wait\n  959:             break if !running?($current_script_name)\n  960          end\n  961          status_tags\n  ...\n  986   \n  987      def run_script( name, pause_bigshot = false, args = [] )\n  988:         if Script.running.find { |s| s.name.downcase == name.downcase }.paused or running? name\n  989              stop_script name\n  990:             wait_while { running? name }\n  991          end\n  992   \n  993          start_script name, args\n  994          if pause_bigshot\n  995:             wait_until { !running? name }\n  996          end\n  997      end\n  ...\n 1009   \n 1010      def croak_script(name)\n 1011:         kill_script(name) if running?(name)\n 1012      end\n 1013   \n ....\n 1253      def display_watch_total()\n 1254          total = Time.now.to_i - @BIRTH_TIME\n 1255:         message( sprintf( \"Bigshot: Total Time Running: %d min.  %0.2f secs.\",\n 1256              total / 60, total % 60 ) )\n 1257      end\n ....\n 1412              return false\n 1413          end\n 1414:         if( @RESTING_SCRIPTS.any? { |i| running?(i) } )\n 1415:             $not_hunting_reason = 'resting scripts still running.'\n 1416              return false\n 1417          end\n ....\n 1954              until( checkpcs.include?(leader) )\n 1955                  start_script( 'go2', [ group.room_id, '_disable_confirm_' ] )\n 1956:                 wait_while { running?('go2') }\n 1957                  fput \"join #{leader}\"\n 1958                  sleep 1\n ....\n 2008              if( bs.RESTING_ROOM_ID && bs.RESTING_ROOM_ID != 4 )\n 2009                  start_script( 'go2', [ bs.RESTING_ROOM_ID, '_disable_confirm_' ] )\n 2010:                 wait_while { running?('go2') }\n 2011              end\n 2012              echo \"Fatal exception!\"\n\nE:\\Google Drive\\Lich\\scripts\\bigshot1.lic:\n  260              @HUNTING_SCRIPTS.each { |i|\n  261                  echo \"Cleaning up hunting scripts: #{i}.\"\n  262:                 stop_script(i) if running?(i)\n  263              }\n  264          }\n  ...\n  687          if @DEAD_MAN_SWITCH\n  688              Thread.new {\n  689:                 while( running?('bigshot') )\n  690                      if( dead? ||  percenthealth < 40 )\n  691                          echo 'AUTOBOT ALERT: Your character is in trouble!'\n  ...\n  697          elsif @DEPART_SWITCH\n  698              start_exec_script( <<-EOF\n  699:                 while( running?('bigshot') );\n  700                      if(dead?);\n  701                          stop_script('bigshot');\n  ...\n  704                          start_script('waggle');\n  705                          15.times { sleep 60; fput info; };\n  706:                         sleep 1 until percentspirit == 100 && !running?('waggle');\n  707                          start_script( 'bigshot', ['solo'] );\n  708                          Script.self.kill;\n  ...\n  721      def keep_awake()\n  722          Thread.new {\n  723:             while( running?('bigshot') )\n  724                  sleep 150; put 'look';\n  725              end\n  ...\n  742                  end;\n  743                  while(line = get);\n  744:                     break unless running?('bigshot');\n  745                      if(line =~ /SEND|POLICY|[Rr](\\s)*[Ee](\\s)*[Pp](\\s)*[Oo](\\s)*[Rr](\\s)*[Tt]|peaking to you|unresponsive|taps you|nods to you|lease respond|not in control|character|violation|lease speak|peak out loud|Y U SHOU D|whispers,|speaking to you|smiles at you|waves to you|grins at you|hugs you|takes hold your hand|grabs your hand|clasps your hand|trying to drag you/);\n  746                          unless(line =~ /LNet/);\n  ...\n  805  \n  806      def run_script( name, pause_bigshot = false, args = [] )\n  807:         if Script.running.find { |s| s.name.downcase == name.downcase }.paused or running? name\n  808              stop_script name\n  809:             wait_while { running? name }\n  810          end\n  811  \n  812          start_script name, args \n  813          if pause_bigshot\n  814:             wait_until { !running? name }\n  815          end\n  816      end\n  ...\n  828  \n  829      def croak_script(name)\n  830:         kill_script(name) if running?(name)\n  831      end\n  832  \n  ...\n  936      start_exec_script( <<-eos\n  937          while(line = get);\n  938:             break unless running?('bigshot');\n  939              $ambusher_here = true if line =~ /^\\w+ leaps from hiding to attack/;\n  940          end;\n  ...\n 1078      def display_watch_total()\n 1079          total = Time.now.to_i - @BIRTH_TIME\n 1080:         message( sprintf( \"Bigshot: Total Time Running: %d min.  %0.2f secs.\",\n 1081              total / 60, total % 60 ) )\n 1082      end\n ....\n 1237              return false\n 1238          end\n 1239:         if( @RESTING_SCRIPTS.any? { |i| running?(i) } )\n 1240:             $not_hunting_reason = 'resting scripts still running.'\n 1241              return false\n 1242          end\n ....\n 1728              until( checkpcs.include?(leader) )\n 1729                  start_script( 'go2', [ group.room_id, '_disable_confirm_' ] )\n 1730:                 wait_while { running?('go2') }\n 1731                  fput \"join #{leader}\"\n 1732                  sleep 1\n ....\n 1782              if( bs.RESTING_ROOM_ID && bs.RESTING_ROOM_ID != 4 )\n 1783                  start_script( 'go2', [ bs.RESTING_ROOM_ID, '_disable_confirm_' ] )\n 1784:                 wait_while { running?('go2') }\n 1785              end\n 1786              echo \"Fatal exception!\"\n\nE:\\Google Drive\\Lich\\scripts\\bigshot_backup 3.11.2017.lic:\n  219  $exec_ambush = true\n  220    while(line = get)\n  221:     break unless running?($current_script_name)\n  222      $ambusher_here = true if line =~ /^\\\\w+ leaps from hiding to attack|^\\\\w+ is revealed|^Be at peace|^You attempt to renew/\n  223    end\n  ...\n  404              @HUNTING_SCRIPTS.each { |i|\n  405                  echo \"Cleaning up hunting scripts: #{i}.\"\n  406:                 stop_script(i) if running?(i)\n  407              }\n  408          }\n  ...\n  837          if @DEAD_MAN_SWITCH\n  838              Thread.new {\n  839:                 while( running?($current_script_name) )\n  840                      if( dead? ||  percenthealth < 40 )\n  841                          echo 'AUTOBOT ALERT: Your character is in trouble!'\n  ...\n  847          elsif @DEPART_SWITCH\n  848              start_exec_script( <<-EOF\n  849:                 while( running?($current_script_name) );\n  850                      if(dead?);\n  851                          stop_script($current_script_name);\n  ...\n  854                          start_script('waggle');\n  855                          15.times { sleep 60; fput info; };\n  856:                         sleep 1 until percentspirit == 100 && !running?('waggle');\n  857                          start_script( \"#{$current_script_name}\", ['solo'] );\n  858                          Script.self.kill;\n  ...\n  871      def keep_awake()\n  872          Thread.new {\n  873:             while( running?($current_script_name) )\n  874                  sleep 150; put 'look';\n  875              end\n  ...\n  892                  end;\n  893                  while(line = get);\n  894:                     break unless running?($current_script_name);\n  895                      if(line =~ /SEND|POLICY|[Rr](\\s)*[Ee](\\s)*[Pp](\\s)*[Oo](\\s)*[Rr](\\s)*[Tt]|peaking to you|unresponsive|taps you|nods to you|lease respond|not in control|character|violation|lease speak|peak out loud|Y U SHOU D|whispers,|speaking to you|smiles at you|waves to you|grins at you|hugs you|takes hold your hand|grabs your hand|clasps your hand|trying to drag you/);\n  896                          unless(line =~ /LNet/);\n  ...\n  943              $stop_wait = true if line =~ /#{$global_target}.*#{$pcs}/ and line !~ /style id=\"\".*style id=\"roomDesc\"|(?:component|compDef) id='room objs'/\n  944              break if $stop_wait\n  945:             break if !running?($current_script_name)\n  946          end\n  947          status_tags\n  ...\n  972   \n  973      def run_script( name, pause_bigshot = false, args = [] )\n  974:         if Script.running.find { |s| s.name.downcase == name.downcase }.paused or running? name\n  975              stop_script name\n  976:             wait_while { running? name }\n  977          end\n  978   \n  979          start_script name, args\n  980          if pause_bigshot\n  981:             wait_until { !running? name }\n  982          end\n  983      end\n  ...\n  995   \n  996      def croak_script(name)\n  997:         kill_script(name) if running?(name)\n  998      end\n  999   \n ....\n 1239      def display_watch_total()\n 1240          total = Time.now.to_i - @BIRTH_TIME\n 1241:         message( sprintf( \"Bigshot: Total Time Running: %d min.  %0.2f secs.\",\n 1242              total / 60, total % 60 ) )\n 1243      end\n ....\n 1398              return false\n 1399          end\n 1400:         if( @RESTING_SCRIPTS.any? { |i| running?(i) } )\n 1401:             $not_hunting_reason = 'resting scripts still running.'\n 1402              return false\n 1403          end\n ....\n 1567              echo \"ERROR ERROR ERROR IN BIGSHOT BOUNDARIES\"\n 1568              GSC.run_wait_script('go2', 'town')\n 1569:             Script.kill 'sbounty' if running? 'sbounty'\n 1570:             Script.kill 'bigshot' if running? 'bigshot'\n 1571:             Script.kill 'ubermonk' if running? 'ubermonk'\n 1572              exit\n 1573          end\n ....\n 1948              until( checkpcs.include?(leader) )\n 1949                  start_script( 'go2', [ group.room_id, '_disable_confirm_' ] )\n 1950:                 wait_while { running?('go2') }\n 1951                  fput \"join #{leader}\"\n 1952                  sleep 1\n ....\n 2002              if( bs.RESTING_ROOM_ID && bs.RESTING_ROOM_ID != 4 )\n 2003                  start_script( 'go2', [ bs.RESTING_ROOM_ID, '_disable_confirm_' ] )\n 2004:                 wait_while { running?('go2') }\n 2005              end\n 2006              echo \"Fatal exception!\"\n\nE:\\Google Drive\\Lich\\scripts\\bigshotRift.lic:\n  193      start_script \"#{script}\" if var1 =~ /xx/\n  194      sleep 1\n  195:     wait_while { running?(\"#{script}\")}\n  196      waitrt?\n  197      sleep 1\n  ...\n  232  $exec_ambush = true\n  233    while(line = get)\n  234:     break unless running?($current_script_name)\n  235      $ambusher_here = true if line =~ /^\\\\w+ leaps from hiding to attack|^\\\\w+ is revealed|^Be at peace|^You attempt to renew/\n  236    end\n  ...\n  417              @HUNTING_SCRIPTS.each { |i|\n  418                  echo \"Cleaning up hunting scripts: #{i}.\"\n  419:                 stop_script(i) if running?(i)\n  420              }\n  421          }\n  ...\n  848          if @DEAD_MAN_SWITCH\n  849              Thread.new {\n  850:                 while( running?($current_script_name) )\n  851                      if( dead? ||  percenthealth < 40 )\n  852                          echo 'AUTOBOT ALERT: Your character is in trouble!'\n  ...\n  858          elsif @DEPART_SWITCH\n  859              start_exec_script( <<-EOF\n  860:                 while( running?($current_script_name) );\n  861                      if(dead?);\n  862                          stop_script($current_script_name);\n  ...\n  865                          start_script('waggle');\n  866                          15.times { sleep 60; fput info; };\n  867:                         sleep 1 until percentspirit == 100 && !running?('waggle');\n  868                          start_script( \"#{$current_script_name}\", ['solo'] );\n  869                          Script.self.kill;\n  ...\n  882      def keep_awake()\n  883          Thread.new {\n  884:             while( running?($current_script_name) )\n  885                  sleep 150; put 'look';\n  886              end\n  ...\n  903                  end;\n  904                  while(line = get);\n  905:                     break unless running?($current_script_name);\n  906                      if(line =~ /SEND|POLICY|[Rr](\\s)*[Ee](\\s)*[Pp](\\s)*[Oo](\\s)*[Rr](\\s)*[Tt]|peaking to you|unresponsive|taps you|nods to you|lease respond|not in control|character|violation|lease speak|peak out loud|Y U SHOU D|whispers,|speaking to you|smiles at you|waves to you|grins at you|hugs you|takes hold your hand|grabs your hand|clasps your hand|trying to drag you/);\n  907                          unless(line =~ /LNet/);\n  ...\n  954              $stop_wait = true if line =~ /#{$global_target}.*#{$pcs}/ and line !~ /style id=\"\".*style id=\"roomDesc\"|(?:component|compDef) id='room objs'/\n  955              break if $stop_wait\n  956:             break if !running?($current_script_name)\n  957          end\n  958          status_tags\n  ...\n  983   \n  984      def run_script( name, pause_bigshot = false, args = [] )\n  985:         if Script.running.find { |s| s.name.downcase == name.downcase }.paused or running? name\n  986              stop_script name\n  987:             wait_while { running? name }\n  988          end\n  989   \n  990          start_script name, args\n  991          if pause_bigshot\n  992:             wait_until { !running? name }\n  993          end\n  994      end\n  ...\n 1006   \n 1007      def croak_script(name)\n 1008:         kill_script(name) if running?(name)\n 1009      end\n 1010   \n ....\n 1250      def display_watch_total()\n 1251          total = Time.now.to_i - @BIRTH_TIME\n 1252:         message( sprintf( \"Bigshot: Total Time Running: %d min.  %0.2f secs.\",\n 1253              total / 60, total % 60 ) )\n 1254      end\n ....\n 1409              return false\n 1410          end\n 1411:         if( @RESTING_SCRIPTS.any? { |i| running?(i) } )\n 1412:             $not_hunting_reason = 'resting scripts still running.'\n 1413              return false\n 1414          end\n ....\n 1951              until( checkpcs.include?(leader) )\n 1952                  start_script( 'go2', [ group.room_id, '_disable_confirm_' ] )\n 1953:                 wait_while { running?('go2') }\n 1954                  fput \"join #{leader}\"\n 1955                  sleep 1\n ....\n 2005              if( bs.RESTING_ROOM_ID && bs.RESTING_ROOM_ID != 4 )\n 2006                  start_script( 'go2', [ bs.RESTING_ROOM_ID, '_disable_confirm_' ] )\n 2007:                 wait_while { running?('go2') }\n 2008              end\n 2009              echo \"Fatal exception!\"\n ....\n 2180      start_script \"#{script}\" if var1 =~ /xx/\n 2181      sleep 1\n 2182:     wait_while { running?(\"#{script}\")}\n 2183      waitrt?\n 2184      sleep 1\n ....\n 2219  $exec_ambush = true\n 2220    while(line = get)\n 2221:     break unless running?($current_script_name)\n 2222      $ambusher_here = true if line =~ /^\\\\w+ leaps from hiding to attack|^\\\\w+ is revealed/\n 2223    end\n ....\n 2404              @HUNTING_SCRIPTS.each { |i|\n 2405                  echo \"Cleaning up hunting scripts: #{i}.\"\n 2406:                 stop_script(i) if running?(i)\n 2407              }\n 2408          }\n ....\n 2835          if @DEAD_MAN_SWITCH\n 2836              Thread.new {\n 2837:                 while( running?($current_script_name) )\n 2838                      if( dead? ||  percenthealth < 40 )\n 2839                          echo 'AUTOBOT ALERT: Your character is in trouble!'\n ....\n 2845          elsif @DEPART_SWITCH\n 2846              start_exec_script( <<-EOF\n 2847:                 while( running?($current_script_name) );\n 2848                      if(dead?);\n 2849                          stop_script($current_script_name);\n ....\n 2852                          start_script('waggle');\n 2853                          15.times { sleep 60; fput info; };\n 2854:                         sleep 1 until percentspirit == 100 && !running?('waggle');\n 2855                          start_script( \"#{$current_script_name}\", ['solo'] );\n 2856                          Script.self.kill;\n ....\n 2869      def keep_awake()\n 2870          Thread.new {\n 2871:             while( running?($current_script_name) )\n 2872                  sleep 150; put 'look';\n 2873              end\n ....\n 2890                  end;\n 2891                  while(line = get);\n 2892:                     break unless running?($current_script_name);\n 2893                      if(line =~ /SEND|POLICY|[Rr](\\s)*[Ee](\\s)*[Pp](\\s)*[Oo](\\s)*[Rr](\\s)*[Tt]|peaking to you|unresponsive|taps you|nods to you|lease respond|not in control|character|violation|lease speak|peak out loud|Y U SHOU D|whispers,|speaking to you|smiles at you|waves to you|grins at you|hugs you|takes hold your hand|grabs your hand|clasps your hand|trying to drag you/);\n 2894                          unless(line =~ /LNet/);\n ....\n 2941              $stop_wait = true if line =~ /#{$global_target}.*#{$pcs}/ and line !~ /style id=\"\".*style id=\"roomDesc\"|(?:component|compDef) id='room objs'/\n 2942              break if $stop_wait\n 2943:             break if !running?($current_script_name)\n 2944          end\n 2945          status_tags\n ....\n 2970   \n 2971      def run_script( name, pause_bigshot = false, args = [] )\n 2972:         if Script.running.find { |s| s.name.downcase == name.downcase }.paused or running? name\n 2973              stop_script name\n 2974:             wait_while { running? name }\n 2975          end\n 2976   \n 2977          start_script name, args\n 2978          if pause_bigshot\n 2979:             wait_until { !running? name }\n 2980          end\n 2981      end\n ....\n 2993   \n 2994      def croak_script(name)\n 2995:         kill_script(name) if running?(name)\n 2996      end\n 2997   \n ....\n 3237      def display_watch_total()\n 3238          total = Time.now.to_i - @BIRTH_TIME\n 3239:         message( sprintf( \"Bigshot: Total Time Running: %d min.  %0.2f secs.\",\n 3240              total / 60, total % 60 ) )\n 3241      end\n ....\n 3396              return false\n 3397          end\n 3398:         if( @RESTING_SCRIPTS.any? { |i| running?(i) } )\n 3399:             $not_hunting_reason = 'resting scripts still running.'\n 3400              return false\n 3401          end\n ....\n 3938              until( checkpcs.include?(leader) )\n 3939                  start_script( 'go2', [ group.room_id, '_disable_confirm_' ] )\n 3940:                 wait_while { running?('go2') }\n 3941                  fput \"join #{leader}\"\n 3942                  sleep 1\n ....\n 3992              if( bs.RESTING_ROOM_ID && bs.RESTING_ROOM_ID != 4 )\n 3993                  start_script( 'go2', [ bs.RESTING_ROOM_ID, '_disable_confirm_' ] )\n 3994:                 wait_while { running?('go2') }\n 3995              end\n 3996              echo \"Fatal exception!\"\n\nE:\\Google Drive\\Lich\\scripts\\bloader.lic:\n   76  		end\n   77  \n   78: 		while running? 'bigshot'\n   79  			sleep 1\n   80  			stop_script 'bigshot'\n\nE:\\Google Drive\\Lich\\scripts\\boostgem.lic:\n   12  \n   13  start_script 'go2', [ 'advguild' ]\n   14: wait_while { running?('go2') }\n   15  \n   16  $gemtask = false\n   ..\n   20   start_exec_script( <<-eos\n   21          while(line = get);\n   22:             break unless running?('boost');\n   23              $gemtask = true if line =~ /The local gem dealer/;\n   24              $herbtask = true if line =~ /The local (healer|herbalist)/;\n   ..\n   40  		start_script 'go2', [ 'gemshop' ] if $gemtask\n   41      start_script 'go2', [ 'npchealer' ] if $herbtask\n   42: 		wait_while { running?('go2') }\n   43  		npc = GameObj.npcs.find { |t| t.name =~ /(dealer|zirconia|kahlyr|tanz|diam|areac|mirtag)/i }\n   44  		fput \"ask ##{npc.id} for bounty\"\n   ..\n   52        $herbtask = false\n   53  			start_script 'go2', [ 'advguild' ]\n   54: 			wait_while { running?('go2') }\n   55  		end\n   56  	end\n\nE:\\Google Drive\\Lich\\scripts\\bu_sbounty-bigshot.lic:\n   18  if not defined? $bigshot\n   19      start_script('bigshot', [ 'load' ], true)\n   20:     wait_while { running?('bigshot') }\n   21  end\n   22  \n   ..\n   45  \n   46  $SBOUNTY_HUNTER_RELOAD = proc {\n   47:     pause_script 'bigshot' if running? 'bigshot'\n   48      $bigshot.load_settings\n   49:     unpause_script 'bigshot' if running? 'bigshot'\n   50  }\n   51  \n\nE:\\Google Drive\\Lich\\scripts\\calcredux.lic:\n 1189  			respond(\"   Your current armor is set to #{armor}.  It can be set anytime by ';send armor to [type]'.\")\n 1190  			respond(\"   You can also change 'calcredux-armor-#{char_name}.txt' in your scripts dir for convenience (or just send 'calcredux save armor' and the script will do that for you).\")\n 1191: 			respond(\"   Also at anytime, type ';send calcredux getpast', and Lich will re-send all cached data so it can be calculated (this allows you to use calcredux to calculate hits even if it wasn't running at the time).\")\n 1192  			respond(\"   Additionally, you can check your average at anytime by sending 'average redux' or 'redux', or manually save your history by sending 'calcredux save'.\")\n 1193  			respond(\"(manually saving is unnecessary, it's done automatically every 2 minutes, but you can if you wish).\")\n\nE:\\Google Drive\\Lich\\scripts\\child2.lic:\n   71  			waitrt?\n   72  			start_script 'step2', [\"#{place}\"]\n   73: 			wait_while{running?('step2')}\n   74  			wait_until{ thatroom != Room.current.id }\n   75  			waitrt?\n   ..\n  129  waitfor \"Adventurer's Guild\"\n  130  start_script 'go2',  ['advguild']\n  131: wait_while {running? ('go2')}\n  132  fput \"ask taskmaster about bounty\"\n  133  \n\nE:\\Google Drive\\Lich\\scripts\\citizenship.lic:\n   49  def go_place(location)\n   50  	start_script \"go2\",[\"#{location}\",\"_disable_confirm_\"]\n   51: 	wait_until { !running?\"go2\" }; pause 0.25\n   52  end\n   53  \n\nE:\\Google Drive\\Lich\\scripts\\common.lic:\n   25  $pick_room = 19\n   26  $no_tpick = false\n   27: #start_script \"checkemail\" if !running? \"checkemail\"\n   28  $FAILED_COMMAND = '*FAILED*'\n   29  $ORDINALS = %w(first second third fourth fifth sixth seventh eighth ninth tenth eleventh twelfth thirteenth)\n   ..\n   41  delayed_start_script = <<-eos\n   42    sleep 5\n   43:   wait_while { running?(\"repository\")}\n   44    sleep 5\n   45    start_script 'map_mod'\n   ..\n  142  \n  143    def pauseScript(script)\n  144:     if Script.running?(script) and !Script.paused?(script)\n  145        Script.pause(script)\n  146        return true\n  ...\n  159      $silvers = 0\n  160  \n  161:     wait_while { running?('go2')}\n  162      $check_silvers = <<-eos\n  163      while line = get\n  ...\n  377      start_script \"#{script}\" if var1 =~ /xx/\n  378      sleep 1\n  379:     wait_while { running?(\"#{script}\")}\n  380      waitrt?\n  381      sleep 1\n  ...\n  516          if success\n  517            pause 2\n  518:           pause 1 while Script.running?(name)\n  519          end\n  520          success\n  ...\n  666          start_script 'go2', [\"#{room_num}\"]\n  667          timer = Time.now\n  668:         while Script.running?('go2')\n  669            if (Time.now - timer) > 30\n  670              kill_script 'go2'\n  ...\n  672              start_script 'go2', [\"#{room_num}\"]\n  673            end\n  674:           timer = Time.now if Script.running?('escort')\n  675            pause 0.5\n  676          end\n\nE:\\Google Drive\\Lich\\scripts\\common1.lic:\n   22  $pick_room = 20\n   23  $no_tpick = false\n   24: start_script \"checkemail\" if !running? \"checkemail\"\n   25  $FAILED_COMMAND = '*FAILED*'\n   26  $ORDINALS = %w(first second third fourth fifth sixth seventh eighth ninth tenth eleventh twelfth thirteenth)\n   ..\n   37  delayed_start_script = <<-eos\n   38    sleep 5\n   39:   wait_while { running?(\"repository\")}\n   40    start_script 'map_mod'\n   41  eos\n   ..\n  139      $silvers = 0\n  140  \n  141:     wait_while { running?('go2')}\n  142      $check_silvers = <<-eos\n  143      while line = get\n  ...\n  305      start_script \"#{script}\" if var1 =~ /xx/\n  306      sleep 1\n  307:     wait_while { running?(\"#{script}\")}\n  308      waitrt?\n  309      sleep 1\n  ...\n  328          if success\n  329            pause 2\n  330:           pause 1 while Script.running?(name)\n  331          end\n  332          success\n  ...\n  478          start_script 'go2', [\"#{room_num}\"]\n  479          timer = Time.now\n  480:         while Script.running?('go2')\n  481            if (Time.now - timer) > 30\n  482              kill_script 'go2'\n  ...\n  484              start_script 'go2', [\"#{room_num}\"]\n  485            end\n  486:           timer = Time.now if Script.running?('escort')\n  487            pause 0.5\n  488          end\n\nE:\\Google Drive\\Lich\\scripts\\common_erelim.lic:\n   12      $silvers_from_notes = 0\n   13  \n   14:     wait_while { running?('go2')}\n   15      $check_silvers = <<-eos\n   16      while line = get\n\nE:\\Google Drive\\Lich\\scripts\\commonFight.lic:\n   19  $new_vaesp = false\n   20  $max_npc = 2\n   21: $max_npc = 3 if running? 'bigshot'\n   22  $monsterGone = false\n   23  \n   ..\n   44      uac_line_checks = <<-eos\n   45      while line = get\n   46:       break unless running?($current_script_name)\n   47        if line =~ /^You have (decent|good|excellent) positioning/\n   48          $position = $1\n   ..\n   93    def loot()\n   94      dead_npcs = GameObj.npcs.find_all { |i| i.status == 'dead' }\n   95:     dead_npcs.each { |i| start_script ('sloot') if !running?('sloot')\n   96:     wait_while { running?('sloot') }}\n   97    end\n   98    module_function :loot\n   ..\n  103        returnTemp = false if (GameObj.npcs.size < 1 || status =~ /dead|gone/)\n  104      else\n  105:       returnTemp = (!bleeding? and health > 0 and !stunned?) and GameObj.npcs.size <= $max_npc and status !~ /dead|gone/ and (running? 'bigshot' or $manual_target)\n  106      end\n  107      return returnTemp\n  108:     #while GameObj.npcs.size <= $max_npc and target.status !~ /dead|gone/ and (running? 'bigshot' or $manual_target)\n  109    end\n  110    module_function :attack?\n\nE:\\Google Drive\\Lich\\scripts\\confluence_sort.lic:\n   15  =end \n   16  \n   17: wait_while { running?('repository')}\n   18  \n   19  GameObj.load_data\n\nE:\\Google Drive\\Lich\\scripts\\death_potions.lic:\n  100  		if hiding?\n  101  			start_script(\"go2\",['typeahead=0', room, '_disable_confirm_'])\n  102: 			wait_while{running?(\"go2\")}\n  103  		else\n  104  			start_script(\"go2\",[room, '_disable_confirm_'])\n  105: 			wait_while{running?(\"go2\")}\n  106  		end\n  107  	else\n  ...\n  164  		mymove 'town'\n  165  		unless checkpaths\n  166: 			start_script 'step2',[\"#{room}\"];wait_while{running? 'step2'}\n  167  		end\n  168  		findpriestess\n\nE:\\Google Drive\\Lich\\scripts\\deed.lic:\n  107  \n  108  			start_script 'go2', [ find_nearest($deedroom).to_s, '_disable_confirm_' ]\n  109: 			wait_while{running?('go2')}\n  110  			if Room.current.id == 4045\n  111  					fput \"ring chime with mallet\"\n  ...\n  121  #Landing\n  122  	start_script 'go2', [ find_nearest($deedroom).to_s, '_disable_confirm_' ]\n  123: 	wait_while{running?('go2')}\n  124  if Room.current.id == 4045\n  125  fput\"ring chime with mallet\"\n\nE:\\Google Drive\\Lich\\scripts\\deed1.lic:\n    2  \n    3  	start_script 'go2', [ find_nearest($deedroom).to_s, '_disable_confirm_' ]\n    4: 	wait_while{running?('go2')}\n    5  	if Room.current.id == 4045\n    6  		fput \"ring chime with mallet\"\n\nE:\\Google Drive\\Lich\\scripts\\deeds_landing.lic:\n   11  		fput \"unhide\" if hiding?\n   12  		start_script(\"go2\",[room, '_disable_confirm_'])\n   13: 		wait_while{running?(\"go2\")}\n   14  	end\n   15  end\n\nE:\\Google Drive\\Lich\\scripts\\deprecated_code.lic:\n   88  \n   89    ## Enhancive start\n   90:   if !running? 'treasure_hunt'\n   91    $combat_enhancives.each {|enhancive| \n   92      GameObj[containers.id].contents.find{|contents| \n   ..\n   98    ## Armor start\n   99    GameObj[containers.id].contents.find{|contents| @wear_items << contents if contents.name =~ /full plate/}\n  100:   GameObj[containers.id].contents.find{|contents| @wear_items << contents if contents.name =~ /greathelm/} if !running? 'treasure_hunt'\n  101  }\n  102  \n\nE:\\Google Drive\\Lich\\scripts\\disarm-no-more.lic:\n    3  \n    4  	The following happens if your weapon is not in your right hand or shield/off hand isn't in your left hand:\n    5: 	Script will kill go2 if it's running.\n    6  	Script will tell you which room it thought you were in the last time it saw your weapon or shield in your hands.\n    7  	Script will run back to that room if it's not the room you're currently in.\n    .\n   54  		weapon_search = GameObj.loot.find { |loot| loot.id == weapon }\n   55  		if weapon_search != nil\n   56: 			pause_script 'bigshot' if running? 'bigshot'\n   57: 			wait_while{ running?('sloot') } if running? 'sloot'\n   58: 			wait_while{ running?('waitloot') } if running? 'waitloot'\n   59  			waitrt?\n   60  			fput \"get ##{weapon}\"\n   61  			weapon_search = nil\n   62: 			unpause_script 'bigshot' if running? 'bigshot'\n   63  		end\n   64  		off_hand_search = GameObj.loot.find { |loot| loot.id == off_hand }\n   65  		if off_hand_search != nil\n   66: 			pause_script 'bigshot' if running? 'bigshot'\n   67: 			wait_while{ running?('sloot') } if running? 'sloot'\n   68: 			wait_while{ running?('waitloot') } if running? 'waitloot'\n   69  			waitrt?\n   70  			fput \"get ##{off_hand}\"\n   71  			off_hand_search = nil\n   72: 			unpause_script 'bigshot' if running? 'bigshot'\n   73  		end\n   74  		if GameObj.left_hand.id == weapon && swap_okay\n   ..\n  100  loop{\n  101  	if (GameObj.right_hand.id != weapon && have_weapon) or (GameObj.left_hand.id != off_hand && have_off_hand) && Room.current.id != 10815 && Room.current.id != 10817 && Room.current.id != 10821\n  102: 		pause_script 'bigshot' if running? 'bigshot'\n  103: 		wait_while{ running?('sloot') } if running? 'sloot'\n  104: 		wait_while{ running?('waitloot') } if running? 'waitloot'\n  105: 		if running? 'go2'\n  106  			sleep 1\n  107  		elsif script.vars[1] != nil\n  ...\n  119  				weapon = GameObj.right_hand.id\n  120  			else\n  121: 				stop_script 'go2' if running? 'go2'\n  122: 				stop_script 'wander' if running? 'wander'\n  123  				echo \"Last time you were holding your weapon was in or around room number #{room}.\" if room != nil && have_weapon\n  124  				echo \"Last time you were holding your shield/off hand was in or around room number #{off_hand_room}.\" if off_hand_room != nil && have_off_hand\n  125  				start_script \"go2\", [room] if Room.current.id != room && room != nil\n  126: 				wait_while{ running?('go2') }\n  127  				if Spell[218].active? && GameObj.npcs.any? { |npc| npc.noun == 'spirit' }\n  128  					waitrt?\n  ...\n  151  					off_hand = GameObj.left_hand.id\n  152  				else\n  153: 					stop_script 'go2' if running? 'go2'\n  154: 					stop_script 'wander' if running? 'wander'\n  155  					echo \"Last time you were holding your weapon was in or around room number #{room}.\" if room != nil && have_weapon\n  156  					echo \"Last time you were holding your shield/off hand was in or around room number #{off_hand_room}.\" if off_hand_room != nil && have_off_hand\n  157  					start_script \"go2\", [off_hand_room] if Room.current.id != off_hand_room && off_hand_room != nil\n  158: 					wait_while{ running?('go2') }\n  159  					waitrt?\n  160  					fput \"get ##{off_hand}\"\n  ...\n  166  		off_hand_room = nil\n  167  		swap_okay = nil\n  168: 		unpause_script 'bigshot' if running? 'bigshot'\n  169  	end\n  170  	sleep 0.1\n\nE:\\Google Drive\\Lich\\scripts\\disarm.lic:\n   15  \n   16  def toggle_scripts(pause, script_list)\n   17:   script_list.each {|s| eval(\"#{pause}_script '#{s}'\") if running? \"#{s}\"}\n   18  end\n   19  \n\nE:\\Google Drive\\Lich\\scripts\\disarm.rb:\n    8  \n    9  def toggle_scripts(pause, script_list)\n   10: 	script_list.each {|s| eval(\"#{pause}_script '#{s}'\") if running? \"#{s}\"}\n   11  end\n   12  \n\nE:\\Google Drive\\Lich\\scripts\\dr_sewers.lic:\n   95  sewer_exec = <<-eos\n   96  while line = get\n   97:   break unless running?('dr_sewers')\n   98    if line =~ /^Thick beads of phosphorescent slime dribble|^You can't go there/\n   99      fput 'look'\n  ...\n  112  def start_sewers\n  113  	start_script \"go2\", [\"23759\"]\n  114: 	wait_while {running?('go2')}\n  115  \n  116  	if righthand != 'booklet'\n\nE:\\Google Drive\\Lich\\scripts\\drafix scripts\\findgem.lic:\n  109  	start_room = Room.current.id\n  110  	start_script 'go2', ['4045']\n  111: 	wait_while{running? 'go2'}\n  112  \n  113  	put 'ring chime with mallet'\n\nE:\\Google Drive\\Lich\\scripts\\drafix scripts\\sloot.lic:\n   97      next if Room.current.id.to_s == room.to_s\n   98  \n   99:     wait_while{ running?('go2') }\n  100      start_script('go2', [ room.to_s, '_disable_confirm_' ]);\n  101:     wait_while{ running?('go2') }\n  102  }\n  103  \n\nE:\\Google Drive\\Lich\\scripts\\drDriver.lic:\n   82  \n   83    waitfor \"Stygian Annex\"\n   84:   kill_script 'waggle' if running? 'waggle'\n   85    clearPackage()\n   86  end\n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena:\n    7  check_lines = <<-eos\n    8    while line = get\n    9:     break if !running?('duskruinArena')\n   10      kill_script 'duskruinArena' if line =~ /^An arena guard escorts you from/\n   11      #put 'incant 1030' if line =~ /^Your armor/\n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n   16  start_script('commonFight')\n   17  \n   18: #start_script 'monitor' if !running? 'monitor'\n   19: kill_script 'transcend' if running? 'transcend' \n   20  \n   21  $legCritMsgs = \"Blow shatters knee|Strike punctures|Shot shatters|You ripped|(Left|Right) leg ripped|Lucky shop rips|(Left|Right) hip\"\n   ..\n   24    while line = get\n   25     #echo line\n   26:     break if !running?('duskruinArena')\n   27      kill_script 'duskruinArena' if line =~ /^You've been defeated.  You'll/\n   28      #kill_script 'duskruinArena' if line =~ /^An arena guard escorts you from/\n\nE:\\Google Drive\\Lich\\scripts\\ego2.lic:\n  287  	hide_me\n  288  	status_tags\n  289: 	before_dying { kill_script(#{script.name.inspect}) if running?(#{script.name.inspect}) }\n  290: 	Thread.new { wait_while { running?(#{Script.self.name.inspect}) }; Script.self.kill }\n  291  	while (line = get)\n  292  		if line =~ /<pushStream id='room'/\n  ...\n  350  				end\n  351  				start_script(attack_script, (jerks + npcs).collect { |n| n.id }, h={:quiet=>true})\n  352: 				wait_while { running?(attack_script) }\n  353  				if clear.any? { |line| line =~ /^Be at peace my child|^Spells of War cannot be cast/ }\n  354  					sanct_count = XMLData.room_count\n  ...\n  370  			if ([Wounds.head, Wounds.neck, Wounds.torso, Wounds.limbs, Wounds.nerves, Scars.head, Scars.neck, Scars.torso, Scars.nerves].max > 0) or (Scars.limbs > 1) or ((checkhealth + 50) < maxhealth)\n  371  				start_script 'useherbs', [ '--buy-missing=off' ]\n  372: 				wait_while { running?('useherbs') }\n  373  				if ([Wounds.head, Wounds.neck, Wounds.torso, Wounds.limbs, Wounds.nerves, Scars.head, Scars.neck, Scars.torso, Scars.nerves].max > 0) or (Scars.limbs > 1) or ((checkhealth + 50) < maxhealth)\n  374  					useherbs = false\n  ...\n  378  			if ([Wounds.head, Wounds.neck, Wounds.torso, Wounds.limbs, Wounds.nerves, Scars.head, Scars.neck, Scars.torso, Scars.limbs, Scars.nerves].max > 0) or ((checkhealth + 50) < maxhealth)\n  379  				start_script 'useherbs', [ '--buy-missing=off' ]\n  380: 				wait_while { running?('useherbs') }\n  381  				if ([Wounds.head, Wounds.neck, Wounds.torso, Wounds.limbs, Wounds.nerves, Scars.head, Scars.neck, Scars.torso, Scars.limbs, Scars.nerves].max > 0) or ((checkhealth + 50) < maxhealth)\n  382  					useherbs = false\n  ...\n  842  			fput 'stand' unless standing?\n  843  			hide_me.call\n  844: 			dothistimeout 'northeast', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  845  		end\n  846  	},\n  ...\n  853  			fput 'stand' unless standing?\n  854  			hide_me.call\n  855: 			dothistimeout 'southwest', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  856  		end\n  857  	},\n  ...\n  864  			check_room.call\n  865  			hide_me.call\n  866: 			dothistimeout 'north', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  867  		end\n  868  	},\n  ...\n  874  			fput 'stand' unless standing?\n  875  			hide_me.call\n  876: 			dothistimeout 'southwest', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  877  		end\n  878  	},\n  ...\n  884  			fput 'stand' unless standing?\n  885  			hide_me.call\n  886: 			dothistimeout 'east', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  887  		end\n  888  	},\n  ...\n  894  			fput 'stand' unless standing?\n  895  			hide_me.call\n  896: 			dothistimeout 'west', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  897  		end\n  898  	},\n  ...\n  904  			fput 'stand' unless standing?\n  905  			hide_me.call\n  906: 			dothistimeout 'southeast', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  907  		end\n  908  	},\n  ...\n  914  			fput 'stand' unless standing?\n  915  			hide_me.call\n  916: 			dothistimeout 'west', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  917  		end\n  918  	},\n  ...\n  924  			fput 'stand' unless standing?\n  925  			hide_me.call\n  926: 			dothistimeout 'southeast', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  927  		end\n  928  	},\n  ...\n  934  			fput 'stand' unless standing?\n  935  			hide_me.call\n  936: 			dothistimeout 'northwest', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  937  		end\n  938  	},\n  ...\n  944  			fput 'stand' unless standing?\n  945  			hide_me.call\n  946: 			dothistimeout 'east', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  947  		end\n  948  	},\n  ...\n  954  			fput 'stand' unless standing?\n  955  			hide_me.call\n  956: 			dothistimeout 'west', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  957  		end\n  958  	},\n  ...\n  964  			fput 'stand' unless standing?\n  965  			hide_me.call\n  966: 			dothistimeout 'northeast', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  967  		end\n  968  	},\n  ...\n  974  			fput 'stand' unless standing?\n  975  			hide_me.call\n  976: 			dothistimeout 'west', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  977  		end\n  978  	},\n  ...\n  984  			fput 'stand' unless standing?\n  985  			hide_me.call\n  986: 			dothistimeout 'southwest', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  987  		end\n  988  	},\n  ...\n  994  			fput 'stand' unless standing?\n  995  			hide_me.call\n  996: 			dothistimeout 'northeast', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n  997  		end\n  998  	},\n  ...\n 1004  			fput 'stand' unless standing?\n 1005  			hide_me.call\n 1006: 			dothistimeout 'west', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1007  		end\n 1008  	},\n ....\n 1014  			fput 'stand' unless standing?\n 1015  			hide_me.call\n 1016: 			dothistimeout 'northeast', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1017  		end\n 1018  	},\n ....\n 1024  			fput 'stand' unless standing?\n 1025  			hide_me.call\n 1026: 			dothistimeout 'northeast', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1027  		end\n 1028  	},\n ....\n 1034  			fput 'stand' unless standing?\n 1035  			hide_me.call\n 1036: 			dothistimeout 'southwest', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1037  		end\n 1038  	},\n ....\n 1044  			fput 'stand' unless standing?\n 1045  			hide_me.call\n 1046: 			dothistimeout 'west', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1047  		end\n 1048  	},\n ....\n 1054  			fput 'stand' unless standing?\n 1055  			hide_me.call\n 1056: 			dothistimeout 'northeast', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1057  		end\n 1058  	},\n ....\n 1064  			fput 'stand' unless standing?\n 1065  			hide_me.call\n 1066: 			dothistimeout 'north', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1067  		end\n 1068  	},\n ....\n 1074  			fput 'stand' unless standing?\n 1075  			hide_me.call\n 1076: 			dothistimeout 'south', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1077  		end\n 1078  	},\n ....\n 1084  			fput 'stand' unless standing?\n 1085  			hide_me.call\n 1086: 			dothistimeout 'northwest', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1087  		end\n 1088  	},\n ....\n 1094  			fput 'stand' unless standing?\n 1095  			hide_me.call\n 1096: 			dothistimeout 'south', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1097  		end\n 1098  	},\n ....\n 1104  			fput 'stand' unless standing?\n 1105  			hide_me.call\n 1106: 			dothistimeout 'southwest', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1107  		end\n 1108  	},\n ....\n 1114  			fput 'stand' unless standing?\n 1115  			hide_me.call\n 1116: 			dothistimeout 'north', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1117  		end\n 1118  	},\n ....\n 1124  			fput 'stand' unless standing?\n 1125  			hide_me.call\n 1126: 			dothistimeout 'north', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1127  		end\n 1128  	},\n ....\n 1134  			fput 'stand' unless standing?\n 1135  			hide_me.call\n 1136: 			dothistimeout 'northeast', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1137  		end\n 1138  	},\n ....\n 1144  			fput 'stand' unless standing?\n 1145  			hide_me.call\n 1146: 			dothistimeout 'south', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1147  		end\n 1148  	},\n ....\n 1154  			fput 'stand' unless standing?\n 1155  			hide_me.call\n 1156: 			dothistimeout 'southwest', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1157  		end\n 1158  	},\n ....\n 1164  			fput 'stand' unless standing?\n 1165  			hide_me.call\n 1166: 			dothistimeout 'west', 3, /^Trying to sneak over|^Obvious|^Running heedlessly/\n 1167  		end\n 1168  	},\n ....\n 1653  	else\n 1654  		start_script 'go2', [ next_id.to_s, 'typeahead=0', 'shortcut=off' ]\n 1655: 		wait_while { running?('go2') }\n 1656  	end\n 1657  	sleep 0.1\n ....\n 1712  		bank_id = Room[pickup_room].find_nearest_by_tag('bank')\n 1713  		start_script 'go2', [ bank_id.to_s ]\n 1714: 		wait_while { running?('go2') }\n 1715  		fput 'unhide' if hidden? or invisible?\n 1716  		fput \"withdraw #{travel_cost - silvers}\"\n ....\n 1720  	#\n 1721  	start_script 'go2', [ pickup_room.to_s ]\n 1722: 	wait_while { running?('go2') }\n 1723  	dothistimeout 'wait', 10, /^Time drags on by\\.\\.\\.$/\n 1724  	checked_npc_ids = Array.new\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\Base.cmd:\n 1515  var location moving\n 1516  moving:\n 1517: #Running heedlessly over the rough terrain|A bony hand reaches up out of the bog and clamps its cold skeletal fingers|can't seem to make much headway\n 1518  matchre stand.then.move ^You must be standing to do that\\.\n 1519  matchre stand.then.move ^You can't do that while lying down\\.\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\genietraderaix.cmd:\n   29  #% If origami instructions are in primer, set variable to IN PRIMER, for example 'setvariable origami-instructions flower instruction in primer'\n   30  #% Must be wearing a feedbag with grass in it, I suggest 30 or 40 grass in it when starting. COUNT GRASS IN MY FEEDBAG to check :)\n   31: #% Must have coin in Leth, Dirge and Crossings banks, at least 5 plat in each bank is reccomended. If running commodities also I'd suggest 10 plat in each bank just to be safe.\n   32  #% Must start with both hands empty.\n   33  #% Start in any outpost or guild by the shipping/shipment clerk.\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\hunt.cmd:\n  358  ##                 GLOBAL VARIABLES                 ##\n  359  ## These variables can be changed while Hunt ##\n  360: ## is running to modify how the script works.       ##\n  361  ## eg If you get tired of skinning, but have GH set ##\n  362  ## to skin, just change GH_SKIN to OFF              ##\n  ...\n 6540  	echo **\n 6541  	echo ** Note: The appraisal variable is a global variable so you can turn it on/off as you\n 6542: 	echo ** so desire while the script is running.  The variable is GH_APPR\n 6543  	echo **************************************************************************************\n 6544  	echo\n ....\n 6613  	echo **\n 6614  	echo ** Note: The dancing variable is a global variable so you can turn it on/off as you\n 6615: 	echo ** so desire while the script is running.  The variable is GH_DANCING\n 6616  	echo **************************************************************************************\n 6617  	echo\n ....\n 6711  	echo **\n 6712  	echo ** Note: The training variables are a global variable so you can turn it on/off as you\n 6713: 	echo ** so desire while the script is running.  The variables are GH_EXP and GH_TRAIN\n 6714  	echo ** Note2: You need the EXP plugin to make use of these functions.\n 6715  	echo **************************************************************************************\n ....\n 6806  	echo **\n 6807  	echo ** Note: The looting variables are a global variable so you can turn it on/off as you\n 6808: 	echo ** so desire while the script is running.  The variables are GH_LOOT,GH_LOOT_BOX,\n 6809  	echo ** GH_LOOT_COIN, GH_LOOT_GEM, and GH_LOOT_JUNK\n 6810  	echo **************************************************************************************\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\smithing.cmd:\n   78  #% stamp-items = stamping items improves the pay and the prestige you gain from work orders. if this is on, smithbot will stamp your items.\n   79  #% stamp = the type of stamp you have if you have one.\n   80: #% train-humming = if you wish to train vocals while running smithbot\n   81  #% hum-song-# = smithbot will select a song at random from the 3 songs you have selected when humming.\n   82  #%\n   ..\n  141       if_2 setvariable quantity %2\n  142       if_2 goto if3check\n  143: echo If you are running this to craft goods for yourself, please restart properly. For help, read the PLEASE READ section at the top of the script.\n  144       exit\n  145  if3check:\n  146       if_3 setvariable ingot-type %3\n  147       if_3 goto if4check\n  148: echo If you are running this to craft goods for yourself, please restart properly. For help, read the PLEASE READ section at the top of the script.\n  149       exit\n  150  if4check:\n\nE:\\Google Drive\\Lich\\scripts\\familiarkeeper.lic:\n    4  while true\n    5  	wait_until {(Spell[920].timeleft != 0.0) && (Spell[920].timeleft < 5.0)} \n    6: 	if running? \"waggle\"\n    7  			pause_script \"waggle\"\n    8  			didpause = true			\n\nE:\\Google Drive\\Lich\\scripts\\favorhunt.lic:\n    7  	start_script \"#{script}\" if var1 =~ /xx/\n    8  	sleep 1\n    9: 	wait_while { running?(\"#{script}\")}\n   10  end\n   11  \n   ..\n   16  	start_script 'fbigshot'\n   17  	sleep 1\n   18: 	wait_while { running?(\"go2\")}\n   19: 	wait_until { running?('favorhunt_temp') or percentmind <= 25}\n   20  \n   21: 	pause_script 'fbigshot' if running? 'fbigshot'\n   22: 	pause_script 'transcend' if running? 'transcend'\n   23  	run_wait_script('go2', '20')\n   24  	run_wait_script('first_rest', 'xx')\n   ..\n   31  	run_wait_script('waggle', 'xx')\n   32  	run_wait_script('last_rest', 'xx')\n   33: 	kill_script 'fbigshot' if running? 'fbigshot'\n   34  	exit\n   35  \n\nE:\\Google Drive\\Lich\\scripts\\fbigshot.lic:\n   62          fput \"quit\"\n   63          fput \"quit\"\n   64:         kill_script 'sbounty' if running? 'sbounty'\n   65:         kill_script 'bigshot' if running? 'bigshot' or running? 'fbigshot'\n   66      end\n   67  }\n   ..\n  291              @HUNTING_SCRIPTS.each { |i|\n  292                  echo \"Cleaning up hunting scripts: #{i}.\"\n  293:                 stop_script(i) if running?(i)\n  294              }\n  295          }\n  ...\n  720          if @DEAD_MAN_SWITCH\n  721              Thread.new {\n  722:                 while( running?('bigshot') )\n  723                      if( dead? ||  percenthealth < 40 )\n  724                          echo 'AUTOBOT ALERT: Your character is in trouble!'\n  ...\n  730          elsif @DEPART_SWITCH\n  731              start_exec_script( <<-EOF\n  732:                 while( running?('bigshot') );\n  733                      if(dead?);\n  734                          stop_script('bigshot');\n  ...\n  737                          start_script('waggle');\n  738                          15.times { sleep 60; fput info; };\n  739:                         sleep 1 until percentspirit == 100 && !running?('waggle');\n  740                          start_script( 'bigshot', ['solo'] );\n  741                          Script.self.kill;\n  ...\n  754      def keep_awake()\n  755          Thread.new {\n  756:             while( running?('bigshot') )\n  757                  sleep 150; put 'look';\n  758              end\n  ...\n  775                  end;\n  776                  while(line = get);\n  777:                     break unless running?('bigshot');\n  778                      if(line =~ /SEND|POLICY|[Rr](\\s)*[Ee](\\s)*[Pp](\\s)*[Oo](\\s)*[Rr](\\s)*[Tt]|peaking to you|unresponsive|taps you|nods to you|lease respond|not in control|character|violation|lease speak|peak out loud|Y U SHOU D|whispers,|speaking to you|smiles at you|waves to you|grins at you|hugs you|takes hold your hand|grabs your hand|clasps your hand|trying to drag you/);\n  779                          unless(line =~ /LNet/);\n  ...\n  831                  $stop_wait = true if line =~ /#{$global_target}.*#{$pcs}/ and line !~ /style id=\"\".*style id=\"roomDesc\"|(?:component|compDef) id='room objs'/;\n  832                  break if $stop_wait;\n  833:                 break if !running? 'bigshot';\n  834              end;\n  835              status_tags;\n  ...\n  859   \n  860      def run_script( name, pause_bigshot = false, args = [] )\n  861:         if Script.running.find { |s| s.name.downcase == name.downcase }.paused or running? name\n  862              stop_script name\n  863:             wait_while { running? name }\n  864          end\n  865   \n  866          start_script name, args\n  867          if pause_bigshot\n  868:             wait_until { !running? name }\n  869          end\n  870      end\n  ...\n  882   \n  883      def croak_script(name)\n  884:         kill_script(name) if running?(name)\n  885      end\n  886   \n  ...\n  990          start_exec_script( <<-eos\n  991          while(line = get);\n  992:         break unless running?('bigshot');\n  993          $ambusher_here = true if line =~ /^\\w+ leaps from hiding to attack/;\n  994          end;\n  ...\n 1132      def display_watch_total()\n 1133          total = Time.now.to_i - @BIRTH_TIME\n 1134:         message( sprintf( \"Bigshot: Total Time Running: %d min.  %0.2f secs.\",\n 1135              total / 60, total % 60 ) )\n 1136      end\n ....\n 1291              return false\n 1292          end\n 1293:         if( @RESTING_SCRIPTS.any? { |i| running?(i) } )\n 1294:             $not_hunting_reason = 'resting scripts still running.'\n 1295              return false\n 1296          end\n ....\n 1783              until( checkpcs.include?(leader) )\n 1784                  start_script( 'go2', [ group.room_id, '_disable_confirm_' ] )\n 1785:                 wait_while { running?('go2') }\n 1786                  fput \"join #{leader}\"\n 1787                  sleep 1\n ....\n 1837              if( bs.RESTING_ROOM_ID && bs.RESTING_ROOM_ID != 4 )\n 1838                  start_script( 'go2', [ bs.RESTING_ROOM_ID, '_disable_confirm_' ] )\n 1839:                 wait_while { running?('go2') }\n 1840              end\n 1841              echo \"Fatal exception!\"\n\nE:\\Google Drive\\Lich\\scripts\\GameObjAdd.lic:\n   18  ReimNpcs = \"ethereal (?:commoner|denizen|guard|guardsman|guardswoman|inmate|lunatic|madman|madwoman|peasant|prisoner|squire|swordsman|swordswoman|traveller|townsman|townswoman|villager)|ghostly (?:bandit|highwayman|highwaywoman|marauder|waylayer)|unworldly (?:guest|maid|noble|royal guard|royal knight|servant|slave|steward|visitor)|celestial (?:dancer|juggler|nomad|traveller)|Shopkeeper|Innkeeper|Bartender|Patrol Leader|Bandit Lord|Bandit Lady|Gypsy Queen|Gypsy King|Guard Captain|Wall Captain|Drill Sergeant|Stable Hostler|Dungeon Master|Master Torturer|Butler|Cook|Knight Captain|Foreign Dignitary|Royal Prince|Royal Princess|Royal Jester|Royal Emperor|Royal Empress\"\n   19  \n   20: wait_while { running?('repository')}\n   21  \n   22  GameObj.load_data\n\nE:\\Google Drive\\Lich\\scripts\\gemstonegmcheck.cmd:\n   10  \n   11  mainloop:\n   12: 	matchre MONSTER (^Your heart leaps into your throat at the sound of the terrible wail|^A mastodonic leopard pounces on you, knocking you painfully to the ground|^You take a running start towards the ramp but as you are about to make a fantastic leap, you misjudge a step and slide head first down the ramp crashing hard into the snow-covered ground below|^You are knocked to the ground\\!|^You fall screaming to the ground grasping your mangled|huge foot up and slams it into the (floor|ground), shaking everything violently|crouches, sweeps a leg at you and connects\\!|The swarm surrounds you, causing you to lose your balance and fall|The swarm bunches tightly together and forms a dark mass around you, knocking you to the ground!)\n   13  	matchre MONSTER ^You assume a meditative posture, sitting with legs folded and hands resting upon your knees.\n   14  	matchre FALL ^You stand back up\\.\n\nE:\\Google Drive\\Lich\\scripts\\glitch.rbw:\n 2223            end\n 2224          }\n 2225:         unless Script.running?(script_name)\n 2226            settings.delete(script_name)\n 2227            md5_at_load.delete(script_name)\n ....\n 2448        next nil\n 2449      end\n 2450:     if (options[:force] != true) and (Script.running + Script.hidden).find { |s| s.name =~ /^#{Regexp.escape(script_name)}$/i }\n 2451:       respond \"--- Lich: #{script_name} is already running (use #{$clean_lich_char}force [scriptname] if desired).\"\n 2452        next nil\n 2453      end\n ....\n 2653      end\n 2654    }\n 2655:   @@running = Array.new\n 2656  \n 2657    attr_reader :name, :vars, :safe, :file_name, :label_order, :at_exit_procs\n 2658    attr_accessor :quiet, :no_echo, :jump_label, :current_label, :want_downstream, :want_downstream_xml, :want_upstream, :want_script_output, :hidden, :paused, :silent, :no_pause_all, :no_kill_all, :downstream_buffer, :upstream_buffer, :unique_buffer, :die_with, :match_stack_labels, :match_stack_strings, :watchfor, :command_line, :ignore_pause\n 2659    def Script.list\n 2660:     @@running.dup\n 2661    end\n 2662    def Script.current\n 2663:     if script = @@running.find { |s| s.has_thread?(Thread.current) }\n 2664        sleep 0.2 while script.paused? and not script.ignore_pause\n 2665        script\n ....\n 2673    def Script.run(*args)\n 2674      if s = @@elevated_script_start.call(args)\n 2675:       sleep 0.1 while @@running.include?(s)\n 2676      end\n 2677    end\n 2678:   def Script.running?(name)\n 2679:     @@running.any? { |i| (i.name =~ /^#{name}$/i) }\n 2680    end\n 2681    def Script.pause(name=nil)\n ....\n 2684        Script.current\n 2685      else\n 2686:       if s = (@@running.find { |i| (i.name == name) and not i.paused? }) || (@@running.find { |i| (i.name =~ /^#{name}$/i) and not i.paused? })\n 2687          s.pause\n 2688          true\n ....\n 2693    end\n 2694    def Script.unpause(name)\n 2695:     if s = (@@running.find { |i| (i.name == name) and i.paused? }) || (@@running.find { |i| (i.name =~ /^#{name}$/i) and i.paused? })\n 2696        s.unpause\n 2697        true\n ....\n 2701    end\n 2702    def Script.kill(name)\n 2703:     if s = (@@running.find { |i| i.name == name }) || (@@running.find { |i| i.name =~ /^#{name}$/i })\n 2704        s.kill\n 2705        true\n ....\n 2709    end\n 2710    def Script.paused?(name)\n 2711:     if s = (@@running.find { |i| i.name == name }) || (@@running.find { |i| i.name =~ /^#{name}$/i })\n 2712        s.paused?\n 2713      else\n ....\n 2719    end\n 2720    def Script.new_downstream_xml(line)\n 2721:     for script in @@running\n 2722        script.downstream_buffer.push(line.chomp) if script.want_downstream_xml\n 2723      end\n 2724    end\n 2725    def Script.new_upstream(line)\n 2726:     for script in @@running\n 2727        script.upstream_buffer.push(line.chomp) if script.want_upstream\n 2728      end\n 2729    end\n 2730    def Script.new_downstream(line)\n 2731:     @@running.each { |script|\n 2732        script.downstream_buffer.push(line.chomp) if script.want_downstream\n 2733        unless script.watchfor.empty?\n ....\n 2749    end\n 2750    def Script.new_script_output(line)\n 2751:     for script in @@running\n 2752        script.downstream_buffer.push(line.chomp) if script.want_script_output\n 2753      end\n ....\n 2901      @current_label = @label_order[0]\n 2902      @thread_group = ThreadGroup.new\n 2903:     @@running.push(self)\n 2904      return self\n 2905    end\n ....\n 2907      Thread.new {\n 2908        @killer_mutex.synchronize {\n 2909:         if @@running.include?(self)\n 2910            begin\n 2911              @thread_group.list.dup.each { |t|\n ....\n 2919              @at_exit_procs.each { |p| report_errors { p.call } }\n 2920              @die_with = @at_exit_procs = @downstream_buffer = @upstream_buffer = @match_stack_labels = @match_stack_strings = nil\n 2921:             @@running.delete(self)\n 2922              respond(\"--- Lich: #{@name} has exited.\") unless @quiet\n 2923              GC.start\n ....\n 3246      @match_stack_labels = Array.new\n 3247      @match_stack_strings = Array.new\n 3248:     num = '1'; num.succ! while @@running.any? { |s| s.name == \"exec#{num}\" }\n 3249      @name = \"exec#{num}\"\n 3250:     @@running.push(self)\n 3251      self\n 3252    end\n ....\n 3459      @current_label = @label_order[0]\n 3460      @thread_group = ThreadGroup.new\n 3461:     @@running.push(self)\n 3462      return self\n 3463    end\n ....\n 4404    args.flatten!\n 4405    args.each { |name|\n 4406:     if script = Script.running.find { |scr| scr.name == name }\n 4407        script.hidden = !script.hidden\n 4408      end\n ....\n 6526      cmd = $1\n 6527      if cmd =~ /^k$|^kill$|^stop$/\n 6528:       if Script.running.empty?\n 6529          respond '--- Lich: no scripts to kill'\n 6530        else\n 6531:         Script.running.last.kill\n 6532        end\n 6533      elsif cmd =~ /^p$|^pause$/\n 6534:       if s = Script.running.reverse.find { |s| not s.paused? }\n 6535          s.pause\n 6536        else\n ....\n 6539        s = nil\n 6540      elsif cmd =~ /^u$|^unpause$/\n 6541:       if s = Script.running.reverse.find { |s| s.paused? }\n 6542          s.unpause\n 6543        else\n ....\n 6547      elsif cmd =~ /^ka$|^kill\\s?all$|^stop\\s?all$/\n 6548        did_something = false\n 6549:       Script.running.find_all { |s| not s.no_kill_all }.each { |s| s.kill; did_something = true }\n 6550        respond('--- Lich: no scripts to kill') unless did_something\n 6551      elsif cmd =~ /^pa$|^pause\\s?all$/\n 6552        did_something = false\n 6553:       Script.running.find_all { |s| not s.paused? and not s.no_pause_all }.each { |s| s.pause; did_something  = true }\n 6554        respond('--- Lich: no scripts to pause') unless did_something\n 6555      elsif cmd =~ /^ua$|^unpause\\s?all$/\n 6556        did_something = false\n 6557:       Script.running.find_all { |s| s.paused? and not s.no_pause_all }.each { |s| s.unpause; did_something = true }\n 6558        respond('--- Lich: no scripts to unpause') unless did_something\n 6559      elsif cmd =~ /^(k|kill|stop|p|pause|u|unpause)\\s(.+)/\n 6560        action = $1\n 6561        target = $2\n 6562:       script = Script.running.find { |s| s.name == target } || Script.hidden.find { |s| s.name == target } || Script.running.find { |s| s.name =~ /^#{target}/i } || Script.hidden.find { |s| s.name =~ /^#{target}/i }\n 6563        if script.nil?\n 6564:         respond \"--- Lich: #{target} does not appear to be running! Use ';list' or ';listall' to see what's active.\"\n 6565        elsif action =~ /^(?:k|kill|stop)$/\n 6566          script.kill\n ....\n 6573      elsif cmd =~ /^list\\s?(?:all)?$|^l(?:a)?$/i\n 6574        if cmd =~ /a(?:ll)?/i\n 6575:         list = Script.running + Script.hidden\n 6576        else\n 6577:         list = Script.running\n 6578        end\n 6579        if list.empty?\n ....\n 6591      elsif cmd =~ /^send |^s /\n 6592        if cmd.split[1] == \"to\"\n 6593:         script = (Script.running + Script.hidden).find { |scr| scr.name == cmd.split[2].chomp.strip } || script = (Script.running + Script.hidden).find { |scr| scr.name =~ /^#{cmd.split[2].chomp.strip}/i }\n 6594          if script\n 6595            msg = cmd.split[3..-1].join(' ').chomp\n ....\n 6605          script = nil\n 6606        else\n 6607:         if Script.running.empty? and Script.hidden.empty?\n 6608            respond('--- Lich: no active scripts to send to.')\n 6609          else\n ....\n 6650        respond 'built-in commands:'\n 6651        respond \"   #{$clean_lich_char}<script name>             start a script\"\n 6652:       respond \"   #{$clean_lich_char}force <script name>       start a script even if it's already running\"\n 6653        respond \"   #{$clean_lich_char}pause <script name>       pause a script\"\n 6654        respond \"   #{$clean_lich_char}p <script name>           ''\"\n ....\n 6663        respond \"   #{$clean_lich_char}kill                      kill the most recently started script\"\n 6664        respond \"   #{$clean_lich_char}k                         ''\"\n 6665:       respond \"   #{$clean_lich_char}list                      show running scripts (except hidden ones)\"\n 6666        respond \"   #{$clean_lich_char}l                         ''\"\n 6667        respond \"   #{$clean_lich_char}pause all                 pause all scripts\"\n ....\n 6671        respond \"   #{$clean_lich_char}kill all                  kill all scripts\"\n 6672        respond \"   #{$clean_lich_char}ka                        ''\"\n 6673:       respond \"   #{$clean_lich_char}list all                  show all running scripts\"\n 6674        respond \"   #{$clean_lich_char}la                        ''\"\n 6675        respond\n ....\n 6689        respond 'If you liked this help message, you might also enjoy:'\n 6690        respond \"   #{$clean_lich_char}lnet help\"\n 6691:       respond \"   #{$clean_lich_char}magic help     (infomon must be running)\"\n 6692        respond \"   #{$clean_lich_char}go2 help\"\n 6693        respond \"   #{$clean_lich_char}repository help\"\n ....\n 9345      Script.current\n 9346    end\n 9347:   def Script.running\n 9348      list = Array.new\n 9349:     for script in @@running\n 9350        list.push(script) unless script.hidden\n 9351      end\n ....\n 9353    end\n 9354    def Script.index\n 9355:     Script.running\n 9356    end\n 9357    def Script.hidden\n 9358      list = Array.new\n 9359:     for script in @@running\n 9360        list.push(script) if script.hidden\n 9361      end\n ....\n 9549      condemned = Script.list.find { |s_sock| s_sock.name =~ /^#{target_name}/i }\n 9550      if condemned.nil?\n 9551:       respond(\"--- Lich: '#{Script.current}' tried to stop '#{target_name}', but it isn't running!\")\n 9552      else\n 9553        if condemned.name =~ /^#{Script.current.name}$/i\n ....\n 9566  end\n 9567  \n 9568: def running?(*snames)\n 9569:   snames.each { |checking| (return false) unless (Script.running.find { |lscr| lscr.name =~ /^#{checking}$/i } || Script.running.find { |lscr| lscr.name =~ /^#{checking}/i } || Script.hidden.find { |lscr| lscr.name =~ /^#{checking}$/i } || Script.hidden.find { |lscr| lscr.name =~ /^#{checking}/i }) }\n 9570    true\n 9571  end\n ....\n 12088      if test_mode\n 12089        $_SERVER_ = $stdin # fixme\n 12090:       $_CLIENT_.puts \"Running in test mode: host socket set to stdin.\"\n 12091      else\n 12092        Lich.log 'info: connecting to the real game host...'\n .....\n 12407  \n 12408    Lich.log 'info: stopping scripts...'\n 12409:   Script.running.each { |script| script.kill }\n 12410    Script.hidden.each { |script| script.kill }\n 12411:   200.times { sleep 0.1; break if Script.running.empty? and Script.hidden.empty? }\n 12412    Lich.log 'info: saving script settings...'\n 12413    Settings.save\n\nE:\\Google Drive\\Lich\\scripts\\go2.lic:\n   55  \n   56  #if Char.name == 'Kalros'\n   57: #	go2_count = Script.running.find_all { |s| s.name == 'go2' }.length\n   58  #	GSC.do_waytos if go2_count <= 1\n   59  #	before_dying { GSC.delete_rooms_gold_ring if go2_count <= 1 }\n   ..\n  921  		status_tags\n  922  		parent_id = #{Script.self.object_id}\n  923: 		Thread.new { loop { sleep 3; Script.self.kill unless Script.running.any? { |s| s.object_id == parent_id } or Script.hidden.any? { |s| s.object_id == parent_id } } }\n  924  		while (line = get)\n  925  			if line =~ /<compDef id='room players'>Also here:.*? the body of </\n  ...\n 1017  					begin\n 1018  						$go2_started_go2_bank = true\n 1019: 						go2_count = Script.running.find_all { |s| s.name == script.name }.length\n 1020  						force_start_script script.name, [ bank_id.to_s ]\n 1021: 						wait_until { Script.running.find_all { |s| s.name == script.name }.length <= go2_count }\n 1022  					ensure\n 1023  						$go2_started_go2_bank = false\n ....\n 1132  				break if $go2_restart\n 1133  			rescue\n 1134: 				respond \"--- error running mini-script: #{room.id} -> #{next_id}\"\n 1135  				respond $!\n 1136  				exit\n\nE:\\Google Drive\\Lich\\scripts\\grguild.lic:\n   66  unless $rgpassword\n   67  	start_script(\"grgvars\")\n   68: 	wait_while(\"Loading password and custom settings.\"){running? 'grgvars'}\n   69  	echo \"CHECK TO MAKE SURE YOU HAVE grgvars.lic downloaded, MODIFIED FOR YOU (open the damn script) and trusted, then try again.\" unless $rgpassword\n   70  	exit unless $rgpassword\n   ..\n  169  		else\n  170  			start_script(\"go2\",[17833, '_disable_confirm_']) unless Room.current.id == 17833\n  171: 			wait_while{running?(\"go2\")}\n  172  			fput \"go panel\"\n  173  			walk\n  ...\n  177  		if hiding?\n  178  			start_script(\"go2\",['typeahead=0', room, '_disable_confirm_'])\n  179: 			wait_while{running?(\"go2\")}\n  180  		else\n  181  			start_script(\"go2\",[room, '_disable_confirm_'])\n  182: 			wait_while{running?(\"go2\")}\n  183  		end\n  184  	else\n  ...\n  813  				$rg_en_shortcut = {	'backroom' => 188, 'goroom' => 3519}\n  814  				start_script('go2', ['shortcut=on'])\n  815: 				wait_while{running?('go2')}\n  816  			elsif $guildname =~ /Ta'Vaalor/\n  817  				$rg_en_shortcut = {	'backroom' => 3519, 'goroom' => 188}\n  818  				start_script('go2', ['shortcut=on'])\n  819: 				wait_while{running?('go2')}\n  820  				mymove $rgexit[0]\n  821  				fput \"go chute\"\n  ...\n 1036  		mymove $rgfootpads\n 1037  		fput \"stance off\" unless percentstance <= 20\n 1038: 		pause_script \"stand\" if running? 'stand'\n 1039  		x = false\n 1040  		until x\n ....\n 1885  	end\n 1886  	respond \"UNFORTUNATELY, I have set $do_lfm to false at this point.\"\n 1887: 	respond \"You can reset that manually with ;e $do_lfm = true or by rerunning grgvars\"\n 1888  	respond \"NO LOGIC WITHIN grguild FOR THIS TASK.\"\n 1889  	$do_lfm = false\n ....\n 2065  		mymove $rgfootpads\n 2066  		fput \"stance off\" unless percentstance <= 20\n 2067: 		pause_script \"stand\" if running? 'stand'\n 2068  		x = false\n 2069  		until x\n ....\n 2085  		mymove $rgfootpads\n 2086  		fput \"stance off\" unless percentstance <= 20\n 2087: 		pause_script \"stand\" if running? 'stand'\n 2088  		x = false\n 2089  		until x\n ....\n 2127  		mymove $rgfootpads\n 2128  		fput \"stance off\" unless percentstance <= 20\n 2129: 		pause_script \"stand\" if running? 'stand'\n 2130  		x = false\n 2131  		until x\n ....\n 2894  	respond ''\n 2895  	respond \"   Set any of them to false to ignore that skill\"\n 2896: 	respond \"   This can be done a number of ways, best being physically modifying the grgvars.lic script SAVING and RUNNING it.\"\n 2897  	respond \"   It is normal for it to start and immediately exit.\"\n 2898  	respond \"   You can also have any trusted script set/change those variables for you, or do it with a command line script.\"\n\nE:\\Google Drive\\Lich\\scripts\\grgvars.lic:\n   37  # Set any of the following to false to stop it from attempting tasks in that skill.\n   38  # If a promotion is available, and you must diversify, the script will set that skill to false.\n   39: # That setting will remain until the next running of grgvars.lic.\n   40  \n   41  ################################\n\nE:\\Google Drive\\Lich\\scripts\\haz_sbounty.lic:\n  748      end\n  749  \n  750:     wait_while { running? 'go2' }\n  751      start_script('go2', [ room.to_s, '_disable_confirm_' ]);\n  752:     wait_while { running? 'go2' }\n  753  }\n  754  \n  ...\n  793  \n  794          start_script(script, args, true)\n  795:         wait_while { running? script }\n  796      }\n  797  }\n  798  \n  799  run_loot_script = proc {\n  800:     wait_while { running? CharSettings[:loot_script] }\n  801      start_script(CharSettings[:loot_script], [], true)\n  802:     wait_while { running? CharSettings[:loot_script] }\n  803  }\n  804  \n  ...\n  844  \n  845  finish_hunt = proc {\n  846:     if running? $SBOUNTY_HUNTER_NAME\n  847          stop_script($SBOUNTY_HUNTER_NAME)\n  848:         wait_while { running? $SBOUNTY_HUNTER_NAME }\n  849      end\n  850  \n  851      fput 'stance defensive' until checkstance('defensive') or checkstance('guarded')\n  852  \n  853:     # pause to make sure looter isn't running\n  854:     wait_while { running? CharSettings[:loot_script] }\n  855  \n  856      # run loot script in case the hunter wasn't able to clean up\n  ...\n  865      rest_exit.call\n  866  \n  867:     kill_script 'go2' if running? 'go2'\n  868  \n  869      go2_nearest_tag.call('advguild')\n  ...\n 1217  				start_script(attack_script)\n 1218  				#start_script(attack_script, npcs.collect { |n| n.id }, h={:quiet=>true})\n 1219: 				wait_while { running?(attack_script) }\n 1220  			end\n 1221  \n ....\n 1477  \n 1478  start_script(hunter, nil, true)\n 1479: wait_while { running? hunter }\n 1480  \n 1481  if not defined? $SBOUNTY_HUNTER_SETUP\n ....\n 1487  end\n 1488  \n 1489: before_dying { kill_script $SBOUNTY_HUNTER_NAME if running? $SBOUNTY_HUNTER_NAME }\n 1490  \n 1491  while true\n ....\n 1544              end\n 1545  \n 1546:             while not should_rest.call and running? $SBOUNTY_HUNTER_NAME\n 1547                  if bounty? =~ /#{bounty_patterns['task_provoked']}/ and not provoked\n 1548                      reload_hunter.call\n\nE:\\Google Drive\\Lich\\scripts\\haz_sloot.lic:\n   99      next if Room.current.id.to_s == room.to_s\n  100  \n  101:     wait_while{ running?('go2') }\n  102      start_script('go2', [ room.to_s, '_disable_confirm_' ]);\n  103:     wait_while{ running?('go2') }\n  104  }\n  105  \n\nE:\\Google Drive\\Lich\\scripts\\herbheal.lic:\n  151  	if !$herbcache.include?(Room.current.id) and $bench_flag == true\n  152  		start_script 'go2', [ find_nearest($herbcache).to_s, '_disable_confirm_' ]\n  153: 		wait_while{running?('go2')}\n  154  	end\n  155  	\n  ...\n  165  	if $bench_flag == true\n  166  		start_script 'useherb' , [ $herb_container ]\n  167: 		wait_while{running?('useherb')}\n  168  	end\n  169  	if [Wounds.head, Wounds.neck, Wounds.torso, Wounds.limbs, Wounds.nerves, Scars.head, Scars.neck, Scars.torso, Scars.limbs, Scars.nerves].max > 0 or ((checkhealth + 7) < maxhealth)\n  170  		start_script 'useherb'\n  171: 		wait_while{running?('useherb')}\n  172  	end\n  173  	if [Wounds.head, Wounds.neck, Wounds.torso, Wounds.limbs, Wounds.nerves, Scars.head, Scars.neck, Scars.torso, Scars.limbs, Scars.nerves].max > 0 or ((checkhealth + 7) < maxhealth)\n  ...\n  344  	if $bank !~ Room.current.id\n  345  		start_script 'go2', [ find_nearest($banks).to_s, '_disable_confirm_' ]\n  346: 		wait_while{running?('go2')}\n  347  	end\n  348  	if Room.current.id == '2782' and GameObj.npcs.find { |npc| npc.name !~ /Hurshal/} and !bleeding?\n  ...\n  380  	end\n  381  	start_script 'go2', [ find_nearest($herbalist).to_s, '_disable_confirm_' ]\n  382: 	wait_while{running?('go2')}\n  383  end\n  384  \n  ...\n  402  	blood\n  403  	start_script 'useherb'\n  404: 	wait_while{running?('useherb')}\n  405  	end\n  406  	\n  ...\n  410  		if $went_to_bank == true\n  411  			start_script 'go2', [ find_nearest($banks).to_s, '_disable_confirm_' ]\n  412: 			wait_while{running?('go2')}\n  413  			fput \"depo all\"\n  414  		end\n  415  		if $bench_flag == true\n  416  			start_script 'go2', [ find_nearest($herbcache).to_s, '_disable_confirm_' ]\n  417: 			wait_while{running?('go2')}\n  418  		end\n  419  		\n\nE:\\Google Drive\\Lich\\scripts\\infomon.lic:\n  252  action = proc { |client_string|\n  253  	if client_string =~ /^(?:<c>)?#{$lich_char}((?:magic|banks).*)/i\n  254: 		if scr = (Script.running + Script.hidden).find { |val| val.name == 'infomon' }\n  255  			scr.downstream_buffer.shove(\"#{$clean_lich_char}#{$1}\")\n  256  		else\n\nE:\\Google Drive\\Lich\\scripts\\iron.lic:\n   12  begin:\n   13  start_script('go2', [ \"7998\", '_disable_confirm_' ]);\n   14: wait_while{ running?('go2') }\n   15   waitrt?\n   16  \n   ..\n  559  home:\n  560  start_script('go2', [ \"forge\", '_disable_confirm_' ]);\n  561: wait_while{ running?('go2') }\n  562  exit\n  563  \n\nE:\\Google Drive\\Lich\\scripts\\killcounter.lic:\n   17  	GameObj.load_data if GameObj.type_data.empty? or GameObj.type_data.nil?\n   18  	if GameObj.type_data.nil?\n   19: 		wait_while { running?('updater') }\n   20: 		wait_while { running?('repository') }\n   21  		start_script 'repository', [ 'download', 'gameobj-data.xml' ]\n   22: 		wait_while { running?('repository') }\n   23: 		wait_while { running?('updater') }\n   24  		start_script 'updater', [ 'add', 'gameobj-data.xml' ]\n   25: 		wait_while { running?('updater') }\n   26  		GameObj.load_data\n   27  		exit if GameObj.type_data.nil?\n\nE:\\Google Drive\\Lich\\scripts\\last_rest.lic:\n    8  \n    9  start_script 'go2', [ '5716' ]\n   10: wait_while { running?('go2') }\n   11  \n   12  dothistimeout 'go elyina table', 5, /^Elyina/\n   ..\n   16  \n   17  start_script 'save_boxes'\n   18: wait_while { running?('save_boxes') }\n   19  \n   20  start_script 'waggle'\n   21: wait_while { running?('waggle') }\n   22  \n   23  dothistimeout 'out', 5, /^Obvious/\n   24  \n   25  start_script 'go2', [ '1572' ]\n   26: wait_while { running?('go2') }\n   27  \n   28  \n\nE:\\Google Drive\\Lich\\scripts\\level1.lic:\n   75  \n   76  	start_script(\"go2\", [ \"#{room}\", '_disable_confirm_' ]);\n   77: 	wait_while{running?(\"go2\")}\n   78  end\n   79  \n\nE:\\Google Drive\\Lich\\scripts\\lnet.lic:\n 1116  			cmd, extra = $1, $2\n 1117  			cmd = 'chat ' if cmd == ','\n 1118: 			if s = (Script.running + Script.hidden).find { |val| val.name == script_name }\n 1119  				s.unique_buffer.push(\"#{cmd}#{extra}\")\n 1120  				nil\n 1121  			else\n 1122: 				respond '--- Lich: lnet is not running'\n 1123  				UpstreamHook.remove(script_name)\n 1124  				nil\n ....\n 1126  		elsif client_string =~ /^(?:<c>)?#{$lich_char}([A-z]+):(.*)/\n 1127  			name, message = $1, $2\n 1128: 			if s = (Script.running + Script.hidden).find { |val| val.name == script_name }\n 1129  				s.unique_buffer.push(\"chat ::#{name} #{message}\")\n 1130  				nil\n 1131  			else\n 1132: 				respond '--- Lich: lnet is not running'\n 1133  				UpstreamHook.remove(script_name)\n 1134  				nil\n ....\n 1136  		elsif client_string =~ /^(?:<c>)?#{$lich_char}#{script_name}(.*)/\n 1137  			cmd = $1\n 1138: 			if s = (Script.running + Script.hidden).find { |val| val.name == script_name }\n 1139  				s.unique_buffer.push(cmd)\n 1140  				nil\n\nE:\\Google Drive\\Lich\\scripts\\locksmith.lic:\n   12  def get_money\n   13  start_script 'go2', [ 'bank' ]\n   14: wait_while{running?( 'go2' )}\n   15  fput \"withdraw 8000 silvers\"\n   16  end\n   ..\n   18  def find_locksmith\n   19  start_script 'go2', [ 'locksmith']\n   20: wait_while{running?('go2')}\n   21  end\n   22  \n   ..\n  121  		echo \"Lootsack: #{$contents}\"\n  122  		$container = \"my #{Lich.lootsack}\"\n  123: 		wait_while{running?( 'herbheal' )}\n  124: 		wait_while{running?( 'go2' )}\n  125  		get_money\n  126  		find_locksmith\n  ...\n  129  		box_pick\n  130  		start_script \"go2\", [ 'bank' ]\n  131: 		wait_while{running?( 'go2')}\n  132  		fput \"depo all\"\n  133  		start_script 'go2', [ 'town' ]\n\nE:\\Google Drive\\Lich\\scripts\\login.lic:\n    7  	list/add/modify/delete commands are available to modify the entry.dat from within the script.\n    8  	\n    9: 	You have the option of running a script(s) at startup.\n   10  	\n   11  	Please see ;login help for additional informaiton.\n\nE:\\Google Drive\\Lich\\scripts\\loot-be-gone.lic:\n 1446  				echo \"inside second elsif\" if $loot_be_gone_debug\n 1447  				force_start_script 'go2', [ '16961' ] if Char.name == 'Kalros'\n 1448: 				wait_while { running?('go2') }\n 1449  				dothistimeout \"turn #{$fwiTP}\", 10, /Obvious/\n 1450  				current_location = 'Four Winds'	\n\nE:\\Google Drive\\Lich\\scripts\\loresing_test:\n    3  	fput \"get #{i.id}\"\n    4  	start_script 'loresing', [ \"ability #{i.name}\" ] \n    5: 	wait_while {running?('loresing')}\n    6  	fput \"put #{i.id} in backpack\"\n    7  }\n\nE:\\Google Drive\\Lich\\scripts\\loresing_test.lic:\n    3  	fput \"get ##{i.id}\"\n    4  	start_script 'loresing', [ \"ability ##{i.name}\" ] \n    5: 	wait_while {running?('loresing')}\n    6  	fput \"put ##{i.id} in backpack\"\n    7  }\n\nE:\\Google Drive\\Lich\\scripts\\mapmap.lic:\n  154  					redo_move = true\n  155  					break\n  156: 				elsif line =~ /^Running heedlessly/\n  157  					waitrt?\n  158  					fput 'stand' unless standing?\n  ...\n  603  			end\n  604  			start_script 'go2', [ next_room.to_s, '--disable-confirm', '--typeahead=0' ]\n  605: 			wait_while { running? 'go2' }\n  606  		else\n  607  			unless map_pending.keys.include?(room.id.to_s)\n  ...\n  758  			end\n  759  			start_script 'go2', [ next_room.to_s, '--disable-confirm', '--typeahead=0' ]\n  760: 			wait_while { running? 'go2' }\n  761  		else\n  762  			unless fix_pending.keys.include?(room.id.to_s)\n\nE:\\Google Drive\\Lich\\scripts\\monitor.lic:\n   45  4. Update exception patterns as needed if things are popping that should not be.\n   46  \n   47: 5. Review line 352, it contains a break if !running certain scripts. Uncomment if you want.\n   48  \n   49  =end\n   ..\n  223  ignore_misc = [\n  224  	'^You (attach|add|forage|pick|put|push|remove|tap|gather|swap|open|carefully|grab|tuck|drop|climb|close|settle|reach|rummage|slip|give|toss|take|seize)',\n  225: 	'^Running your fingers',\n  226  	'^With a quick flick of',\n  227  	'^As you place',\n  ...\n  372  	\n  373  	## UNCOMMENT THIS LINE IF YOU WANT\n  374: 	#break unless running?('sbounty') or running?('grguild') or running?('bigshot') or $monitor_debug == true   ## Scripts that need to be running for monitor to stay running.\n  375  	\n  376  	## Always send emails if a prior script pattern is triggered.\n\nE:\\Google Drive\\Lich\\scripts\\monitor_lines.lic:\n    4  Thread.new { \n    5    while true \n    6:     wait_until{(not Spell[9049].active? and not Spell[9812].active? and not dead? and running?('bigshot')) and percenthealth <= 80 and (!standing? or stunned? or webbed?) and ((GameObj.npcs.any? { |npc| npc.type !~ /passive/ and npc.status !~ /dead/ }) or (GameObj.loot.each { |i| i.noun =~ /cloud/}))} \n    7:     pause_script 'bigshot' if running? 'bigshot'\n    8      dothistimeout \"sym trans confirm\", 3, /space between the corporeal|^You have already|^You strain/ \n    9:     unpause_script 'bigshot' if running? 'bigshot'\n   10    end \n   11  }\n\nE:\\Google Drive\\Lich\\scripts\\monitor_old.lic:\n  142  ignore_misc = [\n  143  	'^You (attach|add|forage|pick|put|push|remove|tap|gather|swap|open|carefully|grab|tuck|drop|climb|close|settle|reach|rummage|slip|give|toss|take|seize)',\n  144: 	'^Running your fingers',\n  145  	'^With a quick flick of',\n  146  	'^As you place',\n  ...\n  240  status_tags\n  241  while line = get\n  242: 	break unless running?('sbounty') or running?('grguild') or running?('bigshot') or $monitor_debug == true\n  243  \n  244  	## Always send emails if a prior script pattern is triggered.\n\nE:\\Google Drive\\Lich\\scripts\\monitor_skip.lic:\n    1  ####quiet\n    2  =begin\n    3: This script controls the line skipping function of monitor.  This must be running with monitor.lic.\n    4  \n    5  v.01 by Kalros\n    .\n   23  ## Main loop\n   24  while(line = get)\n   25:   	break unless running?('monitor')\n   26     	if line =~ ignore_start_lines_30wait\n   27     		echo \"Bypassing - 30 Wait: #{$1}\" if $monitor_debug\n\nE:\\Google Drive\\Lich\\scripts\\new_scriptcheck.lic:\n   39  \n   40  ## ** These are going to be specific to the creature/areas.  Some will pop the line when not needed.\n   41: always_ignore_strings = /#{ignore_magic_lines}|^[A|An] \\w+ centaur ranger (snorts|notices)|^A sleek red squirrel hops nervously|^A rat skitters accross the ground near your feet|^You hear the booming|^You (pick|put|remove|tap|gather|swap|open|carefully)|^Running your fingers|^Mana:|^With a quick flick of|^A crier hurries|^He continues, \"Those citizens holding|^A jungle troll chieftain shouts, \"Ird t'sum|^ With a satisfied rumble, it stalks off|^A fire giant shouts out|^A wave of dark ethereal|^You are buffeted by the dark|^As you place|^You have earned the following|^You hear the voice of the clerk|^A raggedly-dressed lass lopes by|^\"Everybody is always in a hurry these|^The aardvark (surveys|narrows)|^A nearby shadow seems to shift, revealing|^A robed human priestess says|^A wailing and screaming|^A (carceris|nonomino|frenzied monk) waves a (decaying|rotting|spectral) hand|^Your body begins to respond|^Suddenly a loud *THUMP^|^You continue to feel much more aware|^The spirit whispers with a sinister voice/\n   42  \n   43  ## *** These lines ignore whole blocks.  The first is combat, more lines likely needed here.\n\nE:\\Google Drive\\Lich\\scripts\\non_global_bigshot.lic:\n  163      start_script \"#{script}\" if var1 =~ /xx/\n  164      sleep 1\n  165:     wait_while { running?(\"#{script}\")}\n  166      waitrt?\n  167      sleep 1\n  ...\n  202  $exec_ambush = true\n  203    while(line = get)\n  204:     break unless running?($current_script_name)\n  205      $ambusher_here = true if line =~ /^\\\\w+ leaps from hiding to attack|^\\\\w+ is revealed/\n  206    end\n  ...\n  387              @HUNTING_SCRIPTS.each { |i|\n  388                  echo \"Cleaning up hunting scripts: #{i}.\"\n  389:                 stop_script(i) if running?(i)\n  390              }\n  391          }\n  ...\n  818          if @DEAD_MAN_SWITCH\n  819              Thread.new {\n  820:                 while( running?($current_script_name) )\n  821                      if( dead? ||  percenthealth < 40 )\n  822                          echo 'AUTOBOT ALERT: Your character is in trouble!'\n  ...\n  828          elsif @DEPART_SWITCH\n  829              start_exec_script( <<-EOF\n  830:                 while( running?($current_script_name) );\n  831                      if(dead?);\n  832                          stop_script($current_script_name);\n  ...\n  835                          start_script('waggle');\n  836                          15.times { sleep 60; fput info; };\n  837:                         sleep 1 until percentspirit == 100 && !running?('waggle');\n  838                          start_script( \"#{$current_script_name}\", ['solo'] );\n  839                          Script.self.kill;\n  ...\n  852      def keep_awake()\n  853          Thread.new {\n  854:             while( running?($current_script_name) )\n  855                  sleep 150; put 'look';\n  856              end\n  ...\n  873                  end;\n  874                  while(line = get);\n  875:                     break unless running?($current_script_name);\n  876                      if(line =~ /SEND|POLICY|[Rr](\\s)*[Ee](\\s)*[Pp](\\s)*[Oo](\\s)*[Rr](\\s)*[Tt]|peaking to you|unresponsive|taps you|nods to you|lease respond|not in control|character|violation|lease speak|peak out loud|Y U SHOU D|whispers,|speaking to you|smiles at you|waves to you|grins at you|hugs you|takes hold your hand|grabs your hand|clasps your hand|trying to drag you/);\n  877                          unless(line =~ /LNet/);\n  ...\n  924              $stop_wait = true if line =~ /#{$global_target}.*#{$pcs}/ and line !~ /style id=\"\".*style id=\"roomDesc\"|(?:component|compDef) id='room objs'/\n  925              break if $stop_wait\n  926:             break if !running?($current_script_name)\n  927          end\n  928          status_tags\n  ...\n  953   \n  954      def run_script( name, pause_bigshot = false, args = [] )\n  955:         if Script.running.find { |s| s.name.downcase == name.downcase }.paused or running? name\n  956              stop_script name\n  957:             wait_while { running? name }\n  958          end\n  959   \n  960          start_script name, args\n  961          if pause_bigshot\n  962:             wait_until { !running? name }\n  963          end\n  964      end\n  ...\n  976   \n  977      def croak_script(name)\n  978:         kill_script(name) if running?(name)\n  979      end\n  980   \n  ...\n 1220      def display_watch_total()\n 1221          total = Time.now.to_i - @BIRTH_TIME\n 1222:         message( sprintf( \"Bigshot: Total Time Running: %d min.  %0.2f secs.\",\n 1223              total / 60, total % 60 ) )\n 1224      end\n ....\n 1379              return false\n 1380          end\n 1381:         if( @RESTING_SCRIPTS.any? { |i| running?(i) } )\n 1382:             $not_hunting_reason = 'resting scripts still running.'\n 1383              return false\n 1384          end\n ....\n 1921              until( checkpcs.include?(leader) )\n 1922                  start_script( 'go2', [ group.room_id, '_disable_confirm_' ] )\n 1923:                 wait_while { running?('go2') }\n 1924                  fput \"join #{leader}\"\n 1925                  sleep 1\n ....\n 1975              if( bs.RESTING_ROOM_ID && bs.RESTING_ROOM_ID != 4 )\n 1976                  start_script( 'go2', [ bs.RESTING_ROOM_ID, '_disable_confirm_' ] )\n 1977:                 wait_while { running?('go2') }\n 1978              end\n 1979              echo \"Fatal exception!\"\n\nE:\\Google Drive\\Lich\\scripts\\repository.lic:\n 1817  				echo \"password saved for author #{author}\"\n 1818  			end\n 1819: 			echo 'success;  running download-mapdb now...'\n 1820  			download_mapdb.call\n 1821  			Map.reload unless mapdb_reloaded # mapdb on disk may have been updated by another character, leaving the in memory mapdb on this character out of date\n\nE:\\Google Drive\\Lich\\scripts\\ring_test2.lic:\n   76  #if Char.name == 'Kalros'\n   77    #start_script('ring_test2')\n   78:   #wait_while { running?('ring_test2')}\n   79    #before_dying { \n   80:   #go2_count = Script.running.find_all { |s| s.name == 'go2' }.length\n   81   # start_script 'ring_test2', ['delete'] if go2_count <= 1 }\n   82  #end\n\nE:\\Google Drive\\Lich\\scripts\\rogue.lic:\n    4  	In order to automate sweep, gambit and cheap shot partner reps you and your partner must have both this script and the \"task\" script.\n    5  \n    6: 	Must do ;rogue setup and fill out the settings before running this script.\n    7  \n    8  	Type ;rogue for usage.\n    .\n   17  	Type ;rogue cal to calibrate your calipers.\n   18  	Type ;rogue wedge <number> to create specified number of wedges.\n   19: 	Note: do not type GLD while script is running, it could make the script stop working.\n   20  \n   21: 	Remember afk scripting is a no no in prime/platnium so pay attention to your game screen while running this script.\n   22  	Kill this script if going afk.\n   23  \n   ..\n  203  \n  204  		label = Gtk::Label.new\n  205: 		label.set_markup(\"Fill these settings out if you are running with a dedicated partner who is also running the <b>rogue</b> and <b>task</b> scripts and is going to help you automate through partner tasks.\\nEnter <b>nil</b> for each setting if you are not running with such a partner or if you don't want to use a particular setting.\\n<b>Partner room number:</b>  Room number where you and your partner will meet to do partner tasks.\\n<b>Lich message partner:</b>  Enter <b>yes</b> to send a lnet message to your partner when you need them for a partner task.\\nThe lnet message is just to inform your partner when you need their help in the room you specified for partner tasks, it does not make your partner move or run any scripts even if they are currently running <b>rogue</b> and <b>task</b>.\")\n  206  		align = Gtk::Alignment.new(1, 0, 0, 0)\n  207  		align.set_padding(50, 0, 0, 40)\n  ...\n  342  	target_room = Room.current.find_nearest(training_administrator_room)\n  343  	start_script 'go2', [ target_room.to_s ]\n  344: 	wait_while{ running?('go2') }\n  345  	GameObj.npcs.find { |npc| person = npc if npc.name =~ training_administrator_names }\n  346  	multifput \"ask #{person} about train #{script.vars[1]}\", \"ask #{person} about train #{script.vars[1]}\"\n  ...\n  353  		target_room = Room.current.find_nearest(guild_master_room_number)\n  354  		start_script 'go2', [ target_room.to_s ]\n  355: 		wait_while{ running?('go2') }\n  356  		GameObj.npcs.find { |npc| person = npc if npc.name =~ guild_master_names }\n  357  		fput \"ask #{person} about next #{script.vars[1]}\"\n  358  		target_room = Room.current.find_nearest(training_administrator_room)\n  359  		start_script 'go2', [ target_room.to_s ]\n  360: 		wait_while{ running?('go2') }\n  361  		GameObj.npcs.find { |npc| person = npc if npc.name =~ training_administrator_names }\n  362  		fput \"ask #{person} about train #{script.vars[1]}\"\n  ...\n  406  	else\n  407  		start_script 'go2', [ Room.current.find_nearest(critter_task_rooms.collect { |id| id.to_i }).to_s ]\n  408: 		wait_while { running?('go2') }\n  409  			my_room = nil\n  410  			critter_target = nil\n  ...\n  425  			move 'out' if checkpaths 'out'\n  426  			start_script \"go2\", [partner_room_number]\n  427: 			wait_while{ running?('go2') }\n  428  		end\n  429  	end\n  ...\n  516  	target_room = Room.current.find_nearest(guild_master_room_number)\n  517  	start_script 'go2', [ target_room.to_s ]\n  518: 	wait_while{ running?('go2') }\n  519  	GameObj.npcs.find { |npc| person = npc if npc.name =~ guild_master_names }\n  520  	fput \"ask #{person} about checkin\"\n  ...\n  578  		currentroom = Room.current.id\n  579  		start_script 'go2', [ 'bank', '--disable-confirm' ]\n  580: 		wait_while{ running?('go2') }\n  581  		fput \"withdraw 2 silvers\"\n  582  		start_script \"go2\", [ \"#{currentroom}\" ]\n  583: 		wait_while{ running?('go2') }\n  584  		gam_teach_help_start1.call\n  585  	elsif result =~ /Wait a few seconds and try again/i\n  ...\n  838  			target_room = Room.current.find_nearest(training_master_room_number)\n  839  			start_script 'go2', [ target_room.to_s ]\n  840: 			wait_while{ running?('go2') }\n  841  			GameObj.npcs.find { |npc| master = npc if npc.name =~ master_names }\n  842  			sweep_master_begin.call\n  ...\n  887  			target_room = Room.current.find_nearest(sweeping_dummies_room_number)\n  888  			start_script 'go2', [ target_room.to_s ]\n  889: 			wait_while{ running?('go2') }\n  890  			fput \"go dummies\"\n  891  			sweep_dummy_start.call\n  ...\n  926  			target_room = Room.current.find_nearest(tool_rack_room_number)\n  927  			start_script 'go2', [ target_room.to_s ]\n  928: 			wait_while{ running?('go2') }\n  929  			if Room.current.id == 17969\n  930  				dirt_rooms = icedirt_rooms\n  ...\n  936  				dirt_rooms = illistim_dirt_rooms\n  937  			else\n  938: 				echo \"Error! Stuck in sweep_dirt, try running script again and please inform author of this error.\"\n  939  			end\n  940  			fput \"put my broom on rack\" if checkright =~ /broom/i || checkleft =~ /broom/i\n  ...\n  953  	else\n  954  		start_script \"go2\", [dirt_rooms.at(number)]\n  955: 		wait_while{ running?('go2') }\n  956  		number += 1\n  957  		sweep_dirt_sweep.call\n  ...\n  989  	target_room = Room.current.find_nearest(tool_rack_room_number)\n  990  	start_script 'go2', [ target_room.to_s ]\n  991: 	wait_while{ running?('go2') }\n  992  	waitrt?\n  993  	result = dothistimeout \"put my bag in bin\", 3, /You have completed|Your burlap bag isn't full yet.|repetition/i\n  ...\n  995  		target_room = Room.current.find_nearest(tool_rack_room_number)\n  996  		start_script 'go2', [ target_room.to_s ]\n  997: 		wait_while{ running?('go2') }\n  998  		multifput \"put my broom on rack\", \"put my bag on rack\"\n  999  		turnin.call\n ....\n 1018  				target_room = Room.current.find_nearest(training_administrator_room)\n 1019  				start_script 'go2', [ target_room.to_s ]\n 1020: 				wait_while{ running?('go2') }\n 1021  				GameObj.npcs.find { |npc| person = npc if npc.name =~ training_administrator_names }\n 1022  				multifput \"ask #{person} about trade sweep\", \"ask #{person} about train sweep\"\n ....\n 1063  			target_room = Room.current.find_nearest(kitchen_room_number)\n 1064  			start_script 'go2', [ target_room.to_s ]\n 1065: 			wait_while{ running?('go2') }\n 1066  			move 'go kitchen'\n 1067  			get_garlic.call\n ....\n 1108  			target_room = Room.current.find_nearest(mannequin_room_number)\n 1109  			start_script 'go2', [ target_room.to_s ]\n 1110: 			wait_while{ running?('go2') }\n 1111  			move 'go mannequin'\n 1112  			mannequins_subdue.call\n ....\n 1147  			target_room = Room.current.find_nearest(tool_rack_room_number)\n 1148  			start_script 'go2', [ target_room.to_s ]\n 1149: 			wait_while{ running?('go2') }\n 1150  			my_room = Room.current.id\n 1151  			if Room.current.id == 17969\n ....\n 1158  				current_window_rooms = illistimwindow_rooms\n 1159  			else\n 1160: 				echo \"Error! Stuck in sweep_dirt, try running script again and please inform author of this error.\"\n 1161  			end\n 1162  			fput \"put my rag on rack\" if checkright =~ /rag/i or checkleft =~ /rag/i\n ....\n 1175  		target_room = Room.current.find_nearest(tool_rack_room_number)\n 1176  		start_script 'go2', [ target_room.to_s ]\n 1177: 		wait_while{ running?('go2') }\n 1178  		multifput \"put my rag on rack\", \"get my #{mainweapon}\", \"get my #{shield}\"\n 1179  		fput \"remove my #{shield}\" if checkleft == nil\n 1180  		fput \"stance def\"\n 1181  		start_script 'go2', [my_room]\n 1182: 		wait_while{ running?('go2') }\n 1183  		turnin.call\n 1184  	elsif result =~ /repetition|let someone else have a crack at it/i\n ....\n 1194  			target_room = Room.current.find_nearest(tool_rack_room_number)\n 1195  			start_script 'go2', [ target_room.to_s ]\n 1196: 			wait_while{ running?('go2') }\n 1197  			multifput \"put my rag on rack\", \"get my #{mainweapon}\", \"get my #{shield}\" \n 1198  			fput \"remove my #{shield}\" if checkleft == nil\n ....\n 1206  			end\n 1207  			start_script \"go2\", [go_to_room]\n 1208: 			wait_while{ running?('go2') }\n 1209  			number = 0\n 1210  			target_room = Room.current.find_nearest(tool_rack_room_number)\n 1211  			start_script 'go2', [ target_room.to_s ]\n 1212: 			wait_while{ running?('go2') }\n 1213  			if Room.current.id == 17969\n 1214  				current_window_rooms = icewindow_rooms\n ....\n 1220  				current_window_rooms = illistimwindow_rooms\n 1221  			else\n 1222: 				echo \"Error! Stuck in sweep_dirt, try running script again and please inform author of this error.\"\n 1223  			end\n 1224  			fput \"put my rag on rack\" if checkright =~ /rag/i or checkleft =~ /rag/i\n ....\n 1230  			target_room = Room.current.find_nearest(tool_rack_room_number)\n 1231  			start_script 'go2', [ target_room.to_s ]\n 1232: 			wait_while{ running?('go2') }\n 1233  			multifput \"put my rag on rack\", \"get my #{mainweapon}\", \"get my #{shield}\" \n 1234  			fput \"remove my #{shield}\" if checkleft == nil\n 1235  			fput \"stance def\"\n 1236  			start_script 'go2', [my_room]\n 1237: 			wait_while{ running?('go2') }\n 1238  			respond \"Couldn't finish task, try starting script again in 20 minutes.\"\n 1239  			exit\n ....\n 1241  	else\n 1242  		start_script \"go2\", [current_window_rooms.at(number)]\n 1243: 		wait_while{ running?('go2') }\n 1244  		number += 1\n 1245  		windows_clean.call\n ....\n 1315  			numberoflockpicks = Integer(numberoflockpicks)\n 1316  			start_script 'go2', [ 'bank', '--disable-confirm' ]\n 1317: 			wait_while{ running?('go2') }\n 1318  			multifput \"depo all\", \"withdraw 5000 silvers\"\n 1319  			target_room = Room.current.find_nearest(toolbenches_room_number)\n 1320  			start_script 'go2', [ target_room.to_s ]\n 1321: 			wait_while{ running?('go2') }\n 1322  			fput \"go tool\"\n 1323  			customize_create.call\n ....\n 1356  	numberoflockpicks = Integer(numberoflockpicks)\n 1357  	start_script 'go2', [ 'bank', '--disable-confirm' ]\n 1358: 	wait_while{ running?('go2') }\n 1359  	multifput \"depo all\", \"withdraw 5000 silvers\"\n 1360  	target_room = Room.current.find_nearest(toolbenches_room_number)\n 1361  	start_script 'go2', [ target_room.to_s ]\n 1362: 	wait_while{ running?('go2') }\n 1363  	fput \"go tool\"\n 1364  	customize_footpad_create.call\n ....\n 1387  		target_room = Room.current.find_nearest(training_master_room_number)\n 1388  		start_script 'go2', [ target_room.to_s ]\n 1389: 		wait_while{ running?('go2') }\n 1390  		GameObj.npcs.find { |npc| master = npc if npc.name =~ master_names }\n 1391  		customize_footpad_hand_in1.call\n ....\n 1429  			target_room = Room.current.find_nearest(training_master_room_number)\n 1430  			start_script 'go2', [ target_room.to_s ]\n 1431: 			wait_while{ running?('go2') }\n 1432  			lmas_footpad_challenge1.call\n 1433  			break\n ....\n 1505  	target_room = Room.current.find_nearest(toolbenches_room_number)\n 1506  	start_script 'go2', [ target_room.to_s ]\n 1507: 	wait_while{ running?('go2') }\n 1508  	fput \"go toolbench\"\n 1509  	waitfor \"workshop instructions\"\n ....\n 1536  	stow.call\n 1537  	start_script 'go2', [ 'bank', '--disable-confirm' ]\n 1538: 	wait_while{ running?('go2') }\n 1539  	multifput \"depo all\", \"withdraw #{silvers_needed} silvers\"\n 1540  	target_room = Room.current.find_nearest(toolbenches_room_number)\n 1541  	start_script 'go2', [ target_room.to_s ]\n 1542: 	wait_while{ running?('go2') }\n 1543  	fput \"go toolbench\"\n 1544  	waitfor \"workshop instructions\"\n ....\n 1604  	echo \"Making #{numberoflockpicks} lockpicks\"\n 1605  	start_script 'go2', [ 'bank', '--disable-confirm' ]\n 1606: 	wait_while{ running?('go2') }\n 1607  	multifput \"depo all\", \"withdraw 5000 silvers\"\n 1608  	target_room = Room.current.find_nearest(toolbenches_room_number)\n 1609  	start_script 'go2', [ target_room.to_s ]\n 1610: 	wait_while{ running?('go2') }\n 1611  	fput \"go tool\"\n 1612  	lock_pick_create.call\n ....\n 1632  		target_room = Room.current.find_nearest(training_master_room_number)\n 1633  		start_script 'go2', [ target_room.to_s ]\n 1634: 		wait_while{ running?('go2') }\n 1635  		GameObj.npcs.find { |npc| master = npc if npc.name =~ master_names }\n 1636  		lockpick_handin.call\n ....\n 1647  		target_room = Room.current.find_nearest(training_administrator_room)\n 1648  		start_script 'go2', [ target_room.to_s ]\n 1649: 		wait_while{ running?('go2') }\n 1650  		GameObj.npcs.find { |npc| person = npc if npc.name =~ training_administrator_names }\n 1651  		multifput \"ask #{training_administrator_names} about train lock\", \"ask #{training_administrator_names} about train lock\"\n ....\n 1822  			target_room = Room.current.find_nearest(audience_rooms)\n 1823  			start_script 'go2', [ target_room.to_s ]\n 1824: 			wait_while{ running?('go2') }\n 1825  			hide_before_trick = \"yes\" if gam =~ /stealth/i\n 1826  			get_item_trick = \"yes\" if gam =~ /get/i\n ....\n 2015  		currentroom = Room.current.id\n 2016  		start_script 'go2', [ 'bank', '--disable-confirm' ]\n 2017: 		wait_while{ running?('go2') }\n 2018  		fput \"withdraw 2 silvers\"\n 2019  		start_script \"go2\", [ \"#{currentroom}\" ]\n 2020: 		wait_while{ running?('go2') }\n 2021  		gam_teach_start1.call\n 2022  	elsif result =~ /Wait a few seconds and try again/i\n ....\n 2047  	target_room = Room.current.find_nearest(toolbenches_room_number)\n 2048  	start_script 'go2', [ target_room.to_s ]\n 2049: 	wait_while{ running?('go2') }\n 2050  	fput \"go toolbench\"\n 2051  	getpick.call\n ....\n 2059  		if line =~ /remaining to complete this task|remaining for this task/i\n 2060  			start_script 'go2', [ 'bank', '--disable-confirm' ]\n 2061: 			wait_while{ running?('go2') }\n 2062  			multifput \"depo all\", \"withdraw 5000 silvers\"\n 2063  			target_room = Room.current.find_nearest(toolbenches_room_number)\n 2064  			start_script 'go2', [ target_room.to_s ]\n 2065: 			wait_while{ running?('go2') }\n 2066  			fput \"go tool\"\n 2067  			keys_1.call\n ....\n 2196  			target_room = Room.current.find_nearest(tool_rack_room_number)\n 2197  			start_script 'go2', [ target_room.to_s ]\n 2198: 			wait_while{ running?('go2') }\n 2199  			my_room = Room.current.id\n 2200  			if Room.current.id == 17969\n ....\n 2207  				current_plant_rooms = illistimplant_rooms\n 2208  			else\n 2209: 				echo \"Error! Stuck in sweep_dirt, try running script again and please inform author of this error.\"\n 2210  			end\n 2211  			fput \"put my can in rack\" if checkright =~ /can/i or checkleft =~ /can/i\n ....\n 2222  			target_room = Room.current.find_nearest(tool_rack_room_number)\n 2223  			start_script 'go2', [ target_room.to_s ]\n 2224: 			wait_while{ running?('go2') }\n 2225  			multifput \"put my can in rack\", \"get my #{mainweapon}\", \"get my #{shield}\"\n 2226  			fput \"remove my #{shield}\" if checkleft == nil\n ....\n 2234  			end\n 2235  			start_script \"go2\", [go_to_room]\n 2236: 			wait_while{ running?('go2') }\n 2237  			number = 0\n 2238  			target_room = Room.current.find_nearest(tool_rack_room_number)\n 2239  			start_script 'go2', [ target_room.to_s ] \n 2240: 			wait_while{ running?('go2') }\n 2241  			if Room.current.id == 17969\n 2242  				current_plant_rooms = iceplant_rooms\n ....\n 2248  				current_plant_rooms = illistimplant_rooms\n 2249  			else\n 2250: 				echo \"Error! Stuck in cheap_plants_move, try running script again and please inform author of this error.\"\n 2251  			end\n 2252  			fput \"put my can in rack\" if checkright =~ /can/i or checkleft =~ /can/i\n ....\n 2258  			target_room = Room.current.find_nearest(tool_rack_room_number)\n 2259  			start_script 'go2', [ target_room.to_s ]\n 2260: 			wait_while{ running?('go2') }\n 2261  			multifput \"put my can in rack\", \"get my #{mainweapon}\", \"get my #{shield}\"\n 2262  			fput \"remove my #{shield}\" if checkleft == nil\n 2263  			fput \"stance def\"\n 2264  			start_script 'go2', [my_room]\n 2265: 			wait_while{ running?('go2') }\n 2266  			respond \"Couldn't finish task, try starting script again in 20 minutes.\"\n 2267  			exit\n ....\n 2269  	else\n 2270  		start_script \"go2\", [current_plant_rooms.at(number)]\n 2271: 		wait_while{ running?('go2') }\n 2272  		number += 1\n 2273  		cheap_plants_water.call\n ....\n 2289  		target_room = Room.current.find_nearest(tool_rack_room_number)\n 2290  		start_script 'go2', [ target_room.to_s ]\n 2291: 		wait_while{ running?('go2') }\n 2292  		multifput \"put my can in rack\", \"get my #{mainweapon}\", \"get my #{shield}\"\n 2293  		fput \"remove my #{shield}\" if checkleft == nil\n 2294  		fput \"stance def\"\n 2295  		start_script 'go2', [my_room]\n 2296: 		wait_while{ running?('go2') }\n 2297  		turnin.call\n 2298  	elsif result =~ /let someone else have a crack at it|repetition/i\n ....\n 2313  	respond \"Type ;rogue cal to calibrate your calipers.\"\n 2314  	respond \"Type ;rogue wedge <number> to create specified number of wedges.\"\n 2315: 	respond \"Note, do not type gld while script is running, it could make the script stop working.\"\n 2316  	respond \"Version: #{version}\"\n 2317  	exit \n\nE:\\Google Drive\\Lich\\scripts\\rrwedge.lic:\n   66  	stow\n   67  	start_script 'go2', [ 'bank', '--disable-confirm' ]\n   68: 	wait_while{ running?('go2') }\n   69  	multifput \"depo all\", \"withdraw #{silvers_needed} silvers\"\n   70  	#target_room = Room.current.find_nearest(toolbenches_room_number)\n   71  	start_script 'go2', [ '17881' ]\n   72: 	wait_while{ running?('go2') }\n   73  	fput \"go toolbench\"\n   74  	waitfor \"workshop instructions\"\n\nE:\\Google Drive\\Lich\\scripts\\ruby_ccsf.sublime-workspace:\n  384  			\"experience\",\n  385  			\"nil\",\n  386: 			\"running? 'bigshot'\",\n  387  			\"'fbigshot'\",\n  388  			\"'bigshot'\",\n  ...\n  429  			\"script_vars2\",\n  430  			\"'xx'\",\n  431: 			\"running? 'bigshot' or running? 'fbigshot'\",\n  432: 			\"running? 'fbigshot'\",\n  433  			\"'bigshot' or 'fbigshot'\",\n  434  			\".opf[\",\n\nE:\\Google Drive\\Lich\\scripts\\sammu.lic:\n   87  end\n   88  \n   89: # Checks if a script is running. Only matches ABSOLUTE names.\n   90: def script_running?(script)\n   91: 	Script.running.any? { |s| s.name == script }\n   92  end\n   93  \n   ..\n  429  		waitrt?\n  430  \n  431: 		wait_while{ running?('go2') }\n  432  		start_script('go2', [ room.to_s, '_disable_confirm_' ]);\n  433: 		wait_while{ running?('go2') }\n  434  	end\n  435  \n  ...\n 1282  		exit\n 1283  	when /^rank(?:s)?$/i\n 1284: 		smsg '-- Running in rank mode', :all\n 1285  		sammu.fletch(9999, :rank)\n 1286  	when /^\\d+$/i\n 1287: 		smsg '-- Running in normal mode', :all\n 1288  		sammu.fletch(script.vars[1].to_i)\n 1289  	when /^(?:help|\\?)$/\n\nE:\\Google Drive\\Lich\\scripts\\sbounty-bigshot.lic:\n   18  if not defined? $bigshot\n   19      start_script('bigshot', [ 'load' ], true)\n   20:     wait_while { running?('bigshot') }\n   21  end\n   22  \n   ..\n   45  \n   46  $SBOUNTY_HUNTER_RELOAD = proc {\n   47:     pause_script 'bigshot' if running? 'bigshot'\n   48      $bigshot.load_settings\n   49:     unpause_script 'bigshot' if running? 'bigshot'\n   50  }\n   51  \n\nE:\\Google Drive\\Lich\\scripts\\sbounty-shunt.lic:\n   18  if not defined? SHunt\n   19      start_script('shunt', [ 'load' ])\n   20:     wait_while { running?('shunt') }\n   21  end\n   22  \n\nE:\\Google Drive\\Lich\\scripts\\sbounty.lic:\n  791      end\n  792  \n  793:     wait_while { running? 'go2' }\n  794      start_script('go2', [ room.to_s, '_disable_confirm_' ]);\n  795:     wait_while { running? 'go2' }\n  796  }\n  797  \n  ...\n  855              script = args.shift\n  856              start_script(script, args, true)\n  857:             wait_while { running? script }\n  858          end\n  859      }\n  ...\n  872  \n  873      def run_script( name, pause_bigshot = false, args = [] )\n  874:         if Script.running.find { |s| s.name.downcase == name.downcase }.paused or running? name\n  875              stop_script name\n  876:             wait_while { running? name }\n  877          end\n  878  \n  879          start_script name, args \n  880          if pause_bigshot\n  881:             wait_until { !running? name }\n  882          end\n  883      end\n  ...\n  896  \n  897  run_loot_script = proc {\n  898:     wait_while { running? CharSettings[:loot_script] }\n  899      start_script(CharSettings[:loot_script], [], true)\n  900:     wait_while { running? CharSettings[:loot_script] }\n  901  }\n  902  \n  ...\n  912  \n  913      if Spell[9825].known? && Map.current.image =~ /wl-graveyard/\n  914:         wait_while { running? 'go2' }\n  915          start_script 'go2', [ '4141' ]\n  916:         wait_while { running?('go2') }\n  917          fput \"symbol of return\"\n  918      end\n  ...\n  959  \n  960  finish_hunt = proc {\n  961:     if running? $SBOUNTY_HUNTER_NAME\n  962          stop_script($SBOUNTY_HUNTER_NAME)\n  963:         wait_while { running? $SBOUNTY_HUNTER_NAME }\n  964      end\n  965  \n  966      fput 'stance defensive' until checkstance('defensive') or checkstance('guarded')\n  967  \n  968:     # pause to make sure looter isn't running\n  969:     wait_while { running? CharSettings[:loot_script] }\n  970  \n  971      # run loot script in case the hunter wasn't able to clean up\n  ...\n  980      rest_exit.call\n  981  \n  982:     kill_script 'go2' if running? 'go2'\n  983  \n  984      go2_nearest_tag.call('advguild')\n  ...\n 1010          sleep 1\n 1011          start_exec_script( <<-eos\n 1012:             kill_script 'sbounty' if running? 'sbounty';\n 1013:             kill_script 'bigshot' if running? 'bigshot';\n 1014:             kill_script 'go2' if running? 'go2';\n 1015              sleep 2;\n 1016              start_script 'sbounty';\n ....\n 1364          waitcastrt?\n 1365          start_script \"#{attack_script}\"\n 1366:         wait_while { running?(attack_script) }\n 1367        end\n 1368        sleep 0.1\n ....\n 1681  \n 1682  start_script(hunter, nil, true)\n 1683: wait_while { running? hunter }\n 1684  \n 1685  if not defined? $SBOUNTY_HUNTER_SETUP\n ....\n 1691  end\n 1692  \n 1693: before_dying { kill_script $SBOUNTY_HUNTER_NAME if running? $SBOUNTY_HUNTER_NAME }\n 1694  \n 1695  while true\n ....\n 1760              end\n 1761  \n 1762:             while not should_rest.call and running? $SBOUNTY_HUNTER_NAME\n 1763                  if bounty? =~ /#{bounty_patterns['task_provoked']}/ and not provoked\n 1764                      reload_hunter.call\n ....\n 1781                  sleep 0.10\n 1782              end\n 1783:             echo \"Exiting while not should_rest.call and running? $SBOUNTY_HUNTER_NAME LOOP.\" if $sbounty_debug\n 1784  \n 1785              finish_hunt.call\n\nE:\\Google Drive\\Lich\\scripts\\sbounty2.lic:\n   65  }\n   66  \n   67: script_running = proc { |script|\n   68: 	Script.running.any? { |s| s.name == script }\n   69  }\n   70  \n   71  # Keep track of bounty information\n   72  $sbounty_accepted		= false\n   73: hunter_running			= false\n   74  force_rest				= false\n   75  paused					= false\n   ..\n  125  \n  126  kill_hunter = proc {	\n  127: 	return unless script_running.call(hunting_script)\n  128  	hunter_end_time = Time.now.to_f\n  129  	echo \"killing #{hunting_script}\"\n  ...\n  132  \n  133  	kill_script(hunting_script)\n  134: 	wait_while { script_running.call(hunting_script) }\n  135  	\n  136: 	start_script(loot_script) unless Room.current.id.to_s == UserVars.op['resting_room_id'].to_s or script_running.call(loot_script)\n  137: 	wait_while { script_running.call(loot_script) }\n  138  	\n  139: 	wait_while { script_running.call('go2') }\n  140  	\n  141  	UserVars.op['hunting_scripts'].split(',').each { |hs|\n  142  		hs = hs.strip\n  143: 		kill_script(hs) if script_running.call(hs)\n  144: 		wait_while { script_running.call(hs) }\n  145  	}\n  146  	\n  147  	UserVars.op['resting_scripts'].split(',').each { |rs|\n  148  		rs = rs.strip\n  149: 		kill_script(rs) if script_running.call(rs)\n  150: 		wait_while { script_running.call(rs) }\n  151  	}\n  152  	\n  ...\n  210  	\n  211  	start_script(hunting_script)\n  212: 	wait_until { script_running.call(hunting_script) }\n  213  }\n  214  \n  ...\n  222  	echo 'resuming scripts'\n  223  		\n  224: 	wait_while { script_running.call('go2') }\n  225  	\n  226  	go2(saved_room) unless saved_room.nil?\n  227: 	wait_while { script_running.call('go2') }\n  228  	\n  229  	paused_scripts.each { |s| unpause_script(s) }\n  230  	paused_scripts = Array.new\n  231  	\n  232: 	if hunter_running\n  233  		start_hunter.call\n  234: 		hunter_running = false\n  235  	end\n  236  	\n  ...\n  242  	echo 'pausing scripts'\n  243  	\n  244: 	if script_running.call(loot_script)\n  245  		echo '-- ... waiting on loot script'\n  246: 		wait_while { script_running.call(loot_script) }\n  247  	end\n  248  	\n  249: 	for s in Script.running\n  250  		unless s.paused\n  251  			next if no_pause.include?(s.name)\n  ...\n  660  			if bounty? =~ /#{regex['heirloom_found']}/\n  661  				start_script(loot_script)\n  662: 				wait_while { script_running.call(loot_script) }\n  663  				done = true\n  664  			end\n  ...\n 1850  	elsif bounty? =~ /#{regex['dangerous_provoked']}/ and UserVars.op['targets'] !~ /ancient|grizzled/\n 1851  		change_targets.call\n 1852: 		if script_running.call(hunting_script)\n 1853  			$bigshot.load_settings\n 1854  		end\n ....\n 1902  		end\n 1903  			\n 1904: 		if script_running.call(hunting_script) and percentmind >= settings['turn_in_percent'].to_i and not saturated?\n 1905  			contents = GameObj.inv.find { |obj| obj.name =~ /#{Regexp.escape(UserVars.skinsack.strip)}/i}.contents\n 1906  			if contents.find_all { |item| item.name =~ /#{cur_skin.gsub(/s?$/,'')}/ }.size >= (cur_skin_count + 3)\n ....\n 2015  		change_to_primary_hunting_ground.call\n 2016  		\n 2017: 		if restart_needed and script_running.call(hunting_script)\n 2018  			restart_hunter.call\n 2019  		else\n ....\n 2028  		end\n 2029  		\n 2030: 		if force_rest or (not script_running.call(hunting_script) and (percentmind >= UserVars.op['rest_till_exp'].to_i or eval(wounded) or percentencumbrance >= UserVars.op['encumbered'].to_i or percentmana < UserVars.op['rest_till_mana'].to_i or checkspirit < UserVars.op['rest_till_spirit'].to_i)) or eval(wounded)\n 2031  			kill_hunter.call\n 2032  			\n ....\n 2034  				go2(UserVars.op['resting_room_id']) unless checkarea =~ /table/i\n 2035  				\n 2036: 				echo 'running resting routine'\n 2037  				\n 2038: 				wait_while { script_running.call(loot_script) }\n 2039  				UserVars.op['resting_commands'].split(',').each { |rc| fput \"#{rc}\" }\n 2040  				UserVars.op['resting_scripts'].split(',').each { |rs|\n ....\n 2044  					script = rs.shift					\n 2045  					\n 2046: 					kill_script(script) if script_running.call(script)\n 2047  					start_script(script, rs)\n 2048: 					wait_while { script_running.call(script) }\n 2049  					\n 2050  					break if turn_in_ready.call\n ....\n 2066  			end\n 2067  			\n 2068: 			running = Time.now.to_f - sbounty_startup_time\n 2069: 			echo sprintf('   ... running for %d minutes %2.0f seconds', running / 60, running % 60)\n 2070  			\n 2071  			unless settings['last_bounty_start'].nil? or settings['last_bounty_end'].nil? or (settings['last_bounty_start'] > settings['last_bounty_end'])\n ....\n 2091  			\n 2092  			force_rest = false\n 2093: 		elsif not script_running.call(hunting_script) and not paused\n 2094  			run_hunter = true\n 2095  		end\n\nE:\\Google Drive\\Lich\\scripts\\sbounty8_8_16.lic:\n  807      end\n  808  \n  809:     wait_while { running? 'go2' }\n  810      start_script('go2', [ room.to_s, '_disable_confirm_' ]);\n  811:     wait_while { running? 'go2' }\n  812  }\n  813  \n  ...\n  852  \n  853          start_script(script, args, true)\n  854:         wait_while { running? script }\n  855      }\n  856  }\n  857  \n  858  run_loot_script = proc {\n  859:     wait_while { running? CharSettings[:loot_script] }\n  860      start_script(CharSettings[:loot_script], [], true)\n  861:     wait_while { running? CharSettings[:loot_script] }\n  862  }\n  863  \n  ...\n  903  \n  904  finish_hunt = proc {\n  905:     if running? $SBOUNTY_HUNTER_NAME\n  906          stop_script($SBOUNTY_HUNTER_NAME)\n  907:         wait_while { running? $SBOUNTY_HUNTER_NAME }\n  908      end\n  909  \n  910      fput 'stance defensive' until checkstance('defensive') or checkstance('guarded')\n  911  \n  912:     # pause to make sure looter isn't running\n  913:     wait_while { running? CharSettings[:loot_script] }\n  914  \n  915      # run loot script in case the hunter wasn't able to clean up\n  ...\n  924      rest_exit.call\n  925  \n  926:     kill_script 'go2' if running? 'go2'\n  927  \n  928      go2_nearest_tag.call('advguild')\n  ...\n 1278  \n 1279                      start_script(attack_script, npcs.collect { |n| n.id }, h={:quiet=>true})\n 1280:                     wait_while { running?(attack_script) }\n 1281                  end\n 1282  \n ....\n 1550  \n 1551  start_script(hunter, nil, true)\n 1552: wait_while { running? hunter }\n 1553  \n 1554  if not defined? $SBOUNTY_HUNTER_SETUP\n ....\n 1560  end\n 1561  \n 1562: before_dying { kill_script $SBOUNTY_HUNTER_NAME if running? $SBOUNTY_HUNTER_NAME }\n 1563  \n 1564  while true\n ....\n 1616              end\n 1617  \n 1618:             while not should_rest.call and running? $SBOUNTY_HUNTER_NAME\n 1619                  if bounty? =~ /#{bounty_patterns['task_provoked']}/ and not provoked\n 1620                      reload_hunter.call\n\nE:\\Google Drive\\Lich\\scripts\\sexual-favors.lic:\n    5  	This script keeps track of favor gained and used.\n    6  	Set the script to start on login.\n    7: 	Type \"favor\" with the script running to see how much favor you have.\n    8  	Type \"favor clear\" to set symbol favor to 0.\n    9  	Type \"favor set <amount>\" to set symbol favor to something else.\n   ..\n  438  				deity = $1\n  439  				divine_wrath_active = true\n  440: 			elsif line =~ /^A final rumble of thunder rolls through the area, and, as its last echoes fade away, your skin ceases to tingle as your connection to Charl lessens\\.|^Your connection to Cholen lessens\\. The airy, brisk trill of a well-played fife and a quick cymbal crash heralds the departure of the spirit jesters\\.|^The ruddy haze near you dissipates, and the sound of the forging hammer dies away\\. As the forge-fire's heat leaves your skin, your connection to Eonak lessens\\.|^You sense the last of the spirit animals running away unseen, and the aroma of forest loam fades as your connection to Imaera lessens\\.|^The iridescent lights surrounding you pop like soap bubbles, one by one, until the last one bursts in a small flare of starry radiance and is gone\\. Your connection to Jastev lessens\\.|^Your connection to Koar lessens, and the divine light fades around you\\. The ground shudders one last time before falling still\\.|^As your connection to Lorminstra lessens, the snowflakes stop falling, and the few that still cling to you melt away\\. The icy cold gradually lifts from your body\\.|^As your connection to Lumnis lessens, the world of divine insight slips away from you, destroying the subtle understanding that you so briefly managed to grasp\\.|^You lose sight of the dream unicorns and the barren plain upon which they run as your connection to Ronan lessens\\. The waking world seems brighter again as the sense of dreamlike lassitude leaves you\\.|^You glimpse the golden blur one last time, but then you lose track of it entirely as your connection to Tonis lessens\\. The wind's force lessens as well, and then the air falls still\\.|^You realize that you had ceased to hear the sound of your own heartbeat only when you become aware of it again, and other sounds filter back into your awareness as well\\. Warmth returns to your body as your connection to Gosaena lessens\\.|^Suddenly, the important insights slip away, leaving you drained and exhausted as you plummet back to a more mundane state of mind\\. Your throat and sides are slightly sore, and your cheeks are wet with tears\\. Your connection to Zelia has lessened\\.|^Your connection to Eorgina lessens, and the black flames instantly vanish, leaving you stranded and bereft of the presence of the Arkati's power\\.|^Your connection to Fash'lo'nae lessens\\.  The quiet sound of a blade being honed persists a moment longer before fading away into silence\\.|^A spectral howl echoes through the air, resonant with pain and anguish\\. Your skin prickles again as your connection to Luukos lessens\\.|^As your connection to Mularos lessens, the cold, invisible collar locked about your throat fades into a compassionate caress, and a similar caress traces its way across the side of your cheek\\. Beneath that gentle touch, the wounds upon your face heal immediately\\. The ethereal barbed whip twitches one last time before dissolving back into air\\.|^Your connection to Sheru lessens, and the murky shadows brought by your appeal fade away, yet the feeling of being watched does not\\. On any night, in any dream or nightmare, those amber eyes will follow you endlessly\\.\\.\\. but such is the prize and the price of your devotion\\.|^As your connection to the Huntress lessens, the foreign anger that lent you strength passes from your body as well, and your heartbeat returns to its regular pace\\.|^You feel the kiss of benediction once more upon your brow, and then your connection to Laethe lessens\\. The shadowy black roses dissolve into tendrils of black, rose-scented smoke that dissipate rapidly\\.|^The ivory light around you fades and glimmers out, and the strength and control of your movements lessens along with your connection to Leya\\.|^The singing from the watery pillar begins to fade as your connection to Niima lessens\\. The pillar thins, then suddenly drops with a great splash! You are utterly drenched in water\\.|^You feel the kiss of benediction once more upon your brow, and then your connection to Voaris lessens\\. One of the glowing golden roses lights with scarlet flame, and the fire spreads rapidly down the vine until every rose is burning\\. The flames consume the roses swiftly and without smoke, until, in less than a second, the roses are gone entirely\\./\n  441  				# fixme: missing Kai, Oleani, Phoen, Andelas, Ivas, Marlu, V'tull, Aeia, Amasalen, Arachne, Jaston, Kuon, Onar, Tilamaire, Voln\n  442  				divine_wrath_active = false\n\nE:\\Google Drive\\Lich\\scripts\\sloot.lic:\n   97      next if Room.current.id.to_s == room.to_s\n   98  \n   99:     wait_while{ running?('go2') }\n  100      start_script('go2', [ room.to_s, '_disable_confirm_' ]);\n  101:     wait_while{ running?('go2') }\n  102  }\n  103  \n\nE:\\Google Drive\\Lich\\scripts\\sloot_bu.lic:\n   97      next if Room.current.id.to_s == room.to_s\n   98  \n   99:     wait_while{ running?('go2') }\n  100      start_script('go2', [ room.to_s, '_disable_confirm_' ]);\n  101:     wait_while{ running?('go2') }\n  102  }\n  103  \n\nE:\\Google Drive\\Lich\\scripts\\sorter.lic:\n   54  	GameObj.load_data if GameObj.type_data.empty? or GameObj.type_data.nil?\n   55  	if GameObj.type_data.nil?\n   56: 		wait_while { running?('updater') }\n   57: 		wait_while { running?('repository') }\n   58  		start_script 'repository', [ 'download', 'gameobj-data.xml' ]\n   59: 		wait_while { running?('repository') }\n   60: 		wait_while { running?('updater') }\n   61  		start_script 'updater', [ 'add', 'gameobj-data.xml' ]\n   62: 		wait_while { running?('updater') }\n   63  		GameObj.load_data\n   64  		exit if GameObj.type_data.nil?\n\nE:\\Google Drive\\Lich\\scripts\\spellmonitor.lic:\n   17  spell_line_checks = <<-eos\n   18  while line = get\n   19: 	break unless running?('spellmonitor')\n   20  	$tremors = true if line =~ /^Faint ripples in the \\\\w+ form beneath you for a moment/\n   21  	$tremors = false if line =~ /^Faint ripples in the \\\\w+ beneath you become apparent/\n   ..\n   35    waitrt?\n   36    ## Any script that can interfere needs to be paused\n   37:   pause_script 'bigshot' if running? 'bigshot'\n   38:   pause_script 'sloot' if running? 'sloot'\n   39  \n   40    # Uses an exec thread to cast the spell so dothistimeout does not\n   ..\n   55      eos\n   56      cast_exec_script = ExecScript.start(cast_exec, :quiet => true)\n   57:     wait_until {!running? cast_exec_script.name}\n   58    }\n   59  \n   60    ## This section should mirror the pause section\n   61:   unpause_script 'bigshot' if running? 'bigshot'\n   62:   unpause_script 'sloot' if running? 'sloot'\n   63    cast_spells.clear\n   64  end\n\nE:\\Google Drive\\Lich\\scripts\\start_hunt.lic:\n    3  ### before going hunting\n    4  \n    5: start_script \"monitor\" if !running? \"monitor\"\n    6: unpause_script 'transcend' if running? 'transcend'\n    7: start_script \"transcend\" if !running? \"transcend\"\n    8: start_script \"checkemail\" if !running? \"checkemail\"\n    9  \n   10  UserVars.op['flee_count'] = 2\n   ..\n   33  ## ** Wear armor\n   34  \n   35: if running? 'treasure_hunt'\n   36   # GSC.remove_enhancive(['imflass-winged golden rolaren greathelm'])\n   37    GSC.remove_enhancive($exp_enhancives - $skin_enhancives)\n   ..\n   60  if check_armor.nil?\n   61    echo \"Second armor check, armor is still missing. Exiting scripts.\"\n   62:   kill_script 'sbounty' if running? 'sbounty'\n   63:   kill_script 'bigshot' if running? 'bigshot'\n   64:   kill_script 'go2' if running? 'go2'\n   65    sleep 2\n   66    start_script 'go2', [ 'town' ]\n\nE:\\Google Drive\\Lich\\scripts\\sunfist-world-tour.lic:\n    1  =begin\n    2: Script that will visit all Sunfist outposts to ask about Grimswarm (for rank 5 promotion) except Teras.  Running the Script will provide the important notes you need to know.\n    3  It assumes you have already talked to the Grandmaster and received this task.\n    4  ~Moredin\n    .\n   73  \n   74  start_script(\"go2\", [ \"getsilvers=on\", \"13159\", '_disable_confirm_' ])\n   75: wait_while { running?(\"go2\")}\n   76  fput \"ask super about grims\"\n   77  start_script(\"go2\", [ \"getsilvers=on\", \"13134\", '_disable_confirm_' ])\n   78: wait_while { running?(\"go2\")}\n   79  fput \"ask super about grims\"\n   80  start_script(\"go2\", [ \"getsilvers=on\", \"13139\", '_disable_confirm_' ])\n   81: wait_while { running?(\"go2\")}\n   82  fput \"ask super about grims\"\n   83  start_script(\"go2\", [ \"getsilvers=on\", \"13071\", '_disable_confirm_' ])\n   84: wait_while { running?(\"go2\")}\n   85  fput \"ask super about grims\"\n   86  start_script(\"go2\", [ \"getsilvers=on\", \"13097\", '_disable_confirm_' ])\n   87: wait_while { running?(\"go2\")}\n   88  fput \"ask super about grims\"\n   89  start_script(\"go2\", [ \"getsilvers=on\", \"13114\", '_disable_confirm_' ])\n   90: wait_while { running?(\"go2\")}\n   91  fput \"ask super about grims\"\n   92  start_script(\"go2\", [ \"getsilvers=on\", \"16163\", '_disable_confirm_' ])\n   93: wait_while { running?(\"go2\")}\n   94  fput \"ask super about grims\"\n   95  if Teras = true\n   96  	start_script(\"go2\", [ \"getsilvers=on\", 400, '_disable_confirm_' ])\n   97: 	wait_while { running?(\"go2\")}\n   98  	fput \"withdraw #{terascost}\"\n   99  	echo \"\"\n  ...\n  104  end\n  105  start_script(\"go2\", [ \"getsilvers=on\", 13158, '_disable_confirm_' ])\n  106: wait_while { running?(\"go2\")}\n  107  fput \"ask grandma about prom\"\n  108  sleep 2\n  ...\n  110  sleep 3\n  111  start_script(\"go2\", [ \"getsilvers=on\", starting_room, '_disable_confirm_' ])\n  112: wait_while { running?(\"go2\")}\n  113  \n\nE:\\Google Drive\\Lich\\scripts\\test.lic:\n  105  	fput \"get #{i.id}\"\n  106  	start_script 'loresing', [ \"ability #{i.name}\" ] \n  107: 	wait_while {running?('loresing')}\n  108  	fput \"put #{i.id} in backpack\"\n  109  }\n\nE:\\Google Drive\\Lich\\scripts\\testDR.lic:\n   14    start_script \"#{script}\" if var1 =~ /xx/\n   15    sleep 1\n   16:   wait_while { running?(\"#{script}\")}\n   17    waitrt?\n   18    sleep 1\n\nE:\\Google Drive\\Lich\\scripts\\tpick.lic:\n   43  =end\n   44  \n   45: wait_while { running?('ring_test2')}\n   46  \n   47  $tpick_debug = true\n   ..\n  767  		sleep 0.5\n  768  		start_script \"go2\", [starting_room]\n  769: 		wait_while{ running?('go2') }\n  770  		echo \"This box has a glyph trap and cannot be opened.\"\n  771  		where_to_stow_box.call\n  ...\n  875  	move 'out' if checkpaths 'out'\n  876  	start_script 'go2', [ 'bank', '--disable-confirm' ]\n  877: 	wait_while{ running?('go2') }\n  878  	fput \"unhide\" if hidden?\n  879  	fput \"depo all\"\n  880  	fput \"withdraw 1000\"\n  881  	start_script 'go2', [ Room[Room.current.find_nearest_by_tag('locksmith')], '--disable-confirm' ]\n  882: 	wait_while{ running?('go2') }\n  883  	fput \"order\"\n  884  	while line = get\n  ...\n  964  		DownstreamHook.add(\"#{script.name}_check_locksmiths_container\", action)\n  965  		silence_me\n  966: 		if running? \"sorter\"\n  967  			kill_script \"sorter\"\n  968: 			wait_until { !running? \"sorter\" }\n  969  			start_sorter = true\n  970  		end\n  ...\n 1238  		dothistimeout \"turn emblem\", 10, /Obvious/ if current_location !~ /Four Winds/\n 1239  		force_start_script 'go2', [ 'town' ]\n 1240: 		wait_while { running?('go2') }\n 1241  	end\n 1242  	$tpick_list_of_box_ids.each{ |box|\n ....\n 2708  	target_room = Room.current.find_nearest(toolbenches_room_number)\n 2709  	start_script 'go2', [ target_room.to_s ]\n 2710: 	wait_while{ running?('go2') }\n 2711  	move 'go toolbench'\n 2712  	fput \"read sign\"\n ....\n 2823  			move 'out' if checkpaths 'out'\n 2824  			start_script 'go2', [ 'bank', '--disable-confirm' ]\n 2825: 			wait_while{ running?('go2') }\n 2826  			multifput \"depo all\", \"withdraw #{current_wire_cost} silvers\"\n 2827  			target_room = Room.current.find_nearest(toolbenches_room_number)\n 2828  			start_script 'go2', [ target_room.to_s ]\n 2829: 			wait_while{ running?('go2') }\n 2830  			move 'go toolbench'\n 2831  			fput \"order #{current_wire}\"\n\nE:\\Google Drive\\Lich\\scripts\\tpick1.lic:\n  753  		sleep 0.5\n  754  		start_script \"go2\", [starting_room]\n  755: 		wait_while{ running?('go2') }\n  756  		echo \"This box has a glyph trap and cannot be opened.\"\n  757  		where_to_stow_box.call\n  ...\n  859  	move 'out' if checkpaths 'out'\n  860  	start_script 'go2', [ 'bank', '--disable-confirm' ]\n  861: 	wait_while{ running?('go2') }\n  862  	fput \"unhide\" if hidden?\n  863  	fput \"depo all\"\n  864  	fput \"withdraw 1000\"\n  865  	start_script 'go2', [ Room[Room.current.find_nearest_by_tag('locksmith')], '--disable-confirm' ]\n  866: 	wait_while{ running?('go2') }\n  867  	fput \"order\"\n  868  	while line = get\n  ...\n  948  		DownstreamHook.add(\"#{script.name}_check_locksmiths_container\", action)\n  949  		silence_me\n  950: 		if running? \"sorter\"\n  951  			kill_script \"sorter\"\n  952: 			wait_until { !running? \"sorter\" }\n  953  			start_sorter = true\n  954  		end\n  ...\n 1208  	#dothistimeout \"turn emblem\", 10, /Obvious/ if current_location !~ /Four Winds/\n 1209  	#force_start_script 'go2', [ 'town' ];\n 1210: 	#wait_while { running?('go2') };\n 1211  	$tpick_list_of_box_ids.each{ |box|\n 1212  		fput \"get ##{box}\"\n ....\n 2624  	target_room = Room.current.find_nearest(toolbenches_room_number)\n 2625  	start_script 'go2', [ target_room.to_s ]\n 2626: 	wait_while{ running?('go2') }\n 2627  	move 'go toolbench'\n 2628  	fput \"read sign\"\n ....\n 2739  			move 'out' if checkpaths 'out'\n 2740  			start_script 'go2', [ 'bank', '--disable-confirm' ]\n 2741: 			wait_while{ running?('go2') }\n 2742  			multifput \"depo all\", \"withdraw #{current_wire_cost} silvers\"\n 2743  			target_room = Room.current.find_nearest(toolbenches_room_number)\n 2744  			start_script 'go2', [ target_room.to_s ]\n 2745: 			wait_while{ running?('go2') }\n 2746  			move 'go toolbench'\n 2747  			fput \"order #{current_wire}\"\n\nE:\\Google Drive\\Lich\\scripts\\tpick83.lic:\n  761  		sleep 0.5\n  762  		start_script \"go2\", [starting_room]\n  763: 		wait_while{ running?('go2') }\n  764  		echo \"This box has a glyph trap and cannot be opened.\"\n  765  		where_to_stow_box.call\n  ...\n  881  	move 'out' if checkpaths 'out'\n  882  	start_script 'go2', [ 'bank', '--disable-confirm' ]\n  883: 	wait_while{ running?('go2') }\n  884  	fput \"unhide\" if hidden?\n  885  	fput \"depo all\"\n  886  	fput \"withdraw 1000\"\n  887  	start_script 'go2', [ Room[Room.current.find_nearest_by_tag('locksmith')], '--disable-confirm' ]\n  888: 	wait_while{ running?('go2') }\n  889  	fput \"order\"\n  890  	while line = get\n  ...\n  970  		DownstreamHook.add(\"#{script.name}_check_locksmiths_container\", action)\n  971  		silence_me\n  972: 		if running? \"sorter\"\n  973  			kill_script \"sorter\"\n  974: 			wait_until { !running? \"sorter\" }\n  975  			start_sorter = true\n  976  		end\n  ...\n 2630  	target_room = Room.current.find_nearest(toolbenches_room_number)\n 2631  	start_script 'go2', [ target_room.to_s ]\n 2632: 	wait_while{ running?('go2') }\n 2633  	move 'go toolbench'\n 2634  	fput \"read sign\"\n ....\n 2745  			move 'out' if checkpaths 'out'\n 2746  			start_script 'go2', [ 'bank', '--disable-confirm' ]\n 2747: 			wait_while{ running?('go2') }\n 2748  			multifput \"depo all\", \"withdraw #{current_wire_cost} silvers\"\n 2749  			target_room = Room.current.find_nearest(toolbenches_room_number)\n 2750  			start_script 'go2', [ target_room.to_s ]\n 2751: 			wait_while{ running?('go2') }\n 2752  			move 'go toolbench'\n 2753  			fput \"order #{current_wire}\"\n\nE:\\Google Drive\\Lich\\scripts\\tpick_81_mod.lic:\n  756  		sleep 0.5\n  757  		start_script \"go2\", [starting_room]\n  758: 		wait_while{ running?('go2') }\n  759  		echo \"This box has a glyph trap and cannot be opened.\"\n  760  		where_to_stow_box.call\n  ...\n  864  	move 'out' if checkpaths 'out'\n  865  	start_script 'go2', [ 'bank', '--disable-confirm' ]\n  866: 	wait_while{ running?('go2') }\n  867  	fput \"unhide\" if hidden?\n  868  	fput \"depo all\"\n  869  	fput \"withdraw 1000\"\n  870  	start_script 'go2', [ Room[Room.current.find_nearest_by_tag('locksmith')], '--disable-confirm' ]\n  871: 	wait_while{ running?('go2') }\n  872  	fput \"order\"\n  873  	while line = get\n  ...\n  953  		DownstreamHook.add(\"#{script.name}_check_locksmiths_container\", action)\n  954  		silence_me\n  955: 		if running? \"sorter\"\n  956  			kill_script \"sorter\"\n  957: 			wait_until { !running? \"sorter\" }\n  958  			start_sorter = true\n  959  		end\n  ...\n 1214  		dothistimeout \"turn emblem\", 10, /Obvious/ if current_location !~ /Four Winds/\n 1215  		force_start_script 'go2', [ 'town' ]\n 1216: 		wait_while { running?('go2') }\n 1217  	end\n 1218  	$tpick_list_of_box_ids.each{ |box|\n ....\n 2636  	target_room = Room.current.find_nearest(toolbenches_room_number)\n 2637  	start_script 'go2', [ target_room.to_s ]\n 2638: 	wait_while{ running?('go2') }\n 2639  	move 'go toolbench'\n 2640  	fput \"read sign\"\n ....\n 2751  			move 'out' if checkpaths 'out'\n 2752  			start_script 'go2', [ 'bank', '--disable-confirm' ]\n 2753: 			wait_while{ running?('go2') }\n 2754  			multifput \"depo all\", \"withdraw #{current_wire_cost} silvers\"\n 2755  			target_room = Room.current.find_nearest(toolbenches_room_number)\n 2756  			start_script 'go2', [ target_room.to_s ]\n 2757: 			wait_while{ running?('go2') }\n 2758  			move 'go toolbench'\n 2759  			fput \"order #{current_wire}\"\n\nE:\\Google Drive\\Lich\\scripts\\transcend.lic:\n   10  \n   11  \n   12:   trans_count = Script.running.find_all { |s| s.name == 'transcend' }.length\n   13    exit if trans_count > 1\n   14  \n   ..\n   16  Thread.new {\n   17  	while true\n   18: 		wait_until{(not Spell[9049].active? and not Spell[9812].active? and not dead? and running?('sbounty')) and percenthealth <= 80 and (!standing? or stunned? or webbed?) and ((GameObj.npcs.any? { |npc| npc.type !~ /passive/ and npc.status !~ /dead/ }) or (GameObj.loot.each { |i| i.noun =~ /cloud/}))}\n   19      echo 'sym trans loop'\n   20  		bigshotPaused = GSC.pauseScript 'bigshot'\n   ..\n   26  Thread.new {\n   27  	while true\n   28: 		wait_until{(percenthealth <= 50 and not dead? and not stunned? and running?('sbounty')) }\n   29  		echo 'sym resto loop'\n   30      bigshotPaused = GSC.pauseScript 'bigshot'\n   ..\n   51      fput \"quit\"\n   52      fput \"quit\"\n   53:     kill_script 'sbounty' if running? 'sbounty'\n   54:     kill_script 'bigshot' if running? 'bigshot' \n   55    end\n   56  }\n   ..\n  103        eos\n  104        cast_exec_script = ExecScript.start(cast_exec, :quiet => false)\n  105:       wait_until {!running? cast_exec_script.name}\n  106      }\n  107  \n  ...\n  147    \n  148    if line =~ /^A vaespilon draws an ancient sigil/\n  149:     pause_script 'bigshot' if running? 'bigshot'\n  150:     pause_script 'ubermonk' if running? 'ubermonk'\n  151  \n  152      for targetNum in ['first', 'second', 'third']\n  ...\n  157      end\n  158      \n  159:     unpause_script 'bigshot' if running? 'bigshot'\n  160:     unpause_script 'ubermonk' if running? 'ubermonk'\n  161    end\n  162  \n  ...\n  166  \n  167  \n  168:   #break unless running?('sbounty') or running?('loot-be-gone') or running?('bigshot') or running?('fbigshot')\n  169  	if line =~ /A roa'ter suddenly lurches/\n  170  		if not Spell[9049].active? and not Spell[9812].active?\n  ...\n  174  		else\n  175  			start_exec_script( <<-eos\n  176:         	kill_script 'sbounty' if running? 'sbounty';\n  177: 			kill_script 'bigshot' if running? 'bigshot' or running? 'fbigshot';\n  178: 			kill_script 'go2' if running? 'go2';\n  179  			force_start_script 'go2', [ 'town' ];\n  180  			sleep 0.5;\n  ...\n  193    else\n  194        start_exec_script( <<-eos\n  195:       kill_script 'sbounty' if running? 'sbounty';\n  196:       kill_script 'bigshot' if running? 'bigshot'\n  197:       kill_script 'go2' if running? 'go2';\n  198        force_start_script 'go2', [ '228' ];\n  199        sleep 0.5;\n  ...\n  209    if line =~ /An Ithzir herald reaches into a pocket and produces a small silvery disc,|You suddenly feel angered beyond all reason|sticky web/ and Char.name == 'Kalros'\n  210      start_exec_script( <<-eos\n  211:     kill_script 'sbounty' if running? 'sbounty';\n  212:     kill_script 'bigshot' if running? 'bigshot'\n  213:     kill_script 'go2' if running? 'go2';\n  214      force_start_script 'go2', [ '20' ];\n  215      sleep 0.5;\n  ...\n  244  \n  245    if line =~ /^Your armor prevents the spell from working/\n  246:     GameObj.inv.find {|i| @remove_item = i if i.name =~ /#{$armorshort}/}; (put \"_drag ##{@remove_item.id} ##{GameObj[/sack/].id}\"; waitrt?) if @remove_item and !running? 'bigshot'\n  247    end\n  248  \n  ...\n  261      $bless_hands = true if $1 == 'handwraps'\n  262      if GameObj.npcs.find{ |npc| npc.type =~ /undead/}\n  263:       pause_script 'bigshot' if running? 'bigshot'\n  264        dothistimeout \"symbol of bless footwrap\", 5, /^A wave of power|^You strain/ if $bless_feet == true\n  265        $bless_feet = false if $bless_feet == true\n  266        dothistimeout \"symbol of bless handwrap\", 5, /^A wave of power|^You strain/ if $bless_hands == true\n  267        $bless_hands = false if $bless_hands == true\n  268:       unpause_script 'bigshot' if running? 'bigshot'\n  269      end\n  270    end\n  ...\n  272    if line =~ /^Your muscles are starting to ache with exhaustion/\n  273      start_exec_script( <<-eos\n  274:                        kill_script 'sbounty' if running? 'sbounty';\n  275:                        kill_script 'go2' if running? 'go2';\n  276                         sleep 0.5;\n  277                         fput 'symbol of return';\n  ...\n  285      if $rescue_child == false\n  286        start_exec_script( <<-eos\n  287:                          kill_script 'sbounty' if running? 'sbounty';\n  288:                          kill_script 'go2' if running? 'go2';\n  289                           sleep 0.5;\n  290                           fput 'symbol of return';\n  ...\n  315    if line =~ /^You lose your balance on the slanted deck|^The tilt of the deck causes you to mistep|^The slant of the deck/\n  316      start_exec_script( <<-eos\n  317:                        kill_script 'sbounty' if running? 'sbounty';\n  318:                        kill_script 'go2' if running? 'go2';\n  319                         sleep 0.5;\n  320                         fput 'symbol of return';\n\nE:\\Google Drive\\Lich\\scripts\\treasure_hunt.lic:\n   27  force_start_script 'transcend'\n   28  \n   29: wait_while { running?('go2')}\n   30  wait_until { (percentmind <= $exp_min and $current_favor == 1) or percentencumbrance >= 20 or $sellnow == true}\n   31: wait_while { running?('loot-be-gone')}\n   32  GSC.run_wait_script('sloot', 'xx')\n   33  \n   34: pause_script 'bigshot' if running? 'bigshot'\n   35: pause_script 'transcend' if running? 'transcend'\n   36  \n   37  sleep 5\n   38: pause_script 'bigshot' if running? 'bigshot'\n   39: pause_script 'transcend' if running? 'transcend'\n   40  \n   41  #travel('home') if $zone_now != \"Ta'Illistim\"\n   ..\n   55  GSC.run_wait_script('waggle', 'xx')\n   56  \n   57: kill_script 'bigshot' if running? 'bigshot'\n   58: kill_script 'transcend' if running? 'transcend'\n   59  \n   60  force_start_script 'treasure_hunt'\n\nE:\\Google Drive\\Lich\\scripts\\ubermonk.lic:\n   23  @guild = 'wizard' if Char.name == 'Lumino'\n   24  $champion = false\n   25: $max_npc = 3 if running? 'bigshot'\n   26  #fput 'sym sleep' if GameObj.npcs.size > 1\n   27  \n   ..\n   30  uac_line_checks = <<-eos\n   31  while line = get\n   32:   break unless running?($current_script_name)\n   33    if line =~ /^You have (decent|good|excellent) positioning/\n   34      $position = $1\n   ..\n   61  def loot()\n   62    dead_npcs = GameObj.npcs.find_all { |i| i.status == 'dead' }\n   63:   dead_npcs.each { |i| start_script ('sloot') if !running?('sloot')\n   64:   wait_while { running?('sloot') }}\n   65  end\n   66  \n   67  def attack(target)\n   68:   while (!bleeding? and health > 0 and !stunned?) and GameObj.npcs.size <= $max_npc and target.status !~ /dead|gone/ and (running? 'bigshot' or $manual_target)\n   69:   #while GameObj.npcs.size <= $max_npc and target.status !~ /dead|gone/ and (running? 'bigshot' or $manual_target)\n   70      sleep 0.5 while $pause_combat\n   71      arenaWatch() if $watchAgain\n   ..\n  112  $champion = true if target.name =~ /champion/\n  113  attack(target)\n  114: #loot() if !running?('bigshot')\n  115  \n  116  \n\nE:\\Google Drive\\Lich\\scripts\\ubermonk_bu:\n    2  Thread.new { \n    3  while true\n    4: Script.self.kill if running?('go2')\n    5  Script.self.kill if bleeding?\n    6  end\n    .\n    9  dead_npcs = GameObj.npcs.find_all { |i| i.status == 'dead' }\n   10  dead_npcs.each { |i|\n   11: start_script ('sloot') if !running?('sloot')\n   12: wait_while { running?('sloot') }\n   13  }\n   14  end\n   ..\n   95   end\n   96  \n   97: loot() if !running?('bigshot')\n   98  end\n   99  attack \"#{@uac} ##{@target.id}\"\n  100  end\n  101: loot() if !running?('bigshot')\n  102  #     attack \"cman qstrike #{@uac} ##{@target.id}\"\n  103  #     attack 'mstrike punch'\n\nE:\\Google Drive\\Lich\\scripts\\volnstep.lic:\n   47  ImaeraShrine = Proc.new do\n   48  	start_script 'go2', ['6459']\n   49: 	wait_while {running? 'go2'}\n   50  	fput \"kneel\"\n   51  	fput \"bury acorn\"\n   52  	start_script 'go2', ['18207']\n   53: 	wait_while {running? 'go2'}\n   54  	exit\n   55  end\n   ..\n   57  CharlShrine = Proc.new do\n   58  	start_script 'go2', ['7653']\n   59: 	wait_while {running? 'go2'}\n   60  	fput \"drop coral\"\n   61  	start_script 'go2', ['18206']\n   62: 	wait_while {running? 'go2'}\n   63  	exit\n   64  end\n   ..\n   95  	if result =~ /completed your task/\n   96  		start_script 'go2', ['18196']\n   97: 		wait_while {running? 'go2'}\n   98  		exit\n   99  	else\n  ...\n  101  		pause_script\n  102  		start_script 'go2', ['18196']\n  103: 		wait_while {running? 'go2'}\n  104  		exit\n  105  	end\n  ...\n  114  		pause_script\n  115  		start_script 'go2', ['451']\n  116: 		wait_while {running? 'go2'}\n  117  		fput \"put iron in lake\"\n  118  		start_script 'go2', ['18211']\n  119: 		wait_while {running? 'go2'}\n  120  		exit	\n  121  	elsif task =~ /the altar of weddings/\n  122  		start_script 'go2', ['288']\n  123: 		wait_while {running? 'go2'}\n  124  		loop{\n  125  		result = dothis \"forage small rose\", /^You/\n  ...\n  127  			}\n  128  		start_script 'go2', ['6315']\n  129: 		wait_while {running? 'go2'}\n  130  		fput \"put rose on altar\"\n  131  		start_script 'go2', ['18210']\n  132: 		wait_while {running? 'go2'}\n  133  	elsif task =~ /Shanty town/i\n  134  		echo \"Step 4\"\n  135  		start_script 'go2', ['bank']\n  136: 		wait_while {running? 'go2'}\n  137  		coins = Char.level * 100\n  138  		fput \"withdraw #{coins} silver\"\n  139  		start_script 'go2', ['311']\n  140: 		wait_while {running? 'go2'}\n  141  		fput \"drop #{coins} silver\"\n  142  		fput \"sing Praise be to Lord Cholen;Doer of many good deeds;Freer of the souls of many dead men\"\n  143  		start_script 'go2', ['18209']\n  144: 		wait_while {running? 'go2'}	\n  145  	elsif task =~/the Graveyard Gate and recite a poem/\n  146  		echo \"Step 5\"\n  147  		start_script 'go2', ['4140']\n  148: 		wait_while {running? 'go2'}\n  149  		fput \"recite I wish honor upon Lord Voln;Jastev is sullen and self-possessed;Jastev has a keen interest in morbid poetry;Although Jastev is sullen, he is an artistic genius;As well as the God of visual arts;The twin of Lord Cholen who frees the undead\"\n  150  		start_script 'go2', ['18208']\n  ...\n  158  		else\n  159  		start_script 'go2', ['228']\n  160: 		wait_while {running? 'go2'}\n  161  		result = dothis \"get acorn\", /^Get what|^You pick up a/\n  162  			if result =~ /^You/\n  ...\n  164  			else\n  165  				start_script 'go2', ['8665']\n  166: 				wait_while {running? 'go2'}\n  167  				result = dothis \"get acorn\", /^Get what|^You pick up a/\n  168  					if result =~ /^You pick up/\n  ...\n  193  	elsif task =~/a wrestling contest/\n  194  		start_script 'go2', ['6960']\n  195: 		wait_while {running? 'go2'}\n  196  		fput \"go arch\"\n  197  		multifput \"open my #{Lich.lootsack}\", \"stow all\"\n  ...\n  209  		fput \"out\"\n  210  		start_script 'go2', ['18205']\n  211: 		wait_while {running? 'go2'}\n  212  	elsif task=~/beneath the Graveyard and bring light and warmth/i\n  213  		echo \"If you can't open the graveyard gate type ;kill volnstep now. Otherwise, you can't get where you need to go.\"\n  214  		sleep 10\n  215  		start_script 'go2', ['bank']\n  216: 		wait_while {running? 'go2'}\n  217  		fput \"withdraw 100\"\n  218  		start_script 'go2', ['1244']\n  219: 		wait_while {running? 'go2'}\n  220  		fput \"order 16\"\n  221  		fput \"buy\"\n  222  		start_script 'go2', ['18204']\n  223: 		wait_while {running? 'go2'}\n  224  		fput \"light votive with lamp\"\n  225  		start_script 'go2', ['7229']\n  226: 		wait_while {running? 'go2'}\n  227  		fput \"wave votive\"\n  228  		start_script 'go2', ['18204']\n  229: 		wait_while {running? 'go2'}	\n  230  		exit\n  231  	elsif task =~/Lady Lorminstra's temple and offer up on her altar/\n  232  		start_script 'go2', ['bank']\n  233: 		wait_while {running? 'go2'}\n  234  		fput \"withdraw 500\"\n  235  		start_script 'go2', ['325']\n  236: 		wait_while {running? 'go2'}\n  237  		fput \"stow all\"\n  238  		fput \"order 1\"\n  239  		fput \"buy\"\n  240  		start_script 'go2', ['7523']\n  241: 		wait_while {running? 'go2'}\n  242  		fput \"put my leaf on altar\"\n  243  		fput \"pray\"\n  244  		start_script 'go2', ['18203']\n  245: 		wait_while {running? 'go2'}\n  246  		exit\n  247  	elsif task =~/Lord Ronan will grace you with a riddle/\n  248  		start_script 'go2', ['7926']\n  249: 		wait_while {running? 'go2'}\n  250  		fput \"lie\"\n  251  		waitfor \"Answer me one word and\"\n  252  		fput \"say life\"\n  253  		start_script 'go2', ['18202']\n  254: 		wait_while {running? 'go2'}\n  255  		exit\n  256  	elsif task =~/Wehnimer's tombstone in the Graveyard/\n  257  		start_script 'go2', ['7262']\n  258: 		wait_while {running? 'go2'}\n  259  		multifput \"search\", \"search\"\n  260  		waitfor \"must be only one word\"\n  261  		fput \"say Koar\"\n  262  		start_script 'go2', ['18201']\n  263: 		wait_while {running? 'go2'}\n  264  		exit\n  265  	elsif task =~/I have come to honor Koar, master of mana/\n  266  		start_script 'go2', ['7544']\n  267: 		wait_while {running? 'go2'}\n  268  		fput \"kneel\"\n  269  		fput \"say I have come to honor Koar, master of mana.\"\n  270  		start_script 'go2', ['18200']\n  271: 		wait_while {running? 'go2'}\n  272  		exit\n  273  	elsif task =~/Coastal Cliffs inscribed with three messages/\n  274  		start_script 'go2', ['500']\n  275: 		wait_while {running? 'go2'}\n  276  		fput \"say you have not been forgotten\"\n  277  		start_script 'go2', ['18199']\n  278: 		wait_while {running? 'go2'}\n  279  		exit\n  280  	elsif task =~/magical workshop in the catacombs/\n  281  		start_script 'go2', ['7542']\n  282: 		wait_while {running? 'go2'}\n  283  		fput \"touch broadsword\"\n  284  		start_script 'go2', ['18198']\n  285: 		wait_while {running? 'go2'}\n  286  		exit\n  287  	elsif task =~/a dozen perfect long stemmed roses/\n  ...\n  289  		echo \"Also, I had to purchase a dozen long stemmed roses for this task. If you find differently, PLEASE tell me.\"\n  290  		start_script 'go2', ['bank']\n  291: 		wait_while {running? 'go2'}\n  292  		fput \"witdraw 6500 silver\"\n  293  		start_script 'go2', ['8715']\n  294: 		wait_while {running? 'go2'}\n  295  		fput \"stow all\"\n  296  		multifput \"order 6\", \"buy\"\n  297  		start_script 'go2', ['4042']\n  298: 		wait_while {running? 'go2'}\n  299  		fput \"drop my roses\"\n  300  		start_script 'go2', ['bank']\n  301: 		wait_while {running? 'go2'}\n  302  		fput \"deposit all\"\n  303  		start_script 'go2', ['18197']\n  304: 		wait_while {running? 'go2'}\n  305  		exit\n  306  	elsif task =~/the museum in Wehnimer's Landing/\n  307  		start_script 'go2', ['3600']\n  308: 		wait_while {running? 'go2'}\n  309  		echo \n  310  		echo \"You need to find a couple of Voln members to go with you on the next step. Type ;u to unpause the script when you're ready.\"\n  311  		pause_script\n  312  		start_script 'go2', ['15568']\n  313: 		wait_while {running? 'go2'}\n  314  		Museum.call\n  315  	elsif task =~/fisherman's village/\n  316  		start_script 'go2', ['524']\n  317: 		wait_while {running? 'go2'}\n  318  		fput \"touch shrine\"\n  319  		start_script 'go2', ['18195']\n  320: 		wait_while {running? 'go2'}\n  321  		exit\n  322  	elsif task =~/she graces you with her presence, show her the proper courtesy and respect/\n  323  		start_script 'go2', ['6459']\n  324: 		wait_while {running? 'go2'}\n  325  		fput \"stow all\"\n  326  		fput \"kneel\"\n  ...\n  329  		fput \"bow deer\"\n  330  		start_script 'go2', ['18192']\n  331: 		wait_while {running? 'go2'}\n  332  		exit\n  333  	elsif task =~/drop an appropriate offering of coins into the sea/\n  334  		start_script 'go2', ['bank']\n  335: 		wait_while {running? 'go2'}\n  336  		coins = Char.level * 100\n  337  		fput \"withdraw #{coins}\"\n  338  		start_script 'go2', ['7644']\n  339: 		wait_while {running? 'go2'}\n  340  		fput \"drop #{coins} silver\"\n  341  		start_script 'go2', ['18193']\n  342: 		wait_while {running? 'go2'}\n  343  		exit\n  344  	elsif task =~/place a weapon into the pool there as an offering/\n  345  		start_script 'go2', ['bank']\n  346: 		wait_while {running? 'go2'}\n  347  		fput \"withdraw 250\"\n  348  		start_script 'go2', ['402']\n  349: 		wait_while {running? 'go2'}\n  350  		fput \"stow all\"\n  351  		fput \"order 7\"\n  352  		fput \"buy\"\n  353  		start_script 'go2', ['8572']\n  354: 		wait_while {running? 'go2'}\n  355  		fput \"drop broadsword in pool\"\n  356  		start_script 'go2', ['18192']\n  357: 		wait_while {running? 'go2'}\n  358  		exit\n  359  	elsif task =~/the fire guardians live and throw in a blue crystal as an offering/\n  ...\n  363  		pause_script\n  364  		start_script 'go2', ['4131']\n  365: 		wait_while {running? 'go2'}\n  366  		fput \"drop blue crystal in lava\"\n  367  		start_script 'go2', ['18191']\n  368: 		wait_while {running? 'go2'}\n  369  		exit\n  370  	elsif task =~/where the dead return after departing/\n  ...\n  436  		goWater.call\n  437  		start_script 'go2', ['18188']\n  438: 		wait_while {running? 'go2'}\n  439  		exit		\n  440  	elsif task =~/Answer all his questions correctly/\n  441  		start_script 'go2', ['7626']\n  442: 		wait_while {running? 'go2'}\n  443  		fput \"lie\"\n  444  		fput \"search sand\"\n  ...\n  481  		fput \"out\"\n  482  		start_script 'go2', ['18189']\n  483: 		wait_while {running? 'go2'}\n  484  		exit\n  485  	end\n  ...\n  488  if script.vars[1] =='check'\n  489  	start_script 'go2', ['18214']\n  490: 	wait_while {running? 'go2'}\n  491  	result = dothis \"pray\", /eagle|flower|butterfly|river|tapestry|wine|hiker|lute|jump in|storm|swim/	\n  492  	if result =~/baby eagle barely hatched from its egg/\n\nE:\\Google Drive\\Lich\\scripts\\waggle.lic:\n  842  								unless start_room == Room.current\n  843  									start_script 'go2', [ start_room.id.to_s ]\n  844: 									wait_while { running?('go2') }\n  845  								end\n  846  							else\n  847  								unless start_room == Room.current\n  848  									start_script 'go2', [ start_room.id.to_s ]\n  849: 									wait_while { running?('go2') }\n  850  								end\n  851  								fput 'release' unless checkprep == 'None'\n\nE:\\Google Drive\\Lich\\scripts\\wedge.lic:\n    3  start_exec_script( <<-eos\n    4      while line = get;\n    5:     	break unless running?('wedge');\n    6  		$box_open = true if line =~ /^The lid of a/;\n    7  	end;\n\nE:\\Google Drive\\Lich\\scripts\\wizardHunt.lic:\n    1: start_script \"monitor\" if !running? \"monitor\"\n    2: start_script \"transcend\" if !running? \"transcend\"\n    3  \n    4  \n\nE:\\Google Drive\\Lich\\scripts\\zzherb.lic:\n  141     \n  142      start_script 'go2', [ herb_room.to_s ]\n  143:         wait_while { running?('go2') }\n  144     \n  145   \n  ...\n  237                  else\n  238                          start_script 'useherbs'\n  239:                                 wait_while { running? 'useherbs' }\n  240                  end\n  241      end\n  ...\n  257  end\n  258      start_script('go2', [ room.to_s ])\n  259:                 wait_while{running?('go2')}\n  260                 \n  261  echo \"Found \" + herb_count.to_s + \" of \" + herb\n\n1011 matches across 117 files\n\n\nSearching 326 files for \"DownstreamHook\"\n\nE:\\Google Drive\\Lich\\scripts\\common.lic:\n  210        end\n  211      }\n  212:     DownstreamHook.add(downstream_add_name, action)\n  213    end\n  214    module_function :hook_squelch\n  ...\n  221      hook_squelch(squelch_line, downstream_add_name)\n  222      bput 'open my spidersilk satchel', '^You open|^That is already'\n  223:     DownstreamHook.remove(downstream_add_name)\n  224    end\n  225    module_function :open_satchel\n  ...\n  294        end\n  295      end\n  296:     DownstreamHook.remove(\"find_setting\")\n  297      silence_me\n  298    end\n\nE:\\Google Drive\\Lich\\scripts\\iSing.lic:\n   19  \n   20  def cmd_proc(cmd, start_regex, timeout = 0)\n   21: 	DownstreamHook.remove(\"clib_#{cmd}_proc\")\n   22  	start = false; finish = false\n   23  	action = proc { |ss|\n   24  		return ss if !start ||= ss =~ start_regex\n   25  		ss, finish = yield(ss)\n   26: 		DownstreamHook.remove(\"clib_#{cmd}_proc\") if finish\n   27  		ss\n   28  	}\n   29: 	DownstreamHook.add(\"clib_#{cmd}_proc\", action)\n   30  	$_SERVER_.puts \"<c>#{cmd}\\n\"\n   31  	t = Time.now;\n\nE:\\Google Drive\\Lich\\scripts\\alchemy.lic:\n  200  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n  201  			silvers = $1.to_i\n  202: 			DownstreamHook.remove(\"#{script.name}_check_silvers\")\n  203  			nil\n  204  		else\n  ...\n  206  		end\n  207  	}\n  208: 	DownstreamHook.add(\"#{script.name}_check_silvers\", action)\n  209  	silence_me unless undo_silence = silence_me\n  210  	put 'info'\n  ...\n  247  				if started\n  248  					if server_string =~ /<output/\n  249: 						DownstreamHook.remove('hide_gld')\n  250  						server_string\n  251  					else\n  ...\n  261  				end\n  262  			}\n  263: 			DownstreamHook.add('hide_gld', action)\n  264  		end\n  265  		undo_silent = !script.silent\n  ...\n  887  				action = proc { |server_string|\n  888  					if server_string =~ /^Inside the .*? you see [0-9]+ portions?/\n  889: 						DownstreamHook.remove('hide-jar-check')\n  890  						nil\n  891  					else\n  ...\n  893  					end\n  894  				}\n  895: 				DownstreamHook.add('hide-jar-check', action)\n  896  			end\n  897  			look_result = dothistimeout \"look in ##{jar.id}\", 10, /^Inside .*? you see [0-9]+ portions?/\n  ...\n  906  				action = proc { |server_string|\n  907  					if server_string =~ /^You.*?total of [0-9]+/\n  908: 						DownstreamHook.remove('hide-bundle-check')\n  909  						nil\n  910  					else\n  ...\n  912  					end\n  913  				}\n  914: 				DownstreamHook.add('hide-bundle-check', action)\n  915  			end\n  916  			measure_result = dothis \"measure ##{bundle.id}\", /^You.*?total of [0-9]+/\n  ...\n 2611  												action = proc { |server_string|\n 2612  													if server_string =~ /^Inside the .*? you see [0-9]+ portions?/\n 2613: 														DownstreamHook.remove('hide-jar-check')\n 2614  														nil\n 2615  													else\n ....\n 2617  													end\n 2618  												}\n 2619: 												DownstreamHook.add('hide-jar-check', action)\n 2620  											end\n 2621  											look_result = dothistimeout \"look in ##{jar.id}\", 10, /^Inside .*? you see [0-9]+ portions?/\n\nE:\\Google Drive\\Lich\\scripts\\autolockranges.lic:\n   49  \n   50  begin\n   51: 	DownstreamHook.add('autolockranges', hookproc)\n   52  	loop { sleep 1 }\n   53  ensure\n   54: 	DownstreamHook.remove('autolockranges')\n   55  end\n   56  \n\nE:\\Google Drive\\Lich\\scripts\\common.lic:\n  210        end\n  211      }\n  212:     DownstreamHook.add(downstream_add_name, action)\n  213    end\n  214    module_function :hook_squelch\n  ...\n  221      hook_squelch(squelch_line, downstream_add_name)\n  222      bput 'open my spidersilk satchel', '^You open|^That is already'\n  223:     DownstreamHook.remove(downstream_add_name)\n  224    end\n  225    module_function :open_satchel\n  ...\n  294        end\n  295      end\n  296:     DownstreamHook.remove(\"find_setting\")\n  297      silence_me\n  298    end\n\nE:\\Google Drive\\Lich\\scripts\\common1.lic:\n  190        end\n  191      }\n  192:     DownstreamHook.add(downstream_add_name, action)\n  193    end\n  194    module_function :hook_squelch\n  ...\n  200      hook_squelch(squelch_line, downstream_add_name)\n  201      bput 'open my spidersilk satchel', '^You open|^That is already'\n  202:     DownstreamHook.remove(downstream_add_name)\n  203    end\n  204    module_function :open_satchel\n  ...\n  272        end\n  273      end\n  274:     DownstreamHook.remove(\"find_setting\")\n  275      silence_me\n  276    end\n\nE:\\Google Drive\\Lich\\scripts\\crit-tracking.lic:\n 2308  	action = proc { |server_string|\n 2309  		if (server_string =~ /I could not find what you were referring to\\.|has nothing at this time\\.|\\<pushBold\\/\\>\\<a exist\\=\\\".*\\\" noun\\=\\\".*\\\"\\>.*noun\\=\\\".*\\\"\\>(.*)\\<\\/a\\>/) && (server_string !~ /is stunned\\.|appears to be dead\\.|You see a fairly typical|appears to be in good shape|bleeding|lacerations|(blinded|swollen|bruised) .* eye|severed (left|right)|convulsions|minor bruises|minor cuts|muscle twitching/)\n 2310: 			DownstreamHook.remove(\"#{script.name}_gather_critter_information\")\n 2311  			server_string\n 2312  		elsif (server_string =~ /is stunned\\.|appears to be dead\\.|You see a fairly typical|appears to be in good shape|bleeding|lacerations|(blinded|swollen|bruised) .* eye|severed (left|right)|convulsions|minor bruises|minor cuts|muscle twitching/)\n ....\n 2318  		end\n 2319  	}\n 2320: 		DownstreamHook.add(\"#{script.name}_gather_critter_information\", action)\n 2321: 		before_dying { DownstreamHook.remove(\"#{script.name}_gather_critter_information\") }\n 2322  		#silence_me\n 2323  		fput \"look ##{enemy_id}\"\n\nE:\\Google Drive\\Lich\\scripts\\death_potions.lic:\n   46  		end\n   47  	}\n   48: 	DownstreamHook.add('exper', action)\n   49  	status_tags\n   50  	$_SERVER_.puts \"exp\"\n   51  	t=Time.now\n   52  	wait_until {done or t+3<Time.now}\n   53: 	DownstreamHook.remove('exper')\n   54  	status_tags\n   55  	if $sting =~ /none/i\n   ..\n   86  		end\n   87  	}\n   88: 	DownstreamHook.add('infocon', action)\n   89  	status_tags\n   90  	$_SERVER_.puts \"info\"\n   91  	t=Time.now\n   92  	wait_until {done or t+3<Time.now}\n   93: 	DownstreamHook.remove('infocon')\n   94  	status_tags\n   95  	return(con_potions)\n\nE:\\Google Drive\\Lich\\scripts\\deed.lic:\n   35  			elsif server_string =~ /<prompt.*?>/\n   36  				done = true\n   37: 				DownstreamHook.remove('count_deeds')\n   38  				server_string\n   39  			else\n   ..\n   50  		end\n   51  	}\n   52: 	DownstreamHook.add('count_deeds', action)\n   53  	$_SERVER_.puts 'exp'\n   54  	wait_until { done }\n   55: 	DownstreamHook.remove('count_deeds')\n   56  	if deeds.nil?\n   57  		nil\n\nE:\\Google Drive\\Lich\\scripts\\deprecated_code.lic:\n  106      if server_string =~ /^You are wearing/\n  107        containers = server_string.scan(/<a exist=\"([^\"]+)\"/).flatten\n  108:       DownstreamHook.remove(\"get_all_containers\")\n  109        nil\n  110      else\n  ...\n  112      end\n  113    }\n  114:   DownstreamHook.add(\"get_all_containers\", action)\n  115    $_SERVER_.puts \"#{$cmd_prefix}inventory containers\\n\"\n  116    wait_until { containers }\n\nE:\\Google Drive\\Lich\\scripts\\drafix scripts\\gearinfo.lic:\n   90    Settings.save\n   91    UpstreamHook.remove('invisinv')\n   92:   DownstreamHook.remove('invisinv')\n   93  }\n   94  \n   ..\n  106  	end\n  107  }\n  108: DownstreamHook.remove('invisinv')\n  109  \n  110  \n  ...\n  207    result = nil\n  208  \n  209:   DownstreamHook.add('invisinv', $invscan)\n  210    result = dothistimeout \"inv hands\", 3, /You have/\n  211:   DownstreamHook.remove('invisinv')\n  212  \n  213    result = result.gsub(\"You have \", \"\")\n\nE:\\Google Drive\\Lich\\scripts\\drafix scripts\\manatimer.lic:\n   79  			nil\n   80  		elsif server_string =~ /\\s+(?:Maximum|Remaining) Mana Points|\\s+Mana Control abilities:|MANA (?:PULSE|SPELLUP)|\\s+You have used the MANA SPELLUP ability|^\\r\\n$/\n   81: 			DownstreamHook.remove('manatimer_check_pulse') if server_string =~ /MANA SPELLUP ability/\n   82  			ended = true if server_string =~ /Instantly cast all of your defensive spells\\./\n   83  			nil\n   84  		else\n   85: 			DownstreamHook.remove('manatimer_check_pulse') if ended\n   86  			server_string\n   87  		end\n   88  	}\n   89: 	DownstreamHook.add('manatimer_check_pulse', action)\n   90  	put 'mana'\n   91: 	wait_while { DownstreamHook.list.include?('manatimer_check_pulse') }\n   92  	[offnode, onnode]\n   93  }\n\nE:\\Google Drive\\Lich\\scripts\\drafix scripts\\numbercomma.lic:\n   14  		end\n   15  	}\n   16: 	DownstreamHook.add('numbercomma', action)\n   17  	loop { sleep 1 }\n   18  ensure\n   19: 	DownstreamHook.remove('numbercomma')\n   20  end\n\nE:\\Google Drive\\Lich\\scripts\\drafix scripts\\sloot.lic:\n  706              }\n  707              \n  708:             DownstreamHook.add('SLootDisk', hook)\n  709          end\n  710      elsif $sloot_hooks.include?(:disk)\n  711:         DownstreamHook.remove('SLootDisk')\n  712      end\n  713      if !$sloot_hooks.include?(:sloot_gameobj_watcher)\n  ...\n  733              server_string\n  734          }\n  735:         DownstreamHook.add('SLootGameObjWatcher', sloot_gameobj_watcher_hook)\n  736      end\n  737  }\n  ...\n  745          elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n  746              silvers = $1.to_i\n  747:             DownstreamHook.remove(\"slib_check_silvers\")\n  748              nil\n  749          else\n  ...\n  751          end\n  752      }\n  753:     DownstreamHook.add(\"slib_check_silvers\", action)\n  754      $_SERVER_.puts \"#{$cmd_prefix}info\\n\"\n  755      wait_until { silvers }\n  ...\n 1072          elsif server_string =~ /<prompt time=/\n 1073              result = false if result.nil?\n 1074:             DownstreamHook.remove(\"sloot_check_bundle\")\n 1075              nil\n 1076          else\n ....\n 1079      }\n 1080      \n 1081:     DownstreamHook.add(\"sloot_check_bundle\", action)\n 1082      $_SERVER_.puts \"#{$cmd_prefix}look at ##{id}\\n\"\n 1083      wait_while { result.nil? }\n\nE:\\Google Drive\\Lich\\scripts\\drafix scripts\\squelchcombat.lic:\n   33  		end\n   34  	}\n   35: 	DownstreamHook.add('squelchcombat', action)\n   36  	loop { sleep 1 }\n   37  ensure\n   38: 	DownstreamHook.remove('squelchcombat')\n   39  end\n\nE:\\Google Drive\\Lich\\scripts\\ego2.lic:\n  235  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n  236  			silvers = $1.to_i\n  237: 			DownstreamHook.remove(\"#{script.name}_check_silvers\")\n  238  			nil\n  239  		else\n  ...\n  241  		end\n  242  	}\n  243: 	DownstreamHook.add(\"#{script.name}_check_silvers\", action)\n  244  	$_SERVER_.puts \"#{$cmd_prefix}info\\n\"\n  245  	wait_until { silvers }\n\nE:\\Google Drive\\Lich\\scripts\\gearinfo.lic:\n   90    Settings.save\n   91    UpstreamHook.remove('invisinv')\n   92:   DownstreamHook.remove('invisinv')\n   93  }\n   94  \n   ..\n  106  	end\n  107  }\n  108: DownstreamHook.remove('invisinv')\n  109  \n  110  \n  ...\n  207    result = nil\n  208  \n  209:   DownstreamHook.add('invisinv', $invscan)\n  210    result = dothistimeout \"inv hands\", 3, /You have/\n  211:   DownstreamHook.remove('invisinv')\n  212  \n  213    result = result.gsub(\"You have \", \"\")\n\nE:\\Google Drive\\Lich\\scripts\\glitch.rbw:\n 1586                        @nerve_tracker_active = 'no'\n 1587                        @nerve_tracker_num -= 1\n 1588:                       DownstreamHook.remove('nerve_tracker') if @nerve_tracker_num < 1\n 1589                        $_CLIENT_.puts \"\\034GSV#{sprintf('%010d%010d%010d%010d%010d%010d%010d%010d', @max_health.to_i, @health.to_i, @max_spirit.to_i, @spirit.to_i, @max_mana.to_i, @mana.to_i, make_wound_gsl, make_scar_gsl)}\\r\\n\" if @send_fake_tags\n 1590                        server_string\n ....\n 1616                  }\n 1617                  @nerve_tracker_num += 1\n 1618:                 DownstreamHook.add('nerve_tracker', action)\n 1619                  Game._puts \"#{$cmd_prefix}health\"\n 1620                }\n ....\n 1663          unless $frontend =~ /^(?:wizard|avalon)$/\n 1664            if Lich.inventory_boxes(@player_id)\n 1665:             DownstreamHook.remove('inventory_boxes_off')\n 1666            end\n 1667          end\n ....\n 1956  end\n 1957  \n 1958: class DownstreamHook\n 1959    @@downstream_hooks ||= Hash.new\n 1960:   def DownstreamHook.add(name, action)\n 1961      unless action.class == Proc\n 1962:       echo \"DownstreamHook: not a Proc (#{action})\"\n 1963        return false\n 1964      end\n 1965      @@downstream_hooks[name] = action\n 1966    end\n 1967:   def DownstreamHook.run(server_string)\n 1968      for key in @@downstream_hooks.keys\n 1969        begin\n ....\n 1971        rescue\n 1972          @@downstream_hooks.delete(key)\n 1973:         respond \"--- Lich: DownstreamHook: #{$!}\"\n 1974          respond $!.backtrace.first\n 1975        end\n ....\n 1978      return server_string\n 1979    end\n 1980:   def DownstreamHook.remove(name)\n 1981      @@downstream_hooks.delete(name)\n 1982    end\n 1983:   def DownstreamHook.list\n 1984      @@downstream_hooks.keys.dup\n 1985    end\n ....\n 3600                      if squelch_started\n 3601                        if server_string =~ /<prompt/\n 3602:                         DownstreamHook.remove('squelch-peer')\n 3603                        end\n 3604                        nil\n ....\n 3610                      end\n 3611                    }\n 3612:                   DownstreamHook.add('squelch-peer', squelch_proc)\n 3613                    result = dothistimeout \"peer #{peer_direction}\", 3, /^You peer|^\\[Usage: PEER/\n 3614                    if result =~ /^You peer/\n ....\n 3746              if squelch_started\n 3747                if server_string =~ /<prompt/\n 3748:                 DownstreamHook.remove('squelch-peer')\n 3749                end\n 3750                nil\n ....\n 3756              end\n 3757            }\n 3758:           DownstreamHook.add('squelch-peer', squelch_proc)\n 3759            result = dothistimeout \"peer #{peer_direction}\", 3, /^You peer|^\\[Usage: PEER/\n 3760            if result =~ /^You peer/\n ....\n 7106  #               end\n 7107                  $_SERVERBUFFER_.push($_SERVERSTRING_)\n 7108:                 if alt_string = DownstreamHook.run($_SERVERSTRING_)\n 7109  #                 Buffer.update(alt_string, Buffer::DOWNSTREAM_MOD)\n 7110                    if $_DETACHABLE_CLIENT_\n ....\n 12246            end\n 12247          }\n 12248:         DownstreamHook.add('inventory_boxes_off', inv_off_proc)\n 12249          inv_toggle_proc = proc { |client_string|\n 12250            if client_string =~ /^(?:<c>)?_flag Display Inventory Boxes ([01])/\n 12251              if $1 == '1'\n 12252:               DownstreamHook.remove('inventory_boxes_off')\n 12253                Lich.set_inventory_boxes(XMLData.player_id, true)\n 12254              else\n 12255:               DownstreamHook.add('inventory_boxes_off', inv_off_proc)\n 12256                Lich.set_inventory_boxes(XMLData.player_id, false)\n 12257              end\n .....\n 12259            elsif client_string =~ /^(?:<c>)?\\s*(?:set|flag)\\s+inv(?:e|en|ent|ento|entor|entory)?\\s+(on|off)/i\n 12260              if $1.downcase == 'on'\n 12261:               DownstreamHook.remove('inventory_boxes_off')\n 12262                respond 'You have enabled viewing of inventory and container windows.'\n 12263                Lich.set_inventory_boxes(XMLData.player_id, true)\n 12264              else\n 12265:               DownstreamHook.add('inventory_boxes_off', inv_off_proc)\n 12266                respond 'You have disabled viewing of inventory and container windows.'\n 12267                Lich.set_inventory_boxes(XMLData.player_id, false)\n\nE:\\Google Drive\\Lich\\scripts\\go2.lic:\n  266  			nil\n  267  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n  268: 			DownstreamHook.remove('go2_check_silvers')\n  269  			nil\n  270  		else\n  ...\n  273  	}\n  274  	clear\n  275: 	DownstreamHook.add('go2_check_silvers', hook_proc)\n  276  	silence_me unless undo_silence = silence_me\n  277  	put 'info'\n\nE:\\Google Drive\\Lich\\scripts\\grguild.lic:\n 2461  		end\n 2462  	}\n 2463: 	DownstreamHook.add('stunman_task', action)\n 2464  #	$_SERVER_.puts \"<c>gld\\n\"\n 2465  	$_SERVER_.puts \"gld\"\n 2466  	t=Time.now; wait_until {done or t+3<Time.now}\n 2467: 	DownstreamHook.remove('stunman_task')\n 2468  	#task.inject([]) { |s,(sk,info)| s << ([sk] << info) }\n 2469  	task.inject([]) { |s,(sk,info)| s << ([sk] + info) }\n ....\n 2984  	}\n 2985  	waitrt?\n 2986: 	DownstreamHook.add('inv_cont', action)\n 2987  	status_tags\n 2988  	$_SERVER_.puts \"inv cont\"\n 2989  	t=Time.now\n 2990  	wait_until {done or t+3<Time.now}\n 2991: 	DownstreamHook.remove('inv_cont')\n 2992  	status_tags\n 2993  	contruns += 1\n\nE:\\Google Drive\\Lich\\scripts\\haz_sloot.lic:\n  718              }\n  719              \n  720:             DownstreamHook.add('SLootDisk', hook)\n  721          end\n  722      elsif $sloot_hooks.include?(:disk)\n  723:         DownstreamHook.remove('SLootDisk')\n  724      end\n  725      if !$sloot_hooks.include?(:sloot_gameobj_watcher)\n  ...\n  745              server_string\n  746          }\n  747:         DownstreamHook.add('SLootGameObjWatcher', sloot_gameobj_watcher_hook)\n  748      end\n  749  }\n  ...\n  757          elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n  758              silvers = $1.to_i\n  759:             DownstreamHook.remove(\"slib_check_silvers\")\n  760              nil\n  761          else\n  ...\n  763          end\n  764      }\n  765:     DownstreamHook.add(\"slib_check_silvers\", action)\n  766      $_SERVER_.puts \"#{$cmd_prefix}info\\n\"\n  767      wait_until { silvers }\n  ...\n 1088          elsif server_string =~ /<prompt time=/\n 1089              result = false if result.nil?\n 1090:             DownstreamHook.remove(\"sloot_check_bundle\")\n 1091              nil\n 1092          else\n ....\n 1095      }\n 1096      \n 1097:     DownstreamHook.add(\"sloot_check_bundle\", action)\n 1098      $_SERVER_.puts \"#{$cmd_prefix}look at ##{id}\\n\"\n 1099      wait_while { result.nil? }\n\nE:\\Google Drive\\Lich\\scripts\\infomon.lic:\n  124  		if hide_lines\n  125  			if server_string =~ /^\\s*Mana\\:|<prompt/\n  126: 				DownstreamHook.remove('infomon_info')\n  127  				done = true\n  128  			end\n  ...\n  135  		end\n  136  	}\n  137: 	DownstreamHook.add('infomon_info', action)\n  138  	echo 'checking stats...'\n  139  	put 'info'\n  ...\n  144  		if hide_lines\n  145  			if server_string =~ /<output class=\"\"\\/>|<prompt/\n  146: 				DownstreamHook.remove('infomon_skills')\n  147  				done = true\n  148  			end\n  ...\n  155  		end\n  156  	}\n  157: 	DownstreamHook.add('infomon_skills', action)\n  158  	echo 'checking skills...'\n  159  	put 'skills'\n  ...\n  164  		if hide_lines\n  165  			if server_string =~ /<prompt/\n  166: 				DownstreamHook.remove('infomon_society')\n  167  				done = true\n  168  			end\n  ...\n  175  		end\n  176  	}\n  177: 	DownstreamHook.add('infomon_society', action)\n  178  	echo 'checking society...'\n  179  	put 'society'\n  ...\n  183  	action = proc { |server_string|\n  184  		if server_string =~ /You currently have .*? citizenship in|You don't seem to have citizenship\\./\n  185: 			DownstreamHook.remove('infomon_citizenship')\n  186  			done = true\n  187  			nil\n  ...\n  190  		end\n  191  	}\n  192: 	DownstreamHook.add('infomon_citizenship', action)\n  193  	echo 'checking citizenship...'\n  194  	put 'citizenship'\n  ...\n  199  		if hide_lines\n  200  			if server_string =~ /<output class=\"\"\\/>|<prompt/\n  201: 				DownstreamHook.remove('infomon_cman')\n  202  				done = true\n  203  			end\n  ...\n  205  		else\n  206  			if server_string =~ /You know absolutely nothing about Combat Maneuvers\\./\n  207: 				DownstreamHook.remove('infomon_cman')\n  208  				done = true\n  209  				nil\n  ...\n  216  		end\n  217  	}\n  218: 	DownstreamHook.add('infomon_cman', action)\n  219  	echo 'checking combat maneuvers...'\n  220  	put 'cman info'\n  ...\n  358  	server_string\n  359  }\n  360: before_dying { DownstreamHook.remove('fix_gameobj_status') }\n  361: DownstreamHook.add('fix_gameobj_status', fix_gameobj_status)\n  362  \n  363  #\n  ...\n  891  			status_hook_proc = proc { |s|\n  892  				if status_squelching\n  893: 					DownstreamHook.remove(status_hook_name) if s =~ /<prompt/\n  894  					nil\n  895  				elsif s =~ /^The global Lumnis/\n  ...\n  900  				end\n  901  			}\n  902: 			DownstreamHook.add(status_hook_name, status_hook_proc)\n  903  			info_squelching = false\n  904  			info_hook_name = 'infomon_lumnis_info'\n  905  			info_hook_proc = proc { |s|\n  906  				if info_squelching\n  907: 					DownstreamHook.remove(info_hook_name) if s =~ /<prompt/\n  908  					nil\n  909  				elsif s =~ /^Your Gift of Lumnis/\n  ...\n  914  				end\n  915  			}\n  916: 			DownstreamHook.add(info_hook_name, info_hook_proc)\n  917  			silence_me unless undo_silence = silence_me\n  918  			put 'lumnis contest status'\n  ...\n  939  				if hide_lines\n  940  					if server_string =~ /<prompt/\n  941: 						DownstreamHook.remove('infomon_society')\n  942  						done = true\n  943  					end\n  ...\n  950  				end\n  951  			}\n  952: 			DownstreamHook.add('infomon_society', action)\n  953  			# echo 'checking society...'\n  954  			silence_me unless undo_silence = silence_me\n  ...\n 1467  				if hide_lines\n 1468  					if server_string =~ /^\\s*Mana\\:/\n 1469: 						DownstreamHook.remove('infomon_info')\n 1470  						done = true\n 1471  					end\n ....\n 1478  				end\n 1479  			}\n 1480: 			DownstreamHook.add('infomon_info', action)\n 1481  			# echo 'checking stats...'\n 1482  			save_silent = script.silent\n ....\n 1490  				if hide_lines\n 1491  					if server_string =~ /<output class=\"\"\\/>/\n 1492: 						DownstreamHook.remove('infomon_skills')\n 1493  						done = true\n 1494  					end\n ....\n 1501  				end\n 1502  			}\n 1503: 			DownstreamHook.add('infomon_skills', action)\n 1504  			# echo 'checking skills...'\n 1505  			save_silent = script.silent\n ....\n 1512  			action = proc { |server_string|\n 1513  				if server_string =~ /You currently have .*? citizenship in|You don't seem to have citizenship\\./\n 1514: 					DownstreamHook.remove('infomon_citizenship')\n 1515  					done = true\n 1516  					nil\n ....\n 1519  				end\n 1520  			}\n 1521: 			DownstreamHook.add('infomon_citizenship', action)\n 1522  			# echo 'checking citizenship...'\n 1523  			save_silent = script.silent\n\nE:\\Google Drive\\Lich\\scripts\\iSing.lic:\n   19  \n   20  def cmd_proc(cmd, start_regex, timeout = 0)\n   21: 	DownstreamHook.remove(\"clib_#{cmd}_proc\")\n   22  	start = false; finish = false\n   23  	action = proc { |ss|\n   24  		return ss if !start ||= ss =~ start_regex\n   25  		ss, finish = yield(ss)\n   26: 		DownstreamHook.remove(\"clib_#{cmd}_proc\") if finish\n   27  		ss\n   28  	}\n   29: 	DownstreamHook.add(\"clib_#{cmd}_proc\", action)\n   30  	$_SERVER_.puts \"<c>#{cmd}\\n\"\n   31  	t = Time.now;\n\nE:\\Google Drive\\Lich\\scripts\\killcounter.lic:\n  179  #	server_string\n  180  #}\n  181: #before_dying{DownstreamHook.remove('recognitionhook')}\n  182: #DownstreamHook.add('recognitionhook',action)\n  183  \n  184  \n\nE:\\Google Drive\\Lich\\scripts\\lnet.lic:\n 1226  	Thread.new {\n 1227  		begin\n 1228: 			DownstreamHook.add('lnet-watch-forage', hook_proc)\n 1229  			loop {\n 1230  				wait_while { found_list.empty? }\n ....\n 1245  			sleep 0.3\n 1246  		ensure\n 1247: 			DownstreamHook.remove('lnet-watch-forage')\n 1248  		end\n 1249  	}\n ....\n 1276  	Thread.new {\n 1277  		begin\n 1278: 			DownstreamHook.add('lnet-watch-forage', hook_proc)\n 1279  			loop {\n 1280  				wait_while { found_list.empty? }\n ....\n 1295  			sleep 0.3\n 1296  		ensure\n 1297: 			DownstreamHook.remove('lnet-watch-forage')\n 1298  		end\n 1299  	}\n\nE:\\Google Drive\\Lich\\scripts\\loot-be-gone.lic:\n  323  		end\n  324  	}\n  325: 	DownstreamHook.add('loot-be-gone-container-search', hook_proc)\n  326  	begin\n  327  		script.want_downstream = false\n  ...\n  352  		}\n  353  	ensure\n  354: 		DownstreamHook.remove('loot-be-gone-container-search')\n  355  	end\n  356  #	container_usable_names = [ 'leather cloak', 'grey tunic', 'burlap sack' ]\n  ...\n  721  			nil\n  722  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n  723: 			DownstreamHook.remove('go2_check_silvers')\n  724  			nil\n  725  		else\n  ...\n  728  	}\n  729  	clear\n  730: 	DownstreamHook.add('go2_check_silvers', hook_proc)\n  731  	silence_me unless undo_silence = silence_me\n  732  	put 'info'\n\nE:\\Google Drive\\Lich\\scripts\\prettybounty.lic:\n   49  	end\n   50  }\n   51: DownstreamHook.add('prettybounty', action) \n   52  \n\nE:\\Google Drive\\Lich\\scripts\\rnum.lic:\n   15    end\n   16  }\n   17: DownstreamHook.add('rNums', r_nums)\n   18: before_dying{DownstreamHook.remove('rNums')}\n   19  while true;sleep 1;end\n   20  \n\nE:\\Google Drive\\Lich\\scripts\\sammu.lic:\n   75  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n   76  			silvers = $1.to_i\n   77: 			DownstreamHook.remove(\"slib_check_silvers\")\n   78  			nil\n   79  		else\n   ..\n   81  		end\n   82  	}\n   83: 	DownstreamHook.add(\"slib_check_silvers\", action)\n   84  	$_SERVER_.puts \"#{$cmd_prefix}info\\n\"\n   85  	wait_until { silvers }\n\nE:\\Google Drive\\Lich\\scripts\\save_boxes.lic:\n   10  			nil\n   11  		elsif server_string =~ /^\\(\\d+ items? displayed\\.\\)/\n   12: 			DownstreamHook.remove(\"check_for_boxes\")\n   13  			@boxes_checked = true\n   14  			nil\n   ..\n   17  		end\n   18  	}\n   19: 		DownstreamHook.add(\"check_for_boxes\", action)\n   20  		silence_me\n   21  		fput 'inv full'\n\nE:\\Google Drive\\Lich\\scripts\\sexual-favors.lic:\n  968  				nil\n  969  			elsif server_string =~ /<prompt/\n  970: 				DownstreamHook.remove('check-fame')\n  971  				nil\n  972  			elsif server_string =~ /<output/\n  ...\n  982  		end\n  983  	}\n  984: 	DownstreamHook.add('check-fame', hook_proc)\n  985  	silence_me unless undo_silence = silence_me\n  986  	put 'experience'\n\nE:\\Google Drive\\Lich\\scripts\\sloot.lic:\n  706              }\n  707              \n  708:             DownstreamHook.add('SLootDisk', hook)\n  709          end\n  710      elsif $sloot_hooks.include?(:disk)\n  711:         DownstreamHook.remove('SLootDisk')\n  712      end\n  713      if !$sloot_hooks.include?(:sloot_gameobj_watcher)\n  ...\n  733              server_string\n  734          }\n  735:         DownstreamHook.add('SLootGameObjWatcher', sloot_gameobj_watcher_hook)\n  736      end\n  737  }\n  ...\n  745          elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n  746              silvers = $1.to_i\n  747:             DownstreamHook.remove(\"slib_check_silvers\")\n  748              nil\n  749          else\n  ...\n  751          end\n  752      }\n  753:     DownstreamHook.add(\"slib_check_silvers\", action)\n  754      $_SERVER_.puts \"#{$cmd_prefix}info\\n\"\n  755      wait_until { silvers }\n  ...\n 1074          elsif server_string =~ /<prompt time=/\n 1075              result = false if result.nil?\n 1076:             DownstreamHook.remove(\"sloot_check_bundle\")\n 1077              nil\n 1078          else\n ....\n 1081      }\n 1082      \n 1083:     DownstreamHook.add(\"sloot_check_bundle\", action)\n 1084      $_SERVER_.puts \"#{$cmd_prefix}look at ##{id}\\n\"\n 1085      wait_while { result.nil? }\n\nE:\\Google Drive\\Lich\\scripts\\sloot_bu.lic:\n  706              }\n  707              \n  708:             DownstreamHook.add('SLootDisk', hook)\n  709          end\n  710      elsif $sloot_hooks.include?(:disk)\n  711:         DownstreamHook.remove('SLootDisk')\n  712      end\n  713      if !$sloot_hooks.include?(:sloot_gameobj_watcher)\n  ...\n  733              server_string\n  734          }\n  735:         DownstreamHook.add('SLootGameObjWatcher', sloot_gameobj_watcher_hook)\n  736      end\n  737  }\n  ...\n  745          elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n  746              silvers = $1.to_i\n  747:             DownstreamHook.remove(\"slib_check_silvers\")\n  748              nil\n  749          else\n  ...\n  751          end\n  752      }\n  753:     DownstreamHook.add(\"slib_check_silvers\", action)\n  754      $_SERVER_.puts \"#{$cmd_prefix}info\\n\"\n  755      wait_until { silvers }\n  ...\n 1072          elsif server_string =~ /<prompt time=/\n 1073              result = false if result.nil?\n 1074:             DownstreamHook.remove(\"sloot_check_bundle\")\n 1075              nil\n 1076          else\n ....\n 1079      }\n 1080      \n 1081:     DownstreamHook.add(\"sloot_check_bundle\", action)\n 1082      $_SERVER_.puts \"#{$cmd_prefix}look at ##{id}\\n\"\n 1083      wait_while { result.nil? }\n\nE:\\Google Drive\\Lich\\scripts\\sorter.lic:\n  102  		end\n  103  	}\n  104: 	DownstreamHook.add('sorter', action)\n  105  	while (line = get)\n  106  		if line =~ /^(?:<container.*inv>|<clearContainer.*inv>|<exposeContainer.*inv>)([IO]n the .*?) you see .*\\./\n  ...\n  259  	end\n  260  ensure\n  261: 	DownstreamHook.remove('sorter')\n  262  end\n  263  \n\nE:\\Google Drive\\Lich\\scripts\\sub.lic:\n   34  end\n   35  \n   36: DownstreamHook.remove('textsub')\n   37: DownstreamHook.add('textsub', action)\n   38  \n   39  before_dying do\n   40:   DownstreamHook.remove('textsub')\n   41  end\n   42  \n\nE:\\Google Drive\\Lich\\scripts\\test.lic:\n  146                          if server_string =~ /^You are wearing/\n  147                                  containers = server_string.scan(/<a exist=\"([^\"]+)\"/).flatten\n  148:                                 DownstreamHook.remove(\"get_all_containers\")\n  149                                  nil\n  150                          else\n  ...\n  152                          end\n  153                  }\n  154:                 DownstreamHook.add(\"get_all_containers\", action)\n  155                  $_SERVER_.puts \"#{$cmd_prefix}inventory containers\\n\"\n  156                  wait_until { containers }\n\nE:\\Google Drive\\Lich\\scripts\\test2.lic:\n   12      end\n   13    end\n   14:   DownstreamHook.remove(\"find_setting\")\n   15    silence_me\n   16  end\n\nE:\\Google Drive\\Lich\\scripts\\textsubs.lic:\n   43  end\n   44  \n   45: DownstreamHook.remove('textsub')\n   46: DownstreamHook.add('textsub', action)\n   47  \n   48  before_dying do\n   49:   DownstreamHook.remove('textsub')\n   50  end\n   51  \n\nE:\\Google Drive\\Lich\\scripts\\tpick.lic:\n  277  	fput 'skills'\n  278  	sleep 0.01 until get =~ /Further information/\n  279: 	DownstreamHook.remove(\"remove_skills\")\n  280  	sleep 1\n  281  	@pick_mod = [ 1.00, 1.10, 1.20, 1.30, 1.45, 1.55, 1.60, 1.75, 1.80, 1.90, 2.20, 2.25, 2.30, 2.35, 2.40, 2.50 ]\n  ...\n  950  				vials_remaining = 0\n  951  			end\n  952: 			DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n  953  			nil\n  954  		elsif server_string =~ / and /\n  ...\n  956  			(cotton_remaining = 0) unless (cotton_remaining)\n  957  			(vials_remaining = 0) unless (vials_remaining)\n  958: 			DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n  959  			server_string\n  960  		else\n  ...\n  962  		end\n  963  	}\n  964: 		DownstreamHook.add(\"#{script.name}_check_locksmiths_container\", action)\n  965  		silence_me\n  966  		if running? \"sorter\"\n  ...\n 1127  			nil\n 1128  		elsif server_string =~ /^\\(\\d+ items? displayed\\.\\)/\n 1129: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1130  			$tpick_boxes_checked = true\n 1131  			nil\n 1132  		elsif server_string =~ /You glance down to see.*mithril|enruned.*/\n 1133  			check_hands_status = \"mithril or enruned\"\n 1134: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1135  			nil\n 1136  		elsif server_string =~ /You glance down.*left hand.*/\n 1137  			check_hands_status = \"good\"\n 1138: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1139  			nil\n 1140  		elsif server_string =~ /You glance down at your empty hands\\./\n 1141  			check_hands_status = \"empty\"\n 1142: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1143  			nil\n 1144  		else\n ....\n 1146  		end\n 1147  	}\n 1148: 		DownstreamHook.add(\"#{script.name}_check_for_boxes\", action)\n 1149  		silence_me\n 1150  		fput \"#{check_for_command}\"\n ....\n 2510  			#silver_gained = silver_after - silver_before\n 2511  		end;\n 2512: 		DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n 2513  }\n 2514  #before_dying { (fput \"close my #{UserVars.tpick[\"wedge_container\"]}\" if close_wedge_sack == \"yes\";fput \"close my #{UserVars.tpick[\"calipers_container\"]}\" if close_calipers_sack == \"yes\";fput \"close my #{UserVars.tpick[\"lockpick_container\"]}\" if close_lockpick_sack == \"yes\";fput \"close my #{UserVars.tpick[\"scale_weapon_container\"]}\" if close_scaleweapon_sack == \"yes\";fput \"close my #{UserVars.tpick[\"broken_lockpick_container\"]}\" if close_broken_lockpick_container == \"yes\") } \n ....\n 2571  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n 2572  			silver_before = $1.to_i\n 2573: 			DownstreamHook.remove(\"#{script.name}_wealth_before\")\n 2574  			nil\n 2575  		else\n ....\n 2577  		end\n 2578  	}\n 2579: 		DownstreamHook.add(\"#{script.name}_wealth_before\", action)\n 2580  		silence_me\n 2581  		fput \"info\"\n ....\n 2589  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n 2590  			silver_after = $1.to_i\n 2591: 			DownstreamHook.remove(\"#{script.name}_wealth_after\")\n 2592  			nil\n 2593  		else\n ....\n 2595  		end\n 2596  	}\n 2597: 		DownstreamHook.add(\"#{script.name}_wealth_after\", action)\n 2598  		silence_me\n 2599  		put \"info\"\n\nE:\\Google Drive\\Lich\\scripts\\tpick1.lic:\n  934  				vials_remaining = 0\n  935  			end\n  936: 			DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n  937  			nil\n  938  		elsif server_string =~ / and /\n  ...\n  940  			(cotton_remaining = 0) unless (cotton_remaining)\n  941  			(vials_remaining = 0) unless (vials_remaining)\n  942: 			DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n  943  			server_string\n  944  		else\n  ...\n  946  		end\n  947  	}\n  948: 		DownstreamHook.add(\"#{script.name}_check_locksmiths_container\", action)\n  949  		silence_me\n  950  		if running? \"sorter\"\n  ...\n 1098  			nil\n 1099  		elsif server_string =~ /^\\(\\d+ items? displayed\\.\\)/\n 1100: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1101  			$tpick_boxes_checked = true\n 1102  			nil\n 1103  		elsif server_string =~ /You glance down to see.*mithril|enruned.*/\n 1104  			check_hands_status = \"mithril or enruned\"\n 1105: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1106  			nil\n 1107  		elsif server_string =~ /You glance down.*left hand.*/\n 1108  			check_hands_status = \"good\"\n 1109: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1110  			nil\n 1111  		elsif server_string =~ /You glance down at your empty hands\\./\n 1112  			check_hands_status = \"empty\"\n 1113: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1114  			nil\n 1115  		else\n ....\n 1117  		end\n 1118  	}\n 1119: 		DownstreamHook.add(\"#{script.name}_check_for_boxes\", action)\n 1120  		silence_me\n 1121  		fput \"#{check_for_command}\"\n ....\n 2426  			silver_gained = silver_after - silver_before\n 2427  		end;\n 2428: 		DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n 2429  }\n 2430  #before_dying { (fput \"close my #{UserVars.tpick[\"wedge_container\"]}\" if close_wedge_sack == \"yes\";fput \"close my #{UserVars.tpick[\"calipers_container\"]}\" if close_calipers_sack == \"yes\";fput \"close my #{UserVars.tpick[\"lockpick_container\"]}\" if close_lockpick_sack == \"yes\";fput \"close my #{UserVars.tpick[\"scale_weapon_container\"]}\" if close_scaleweapon_sack == \"yes\";fput \"close my #{UserVars.tpick[\"broken_lockpick_container\"]}\" if close_broken_lockpick_container == \"yes\") } \n ....\n 2487  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n 2488  			silver_before = $1.to_i\n 2489: 			DownstreamHook.remove(\"#{script.name}_wealth_before\")\n 2490  			nil\n 2491  		else\n ....\n 2493  		end\n 2494  	}\n 2495: 		DownstreamHook.add(\"#{script.name}_wealth_before\", action)\n 2496  		silence_me\n 2497  		fput \"info\"\n ....\n 2505  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n 2506  			silver_after = $1.to_i\n 2507: 			DownstreamHook.remove(\"#{script.name}_wealth_after\")\n 2508  			nil\n 2509  		else\n ....\n 2511  		end\n 2512  	}\n 2513: 		DownstreamHook.add(\"#{script.name}_wealth_after\", action)\n 2514  		silence_me\n 2515  		put \"info\"\n\nE:\\Google Drive\\Lich\\scripts\\tpick83.lic:\n  956  				vials_remaining = 0\n  957  			end\n  958: 			DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n  959  			nil\n  960  		elsif server_string =~ / and /\n  ...\n  962  			(cotton_remaining = 0) unless (cotton_remaining)\n  963  			(vials_remaining = 0) unless (vials_remaining)\n  964: 			DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n  965  			server_string\n  966  		else\n  ...\n  968  		end\n  969  	}\n  970: 		DownstreamHook.add(\"#{script.name}_check_locksmiths_container\", action)\n  971  		silence_me\n  972  		if running? \"sorter\"\n  ...\n 1121  			nil\n 1122  		elsif server_string =~ /^\\(\\d+ items? displayed\\.\\)/\n 1123: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1124  			$tpick_boxes_checked = true\n 1125  			nil\n 1126  		elsif server_string =~ /You glance down to see.*mithril|enruned.*/\n 1127  			check_hands_status = \"mithril or enruned\"\n 1128: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1129  			nil\n 1130  		elsif server_string =~ /You glance down.*left hand.*/\n 1131  			check_hands_status = \"good\"\n 1132: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1133  			nil\n 1134  		elsif server_string =~ /You glance down at your empty hands\\./\n 1135  			check_hands_status = \"empty\"\n 1136: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1137  			nil\n 1138  		else\n ....\n 1140  		end\n 1141  	}\n 1142: 		DownstreamHook.add(\"#{script.name}_check_for_boxes\", action)\n 1143  		silence_me\n 1144  		fput \"#{check_for_command}\"\n ....\n 2433  			silver_gained = silver_after - silver_before\n 2434  		end;\n 2435: 		DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n 2436  }\n 2437  #before_dying { (fput \"close my #{UserVars.tpick[\"wedge_container\"]}\" if close_wedge_sack == \"yes\";fput \"close my #{UserVars.tpick[\"calipers_container\"]}\" if close_calipers_sack == \"yes\";fput \"close my #{UserVars.tpick[\"lockpick_container\"]}\" if close_lockpick_sack == \"yes\";fput \"close my #{UserVars.tpick[\"scale_weapon_container\"]}\" if close_scaleweapon_sack == \"yes\";fput \"close my #{UserVars.tpick[\"broken_lockpick_container\"]}\" if close_broken_lockpick_container == \"yes\") } \n ....\n 2493  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n 2494  			silver_before = $1.to_i\n 2495: 			DownstreamHook.remove(\"#{script.name}_wealth_before\")\n 2496  			nil\n 2497  		else\n ....\n 2499  		end\n 2500  	}\n 2501: 		DownstreamHook.add(\"#{script.name}_wealth_before\", action)\n 2502  		silence_me\n 2503  		fput \"info\"\n ....\n 2511  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n 2512  			silver_after = $1.to_i\n 2513: 			DownstreamHook.remove(\"#{script.name}_wealth_after\")\n 2514  			nil\n 2515  		else\n ....\n 2517  		end\n 2518  	}\n 2519: 		DownstreamHook.add(\"#{script.name}_wealth_after\", action)\n 2520  		silence_me\n 2521  		put \"info\"\n\nE:\\Google Drive\\Lich\\scripts\\tpick_81_mod.lic:\n  939  				vials_remaining = 0\n  940  			end\n  941: 			DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n  942  			nil\n  943  		elsif server_string =~ / and /\n  ...\n  945  			(cotton_remaining = 0) unless (cotton_remaining)\n  946  			(vials_remaining = 0) unless (vials_remaining)\n  947: 			DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n  948  			server_string\n  949  		else\n  ...\n  951  		end\n  952  	}\n  953: 		DownstreamHook.add(\"#{script.name}_check_locksmiths_container\", action)\n  954  		silence_me\n  955  		if running? \"sorter\"\n  ...\n 1103  			nil\n 1104  		elsif server_string =~ /^\\(\\d+ items? displayed\\.\\)/\n 1105: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1106  			$tpick_boxes_checked = true\n 1107  			nil\n 1108  		elsif server_string =~ /You glance down to see.*mithril|enruned.*/\n 1109  			check_hands_status = \"mithril or enruned\"\n 1110: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1111  			nil\n 1112  		elsif server_string =~ /You glance down.*left hand.*/\n 1113  			check_hands_status = \"good\"\n 1114: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1115  			nil\n 1116  		elsif server_string =~ /You glance down at your empty hands\\./\n 1117  			check_hands_status = \"empty\"\n 1118: 			DownstreamHook.remove(\"#{script.name}_check_for_boxes\")\n 1119  			nil\n 1120  		else\n ....\n 1122  		end\n 1123  	}\n 1124: 		DownstreamHook.add(\"#{script.name}_check_for_boxes\", action)\n 1125  		silence_me\n 1126  		fput \"#{check_for_command}\"\n ....\n 2439  			silver_gained = silver_after - silver_before\n 2440  		end;\n 2441: 		DownstreamHook.remove(\"#{script.name}_check_locksmiths_container\")\n 2442  }\n 2443  #before_dying { (fput \"close my #{UserVars.tpick[\"wedge_container\"]}\" if close_wedge_sack == \"yes\";fput \"close my #{UserVars.tpick[\"calipers_container\"]}\" if close_calipers_sack == \"yes\";fput \"close my #{UserVars.tpick[\"lockpick_container\"]}\" if close_lockpick_sack == \"yes\";fput \"close my #{UserVars.tpick[\"scale_weapon_container\"]}\" if close_scaleweapon_sack == \"yes\";fput \"close my #{UserVars.tpick[\"broken_lockpick_container\"]}\" if close_broken_lockpick_container == \"yes\") } \n ....\n 2499  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n 2500  			silver_before = $1.to_i\n 2501: 			DownstreamHook.remove(\"#{script.name}_wealth_before\")\n 2502  			nil\n 2503  		else\n ....\n 2505  		end\n 2506  	}\n 2507: 		DownstreamHook.add(\"#{script.name}_wealth_before\", action)\n 2508  		silence_me\n 2509  		fput \"info\"\n ....\n 2517  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+([0-9]+)/\n 2518  			silver_after = $1.to_i\n 2519: 			DownstreamHook.remove(\"#{script.name}_wealth_after\")\n 2520  			nil\n 2521  		else\n ....\n 2523  		end\n 2524  	}\n 2525: 		DownstreamHook.add(\"#{script.name}_wealth_after\", action)\n 2526  		silence_me\n 2527  		put \"info\"\n\nE:\\Google Drive\\Lich\\scripts\\useherbs.lic:\n  257  			nil\n  258  		elsif server_string =~ /^\\s*Mana\\:\\s+\\-?[0-9]+\\s+Silver\\:\\s+[0-9]+/\n  259: 			DownstreamHook.remove(\"#{script.name}_check_silvers\")\n  260  			nil\n  261  		else\n  ...\n  263  		end\n  264  	}\n  265: 	DownstreamHook.add(\"#{script.name}_check_silvers\", action)\n  266  	silence_me unless undo_silence = silence_me\n  267  	clear\n\nE:\\Google Drive\\Lich\\scripts\\whatlevel.lic:\n  111  }\n  112  if script.vars[1]\n  113: DownstreamHook.add('whatlevel', action)\n  114: DownstreamHook.remove('whatlevel')\n  115  else\n  116: DownstreamHook.add('whatlevel', action)\n  117  end\n\n224 matches across 44 files\n\n\nSearching 329 files for \"exec\"\n\nE:\\Google Drive\\Lich\\scripts\\common.lic:\n   46  eos\n   47  \n   48: ExecScript.start(delayed_start_script, :quiet => false)\n   49  \n   50  # blocking put\n   ..\n  173      eos\n  174  \n  175:     ExecScript.start($check_silvers, :quiet => true)\n  176      put 'deposit all'\n  177  \n\nE:\\Google Drive\\Lich\\scripts\\commonFight.lic:\n   73      eos\n   74  \n   75:     ExecScript.start(uac_line_checks, :quiet => true)\n   76    end\n   77    module_function :monitor_uac\n\nE:\\Google Drive\\Lich\\scripts\\drDriver.lic:\n   14    eos\n   15  \n   16:   ExecScript.start(waggle_check, :quiet => true)\n   17  end\n   18  \n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n   86  eos\n   87  \n   88: start_exec_script(check_lines, :quiet => true)\n   89  \n   90  fput 'stance off' until stance == \"offensive\"\n\nE:\\Google Drive\\Lich\\scripts\\transcend.lic:\n   82      ubermonkPaused = GSC.pauseScript 'ubermonk'\n   83  \n   84:     # Uses an exec thread to cast the spell so dothistimeout does not\n   85      # interefere with matches from method .cast\n   86      cast_spells.each {|do_spell|\n   ..\n   88        sleep 0.5\n   89        waitrt?\n   90:       cast_exec = <<-eos\n   91        if $do_spell == 909\n   92          put \"prep #{$do_spell}\"\n   ..\n  102        end\n  103        eos\n  104:       cast_exec_script = ExecScript.start(cast_exec, :quiet => false)\n  105:       wait_until {!running? cast_exec_script.name}\n  106      }\n  107  \n  ...\n  141    if line =~ /The power from your symbol dissipates/\n  142      $current_favor = 0\n  143:     ExecScript.start(delayed_favor, :quiet => true)\n  144    end\n  145  =begin\n  ...\n  173  			dothistimeout \"sym trans confirm\", 3, /space between the corporeal|^You have already|^You strain/\n  174  		else\n  175: 			start_exec_script( <<-eos\n  176          	kill_script 'sbounty' if running? 'sbounty';\n  177  			kill_script 'bigshot' if running? 'bigshot' or running? 'fbigshot';\n  ...\n  192        dothistimeout \"sym trans confirm\", 3, /space between the corporeal|^You have already|^You strain/\n  193    else\n  194:       start_exec_script( <<-eos\n  195        kill_script 'sbounty' if running? 'sbounty';\n  196        kill_script 'bigshot' if running? 'bigshot'\n  ...\n  208  \n  209    if line =~ /An Ithzir herald reaches into a pocket and produces a small silvery disc,|You suddenly feel angered beyond all reason|sticky web/ and Char.name == 'Kalros'\n  210:     start_exec_script( <<-eos\n  211      kill_script 'sbounty' if running? 'sbounty';\n  212      kill_script 'bigshot' if running? 'bigshot'\n  ...\n  271  \n  272    if line =~ /^Your muscles are starting to ache with exhaustion/\n  273:     start_exec_script( <<-eos\n  274                         kill_script 'sbounty' if running? 'sbounty';\n  275                         kill_script 'go2' if running? 'go2';\n  ...\n  284    if line =~ /^The bronze gate appears to be closed/\n  285      if $rescue_child == false\n  286:       start_exec_script( <<-eos\n  287                           kill_script 'sbounty' if running? 'sbounty';\n  288                           kill_script 'go2' if running? 'go2';\n  ...\n  314  \n  315    if line =~ /^You lose your balance on the slanted deck|^The tilt of the deck causes you to mistep|^The slant of the deck/\n  316:     start_exec_script( <<-eos\n  317                         kill_script 'sbounty' if running? 'sbounty';\n  318                         kill_script 'go2' if running? 'go2';\n\nE:\\Google Drive\\Lich\\scripts\\ubermonk.lic:\n   45  eos\n   46  \n   47: ExecScript.start(uac_line_checks, :quiet => true)\n   48  \n   49  def arenaWatch()\n\nE:\\Google Drive\\Lich\\scripts\\1030_script.lic:\n   14  eos\n   15  \n   16: start_exec_script(check_lines, :quiet => true)\n   17  \n   18  while true\n\nE:\\Google Drive\\Lich\\scripts\\1Gems2Jars-LE.txt:\n  371  \n  372  # We would've exited above if we didn't think we had a valid gems array. Worst case\n  373: # we should have an empty array and execute never.\n  374  gems.each{|gem|\n  375      # Special cases until we get the regexps fixed\n\nE:\\Google Drive\\Lich\\scripts\\alias.lic:\n   48  character = \"#{XMLData.game.downcase}_#{XMLData.name.downcase}\".gsub(/[^a-z_]/, '').encode('UTF-8')\n   49  \n   50: db.execute(\"CREATE TABLE IF NOT EXISTS global (trigger TEXT NOT NULL, target TEXT NOT NULL, UNIQUE(trigger));\")\n   51: db.execute(\"CREATE TABLE IF NOT EXISTS #{character} (trigger TEXT NOT NULL, target TEXT NOT NULL, UNIQUE(trigger));\")\n   52  \n   53  character_regex = nil\n   ..\n   56  update_regex = proc {\n   57  	global_regex = Array.new\n   58: 	db.execute(\"SELECT trigger FROM global;\") do |row|\n   59  		global_regex.push(Regexp.escape(row[0]))\n   60  	end\n   ..\n   66  \n   67  	character_regex = Array.new\n   68: 	db.execute(\"SELECT trigger FROM #{character};\") do |row|\n   69  		character_regex.push(Regexp.escape(row[0]))\n   70  	end\n   ..\n   92  						character     = \"#{XMLData.game.downcase}_#{XMLData.name.downcase}\".gsub(/[^a-z_]/, '').encode('UTF-8')\n   93  						char_aliases  = Array.new\n   94: 						db.execute(\"SELECT trigger,target FROM #{character};\") do |row|\n   95  							char_aliases.push [ row[0], row[1] ]\n   96  						end\n   ..\n  184  \n  185  						global_aliases = Array.new\n  186: 						db.execute(\"SELECT trigger,target FROM global;\") do |row|\n  187  							global_aliases.push [ row[0], row[1] ]\n  188  						end\n  ...\n  295  										char_aliases.each_index { |i|\n  296  											if char_textboxes[i].nil?\n  297: 												db.execute(\"DELETE FROM #{character} WHERE trigger=?\", char_aliases[i][0].encode('UTF-8'))\n  298  											elsif (char_aliases[i][1] != char_textboxes[i].text)\n  299: 												db.execute(\"INSERT OR REPLACE INTO #{character} (trigger,target) VALUES(?,?);\", char_aliases[i][0].encode('UTF-8'), char_textboxes[i].text.encode('UTF-8'))\n  300  											end\n  301  										}\n  ...\n  307  													respond \"[alias: warning: new alias #{a[0].text} already exists; ignoring]\"\n  308  												else\n  309: 													db.execute(\"INSERT INTO #{character} (trigger,target) VALUES(?,?);\", a[0].text.encode('UTF-8'), a[1].text.encode('UTF-8'))\n  310  												end\n  311  											end\n  ...\n  313  										global_aliases.each_index { |i|\n  314  											if global_textboxes[i].nil?\n  315: 												db.execute(\"DELETE FROM global WHERE trigger=?\", global_aliases[i][0].encode('UTF-8'))\n  316  											elsif (global_aliases[i][1] != global_textboxes[i].text)\n  317: 												db.execute(\"INSERT OR REPLACE INTO global (trigger,target) VALUES(?,?);\", global_aliases[i][0].encode('UTF-8'), global_textboxes[i].text.encode('UTF-8'))\n  318  											end\n  319  										}\n  ...\n  325  													respond \"[alias: warning: new alias #{a[0].text} already exists; ignoring]\"\n  326  												else\n  327: 													db.execute(\"INSERT INTO global (trigger,target) VALUES(?,?);\", a[0].text.encode('UTF-8'), a[1].text.encode('UTF-8'))\n  328  												end\n  329  											end\n  ...\n  355  			target = $4\n  356  			if old_target = db.get_first_value(\"SELECT target FROM #{table} WHERE trigger=? COLLATE NOCASE;\", trigger.encode('UTF-8'))\n  357: 				db.execute(\"UPDATE #{table} SET target=? WHERE trigger=?;\", target.encode('UTF-8'), trigger.encode('UTF-8'))\n  358  				respond \"\\n--- Alias updated.  (old alias was: #{old_target})\\n\\n\"\n  359  			else\n  360: 				db.execute(\"INSERT INTO #{table} (trigger,target) VALUES(?,?);\", trigger.encode('UTF-8'), target.encode('UTF-8'))\n  361  				respond \"\\n--- Alias saved\\n\\n\"\n  362  			end\n  ...\n  370  			trigger = $3\n  371  			if target = db.get_first_value(\"SELECT target FROM #{table} WHERE trigger=? COLLATE NOCASE;\", trigger.encode('UTF-8'))\n  372: 				db.execute(\"DELETE FROM #{table} WHERE trigger=?\", trigger.encode('UTF-8'))\n  373  				update_regex.call\n  374  				respond \"\\n--- Alias deleted (#{trigger} => #{target})\\n\\n\"\n  ...\n  379  			output = \"\\nGlobal Aliases:\\n\\n\"\n  380  			list = Array.new\n  381: 			db.execute(\"SELECT trigger,target FROM global;\") do |row|\n  382  				list.push \"   #{row[0]} => #{row[1]}\\n\"\n  383  			end\n  ...\n  389  			output.concat \"\\n#{XMLData.name}'s Aliases:\\n\\n\"\n  390  			list.clear\n  391: 			db.execute(\"SELECT trigger,target FROM #{character};\") do |row|\n  392  				list.push \"   #{row[0]} => #{row[1]}\\n\"\n  393  			end\n\nE:\\Google Drive\\Lich\\scripts\\atanDusk.lic:\n   98  \n   99  ## Watch for traps\n  100: ## Also uses Exec Script from duskRuinArena\n  101  def arenaWatch()\n  102    res = \"You glance around\"\n  ...\n  110  ## Main combat loop\n  111  def duskruinArena()\n  112:   ## Exec script to monitor lines. it also cancels duskruin loop\n  113    ## based on line triggers. Also watchs for traps.\n  114    check_lines = <<-eos\n  ...\n  137    eos\n  138  \n  139: start_exec_script(check_lines, :quiet => true)\n  140  \n  141  checkCol ## check for COL spells\n\nE:\\Google Drive\\Lich\\scripts\\bestiary.lic:\n 2692  		'corporeal' => true,\n 2693  		'locations' => [\"Ruined Temple\"] },\n 2694: 	\"Triton executioner\" => {\n 2695: 		'url' => \"https://gswiki.play.net/mediawiki/index.php/Triton_executioner\",\n 2696  		'level' => 96,\n 2697  		'undead' => false,\n\nE:\\Google Drive\\Lich\\scripts\\bigbounty.lic:\n 1489              };\n 1490          elsif @DEATH_RECOVERY_SWITCH\n 1491:             start_exec_script( <<-EOF\n 1492                  while( running?('bigbounty') );\n 1493                      if(dead?);\n ....\n 1532      def monitor_interaction()\n 1533          if @MONITOR_INTERACTION\n 1534:             start_exec_script( <<-eos\n 1535                  def show_window(line);\n 1536                      window_title = Char.name + ':' + line;\n\nE:\\Google Drive\\Lich\\scripts\\bigshot.lic:\n   22          -Fixed First room poaching.\n   23          -Removed group poaching logic.\n   24:         -Ambush detection via Exec Script.  It will leave the room if it detects an ambush line.\n   25          -Rewrote and updated wander targeting sections. Fixes some target related bugs.\n   26:         -Moved WAIT command to exec to prevent line buffer issues and make more responsive\n   27      v.2 (2/27/2016)\n   28          -Added changes to fix incant loot issues (might work)\n   29:         -Added ability to detect renaming of bigshot without destroying exec scripts\n   30:         -Converted exec scripts to strings to allow =>quiet\n   31      v.3 (6/20/2016)\n   32          -Added tentative rift hunting. *** HIGHLY EXPERIMENTAL *** BREAKS REGULAR HUNTING\n   ..\n   56  ## **** THIS IS THE SELF-CONTAINED VERSION - DOES NOT USE COMMON REPO **** ###\n   57   \n   58: $exec_ambush = false\n   59  $bigshot_debug = false\n   60  echo $current_script_name = script.name\n   ..\n  230  end\n  231   \n  232: ### ***** Exec\n  233   \n  234: $ambush_exec_script = <<-eos\n  235: $exec_ambush = true\n  236    while(line = get)\n  237      break unless running?($current_script_name)\n  238      $ambusher_here = true if line =~ /^\\\\w+ leaps from hiding to attack|^\\\\w+ is revealed|^Be at peace|^You attempt to renew/\n  239    end\n  240: $exec_ambush = false\n  241  eos\n  242   \n  ...\n  860              };\n  861          elsif @DEPART_SWITCH\n  862:             start_exec_script( <<-EOF\n  863                  while( running?($current_script_name) );\n  864                      if(dead?);\n  ...\n  893      def monitor_interaction()\n  894          if @MONITOR_INTERACTION\n  895:             start_exec_script( <<-eos\n  896                  def show_window(line);\n  897                      window_title = Char.name + ':' + line;\n  ...\n  952          #and line !~ /(?:^<style id=\"\"\\/><style id=\"roomDesc\"\\/>|<component id='room objs'>|<compDef id='room objs'>)/;\n  953       \n  954:         wait_for_swing_exec = <<-eos\n  955          status_tags\n  956          while line = get\n  ...\n  962          eos\n  963   \n  964:         ExecScript.start(wait_for_swing_exec, :quiet => true)\n  965         \n  966          while(1)\n  ...\n 1114          $ambusher_here = false\n 1115     \n 1116:     ExecScript.start($ambush_exec_script, :quiet => true) if $exec_ambush == false\n 1117     \n 1118      while true\n\nE:\\Google Drive\\Lich\\scripts\\bigshot1.lic:\n   19              Rewrote parts of the targeting section and wander section to remove poaching.\n   20              Removed group hunt section as it was part of the poaching issue.  Will address later.\n   21:             Added exec script to account for ambushers.\n   22  \n   23  =end\n   ..\n   34  \n   35  $bigshot_debug = false\n   36: $exec_ambush = false\n   37  \n   38  if $SAFE > 0\n   ..\n  696              };\n  697          elsif @DEPART_SWITCH\n  698:             start_exec_script( <<-EOF\n  699                  while( running?('bigshot') );\n  700                      if(dead?);\n  ...\n  729      def monitor_interaction()\n  730          if @MONITOR_INTERACTION\n  731:             start_exec_script( <<-eos\n  732                  def show_window(line);\n  733                      window_title = Char.name + ':' + line;\n  ...\n  933          $ambusher_here = false\n  934      \n  935:     if $exec_ambush == false then\n  936:     start_exec_script( <<-eos\n  937          while(line = get);\n  938              break unless running?('bigshot');\n  ...\n  941          eos\n  942          )\n  943:     $exec_ambush = true\n  944      end\n  945  \n\nE:\\Google Drive\\Lich\\scripts\\bigshot_backup 3.11.2017.lic:\n   22          -Fixed First room poaching.\n   23          -Removed group poaching logic.\n   24:         -Ambush detection via Exec Script.  It will leave the room if it detects an ambush line.\n   25          -Rewrote and updated wander targeting sections. Fixes some target related bugs.\n   26:         -Moved WAIT command to exec to prevent line buffer issues and make more responsive\n   27      v.2 (2/27/2016)\n   28          -Added changes to fix incant loot issues (might work)\n   29:         -Added ability to detect renaming of bigshot without destroying exec scripts\n   30:         -Converted exec scripts to strings to allow =>quiet\n   31      v.3 (6/20/2016)\n   32          -Added tentative rift hunting. *** HIGHLY EXPERIMENTAL *** BREAKS REGULAR HUNTING\n   ..\n   50  # FIXME: Instead of the head reiterating :ATTACK to tail every 15 seconds, have the tail loop upon :ATTACK until the room id changes\n   51   \n   52: $exec_ambush = false\n   53  $bigshot_debug = false\n   54  echo $current_script_name = script.name\n   ..\n  214  end\n  215  \n  216: ### ***** Exec\n  217  \n  218: $ambush_exec_script = <<-eos\n  219: $exec_ambush = true\n  220    while(line = get)\n  221      break unless running?($current_script_name)\n  222      $ambusher_here = true if line =~ /^\\\\w+ leaps from hiding to attack|^\\\\w+ is revealed|^Be at peace|^You attempt to renew/\n  223    end\n  224: $exec_ambush = false\n  225  eos\n  226  \n  ...\n  846              };\n  847          elsif @DEPART_SWITCH\n  848:             start_exec_script( <<-EOF\n  849                  while( running?($current_script_name) );\n  850                      if(dead?);\n  ...\n  879      def monitor_interaction()\n  880          if @MONITOR_INTERACTION\n  881:             start_exec_script( <<-eos\n  882                  def show_window(line);\n  883                      window_title = Char.name + ':' + line;\n  ...\n  938          #and line !~ /(?:^<style id=\"\"\\/><style id=\"roomDesc\"\\/>|<component id='room objs'>|<compDef id='room objs'>)/;\n  939        \n  940:         wait_for_swing_exec = <<-eos\n  941          status_tags\n  942          while line = get\n  ...\n  948          eos\n  949  \n  950:         ExecScript.start(wait_for_swing_exec, :quiet => true)\n  951          \n  952          while(1)\n  ...\n 1100          $ambusher_here = false\n 1101     \n 1102:     ExecScript.start($ambush_exec_script, :quiet => true) if $exec_ambush == false\n 1103      \n 1104      while true\n\nE:\\Google Drive\\Lich\\scripts\\bigshotRift.lic:\n   22          -Fixed First room poaching.\n   23          -Removed group poaching logic.\n   24:         -Ambush detection via Exec Script.  It will leave the room if it detects an ambush line.\n   25          -Rewrote and updated wander targeting sections. Fixes some target related bugs.\n   26:         -Moved WAIT command to exec to prevent line buffer issues and make more responsive\n   27      v.2 (2/27/2016)\n   28          -Added changes to fix incant loot issues (might work)\n   29:         -Added ability to detect renaming of bigshot without destroying exec scripts\n   30:         -Converted exec scripts to strings to allow =>quiet\n   31      v.3 (6/20/2016)\n   32          -Added tentative rift hunting. *** HIGHLY EXPERIMENTAL *** BREAKS REGULAR HUNTING\n   ..\n   52  ## **** THIS IS THE SELF-CONTAINED VERSION - DOES NOT USE COMMON REPO **** ###\n   53   \n   54: $exec_ambush = false\n   55  $bigshot_debug = false\n   56  echo $current_script_name = script.name\n   ..\n  227  end\n  228   \n  229: ### ***** Exec\n  230   \n  231: $ambush_exec_script = <<-eos\n  232: $exec_ambush = true\n  233    while(line = get)\n  234      break unless running?($current_script_name)\n  235      $ambusher_here = true if line =~ /^\\\\w+ leaps from hiding to attack|^\\\\w+ is revealed|^Be at peace|^You attempt to renew/\n  236    end\n  237: $exec_ambush = false\n  238  eos\n  239   \n  ...\n  857              };\n  858          elsif @DEPART_SWITCH\n  859:             start_exec_script( <<-EOF\n  860                  while( running?($current_script_name) );\n  861                      if(dead?);\n  ...\n  890      def monitor_interaction()\n  891          if @MONITOR_INTERACTION\n  892:             start_exec_script( <<-eos\n  893                  def show_window(line);\n  894                      window_title = Char.name + ':' + line;\n  ...\n  949          #and line !~ /(?:^<style id=\"\"\\/><style id=\"roomDesc\"\\/>|<component id='room objs'>|<compDef id='room objs'>)/;\n  950       \n  951:         wait_for_swing_exec = <<-eos\n  952          status_tags\n  953          while line = get\n  ...\n  959          eos\n  960   \n  961:         ExecScript.start(wait_for_swing_exec, :quiet => true)\n  962         \n  963          while(1)\n  ...\n 1111          $ambusher_here = false\n 1112     \n 1113:     ExecScript.start($ambush_exec_script, :quiet => true) if $exec_ambush == false\n 1114     \n 1115      while true\n ....\n 2039          -Fixed First room poaching.\n 2040          -Removed group poaching logic.\n 2041:         -Ambush detection via Exec Script.  It will leave the room if it detects an ambush line.\n 2042          -Rewrote and updated wander targeting sections. Fixes some target related bugs.\n 2043:         -Moved WAIT command to exec to prevent line buffer issues and make more responsive\n 2044      v.2 (2/27/2016)\n 2045          -Added changes to fix incant loot issues (might work)\n 2046:         -Added ability to detect renaming of bigshot without destroying exec scripts\n 2047:         -Converted exec scripts to strings to allow =>quiet\n 2048      v.3 (6/20/2016)\n 2049          -Added tentative rift hunting. *** HIGHLY EXPERIMENTAL *** BREAKS REGULAR HUNTING\n ....\n 2069  ## **** THIS IS THE SELF-CONTAINED VERSION - DOES NOT USE COMMON REPO **** ### \n 2070   \n 2071: $exec_ambush = false\n 2072  $bigshot_debug = false\n 2073  echo $current_script_name = script.name\n ....\n 2214  end\n 2215  \n 2216: ### ***** Exec\n 2217  \n 2218: $ambush_exec_script = <<-eos\n 2219: $exec_ambush = true\n 2220    while(line = get)\n 2221      break unless running?($current_script_name)\n 2222      $ambusher_here = true if line =~ /^\\\\w+ leaps from hiding to attack|^\\\\w+ is revealed/\n 2223    end\n 2224: $exec_ambush = false\n 2225  eos\n 2226  \n ....\n 2844              };\n 2845          elsif @DEPART_SWITCH\n 2846:             start_exec_script( <<-EOF\n 2847                  while( running?($current_script_name) );\n 2848                      if(dead?);\n ....\n 2877      def monitor_interaction()\n 2878          if @MONITOR_INTERACTION\n 2879:             start_exec_script( <<-eos\n 2880                  def show_window(line);\n 2881                      window_title = Char.name + ':' + line;\n ....\n 2936          #and line !~ /(?:^<style id=\"\"\\/><style id=\"roomDesc\"\\/>|<component id='room objs'>|<compDef id='room objs'>)/;\n 2937        \n 2938:         wait_for_swing_exec = <<-eos\n 2939          status_tags\n 2940          while line = get\n ....\n 2946          eos\n 2947  \n 2948:         ExecScript.start(wait_for_swing_exec, :quiet => true)\n 2949          \n 2950          while(1)\n ....\n 3098          $ambusher_here = false\n 3099     \n 3100:     ExecScript.start($ambush_exec_script, :quiet => true) if $exec_ambush == false\n 3101      \n 3102      while true\n\nE:\\Google Drive\\Lich\\scripts\\boostgem.lic:\n   18  $uncut = false\n   19  \n   20:  start_exec_script( <<-eos\n   21          while(line = get);\n   22              break unless running?('boost');\n\nE:\\Google Drive\\Lich\\scripts\\common.lic:\n   46  eos\n   47  \n   48: ExecScript.start(delayed_start_script, :quiet => false)\n   49  \n   50  # blocking put\n   ..\n  173      eos\n  174  \n  175:     ExecScript.start($check_silvers, :quiet => true)\n  176      put 'deposit all'\n  177  \n\nE:\\Google Drive\\Lich\\scripts\\common1.lic:\n   41  eos\n   42  \n   43: ExecScript.start(delayed_start_script, :quiet => false)\n   44  \n   45  # blocking put\n   ..\n  153      eos\n  154  \n  155:     ExecScript.start($check_silvers, :quiet => true)\n  156      put 'deposit all'\n  157  \n\nE:\\Google Drive\\Lich\\scripts\\common_erelim.lic:\n   25      eos\n   26  \n   27:     ExecScript.start($check_silvers, :quiet => true)\n   28      put 'deposit all'\n   29  \n\nE:\\Google Drive\\Lich\\scripts\\commonFight.lic:\n   73      eos\n   74  \n   75:     ExecScript.start(uac_line_checks, :quiet => true)\n   76    end\n   77    module_function :monitor_uac\n\nE:\\Google Drive\\Lich\\scripts\\crit-tracking.lic:\n 1288  \n 1289  ##########Two-Handed Sword###########\n 1290: '\\b(1|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b'  => { :armor_type => \"No Armor\",               :avd => 41, :df => 0.625, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1291: '\\b(2|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b'  => { :armor_type => \"Light Leather\",          :avd => 45, :df => 0.500, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1292: '\\b(3|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b'  => { :armor_type => \"Full Leather\",           :avd => 44, :df => 0.500, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1293: '\\b(4|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b'  => { :armor_type => \"Reinforced Leather\",     :avd => 43, :df => 0.500, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1294: '\\b(5|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b'  => { :armor_type => \"Double Leather\",         :avd => 42, :df => 0.500, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1295: '\\b(6|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b'  => { :armor_type => \"Leather Breastplate\",    :avd => 44, :df => 0.500, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1296: '\\b(7|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b'  => { :armor_type => \"Cuirbouili Leather\",     :avd => 42, :df => 0.500, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1297: '\\b(8|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b'  => { :armor_type => \"Studded Leather\",	     :avd => 40, :df => 0.500, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1298: '\\b(9|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b'  => { :armor_type => \"Brigandine Armor\",	     :avd => 38, :df => 0.500, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1299: '\\b(10|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b' => { :armor_type => \"Chain Mail\",	     :avd => 48, :df => 0.350, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1300: '\\b(11|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b' => { :armor_type => \"Double Chain\",	     :avd => 44, :df => 0.350, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1301: '\\b(12|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b' => { :armor_type => \"Augmented Chain\",	     :avd => 40, :df => 0.350, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1302: '\\b(13|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b' => { :armor_type => \"Chain Hauberk\",	     :avd => 36, :df => 0.350, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1303: '\\b(14|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b' => { :armor_type => \"Metal Breastplate\",	     :avd => 47, :df => 0.275, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1304: '\\b(15|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b' => { :armor_type => \"Augmented Plate\",	     :avd => 41, :df => 0.275, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1305: '\\b(16|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b' => { :armor_type => \"Half Plate\",	     :avd => 35, :df => 0.275, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1306: '\\b(17|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander)\\b' => { :armor_type => \"Full Plate\",	     :avd => 29, :df => 0.275, :wt => \"Two-Handed Sword\", :dt => \"Slash|Crush\" },\n 1307  \n 1308  ##########Battle Axe###########\n 1309: '\\b(1|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b'  => { :armor_type => \"No Armor\",        :avd => 35, :df => 0.650, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1310: '\\b(2|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b'  => { :armor_type => \"Light Leather\",    :avd => 39, :df => 0.475, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1311: '\\b(3|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b'  => { :armor_type => \"Full Leather\",    :avd => 38, :df => 0.475, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1312: '\\b(4|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b'  => { :armor_type => \"Reinforced Leather\", :avd => 37, :df => 0.475, :wt => \"Battle Axe\" , :dt => \"Slash|Crush\" },\n 1313: '\\b(5|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b'  => { :armor_type => \"Double Leather\",   :avd => 36, :df => 0.475, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1314: '\\b(6|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b'  => { :armor_type => \"Leather Breastplate\", :avd => 43, :df => 0.500, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1315: '\\b(7|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b'  => { :armor_type => \"Cuirbouili Leather\", :avd => 41, :df => 0.500, :wt => \"Battle Axe\" , :dt => \"Slash|Crush\" },\n 1316: '\\b(8|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b'  => { :armor_type => \"Studded Leather\", :avd => 39, :df => 0.500, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1317: '\\b(9|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b'  => { :armor_type => \"Brigandine Armor\", :avd => 37, :df => 0.500, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1318: '\\b(10|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b' => { :armor_type => \"Chain Mail\",	   :avd => 50, :df => 0.375, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1319: '\\b(11|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b' => { :armor_type => \"Double Chain\", :avd => 46, :df => 0.375, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1320: '\\b(12|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b' => { :armor_type => \"Augmented Chain\", :avd => 42, :df => 0.375, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1321: '\\b(13|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b' => { :armor_type => \"Chain Hauberk\", :avd => 38, :df => 0.375, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1322: '\\b(14|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b' => { :armor_type => \"Metal Breastplate\", :avd => 50, :df => 0.275, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1323: '\\b(15|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b' => { :armor_type => \"Augmented Plate\", :avd => 44, :df => 0.275, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1324: '\\b(16|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b' => { :armor_type => \"Half Plate\",	    :avd => 38, :df => 0.275, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1325: '\\b(17|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe)\\b' => { :armor_type => \"Full Plate\",	    :avd => 32, :df => 0.275, :wt => \"Battle Axe\", :dt => \"Slash|Crush\" },\n 1326  \n 1327  ##########New-Style Claidhmore###########\n ....\n 2236  }\n 2237  \n 2238: all_weapon_names = /\\b(morning star|spiked mace|holy water sprinkler|spikestar|morning\\-star|leather whip|bullwhip|cat o\\' nine tails|crowbill|cudgel|baculus|club|lisan|periperiu|shillelagh|tambara|truncheon|war club|jo stick|mace|bulawa|flanged mace|knee\\-breaker|ridgemace|studded mace|dhara|massuelle|mattina|ox mace|pernat|quadrelle|ball and chain|mace and chain|binnol|goupillon|war hammer|hammerbeak|hoolurge|horseman\\'s hammer|taavish|dagger|alfange|basilard|bodkin|bracelet dagger|butcher knife|cinquedea|crescent dagger|dirk|fantail dagger|forked dagger|kidney dagger|knife|kozuka|misericord|parazonium|pavade|poignard|pugio|scramasax|sgian achlais|spike|stiletto|tanto|main gauche|parrying dagger|rapier|bilbo|epee|foil|tock|tocke|tuck|colichemarde|fleuret|schlager|tizona|verdun|whip\\-blade|katar|gaunlet\\-sword|manople|paiscush|pata|short sword|antler sword|braquemar|baselard|chereb|costille|gladius|kris|sica|wakizashi|scimitar|cutlass|kama|kilij|palache|sabre|sapara|shamshir|yataghan|estoc|koncerz|longsword|arming sword|kaskara|langsax|langseax|sheering sword|handaxe|balta|broad axe|cleaver|crescent axe|field\\-axe|francisca|hatchet|ice axe|limb\\-cleaver|meat cleaver|miner\\'s axe|moon axe|raiding axe|sparte|taper|toporok|waraxe|backsword|broadsword|carp\\'s tongue|flyssa|goliah|katzbalger|machera|palache|schiavona|seax|spadroon|spatha|talon sword|xiphos|falchion|badelaire|craquemarte|falcata|khopesh|machete|takouba|warblade|katana|bastard sword|espadon|cresset sword|warsword|pilum|spear|angon|boar spear|cateia|falarica|gaesum|harpoon|partisan|partizan|pill|spontoon|trident|fuscina|magari\\-yari|pitch fork|zinnor|halberd|bardiche|bill|brandestoc|croc|falcastra|falx|fauchard|glaive|godendag|guisarme|half moon|hippe|pole axe|scorpion|scythe|naginata|jeddart\\-axe|beaked axe|nagimaki|voulge|hammer of kai|awl\\-pike|chest\\-ripper|korseke|military fork|ranseur|runka|scaling fork|spetum|lance|pike|sarissa|sudis|warlance|short bow|composite bow|ong bow|yumi|light crossbow|light arbalest|heavy crossbow|heavy arbalest|siege crossbow|runestaff|crook|crosier|pastoral staff|rune staff|scepter|staff|bo stick|yoribo|staff|bastard sword|espandon|cresset sword|warsword|military pick|bisacuta|flail|military flail|flamberge|war mattock|mattock|oncin|sabar|maul|footman\\'s hammer|sledgehammer|tetsubo|two\\-handed sword|battlesword|beheading sword|bidenhander|falx|executioner\\'s sword|greatsword|no\\-dachi|zweihander|battle axe|adze|balestarius|battle\\-axe|bearded axe|doloire|executioner\\'s axe|greataxe|kheten|roa\\'ter axe|tabar|woodsman\\'s axe|claidhmore|razorpaw|slap\\-slasher|paingrip|grab\\-stabber|cestus|knuckle\\-duster|hook\\-knife|pit\\knife|sabiet|tiger\\-claw|knuckle\\-blade|slash\\-fist|yierka\\-spur|spike\\-fist|blackjack|bludgeon|sap|jackblade|slash\\-jack|troll\\-claw|sai|jitte|fist\\-scythe|net|dart|bola|quoit|chakram|discus|javelin|contus|jaculum|shail|spiculum|icicle|palache)s?\\b/i\n 2239  all_shield_names = /\\b(shield)s?\\b/i\n 2240  all_armor_names = /\\b(Robe|Light Leather|Full Leather|Reinforced Leather|Double Leather|Leather Breastplate|Cuirbouili Leather|Studded Leather|Brigandine Armor|Chain Mail|Double Chain|Augmented Chain|Chain Hauberk|Metal Breastplate|Augmented Plate|Half Plate|Full Plate)s?\\b/i\n\nE:\\Google Drive\\Lich\\scripts\\crit_type_tracker.lic:\n 2120  	/Swift jab to right eye causes immediate swelling\\./ => \"RANK 6 RIGHT EYE, UAC-JAB, Damage:  8  Status Effect:  Stunned 4 Rounds  Wounds:  Rank 1\",\n 2121  	/Fist smashes into right eye, temporarily blinding the .*?\\./ => \"RANK 7 RIGHT EYE, UAC-JAB, Damage:  10  Status Effect:  Stunned 4 Rounds  Wounds:  Rank 1\",\n 2122: 	/Well\\-executed jab to the .*?'s right eye!/ => \"RANK 8 RIGHT EYE, UAC-JAB, Damage:  12  Status Effect:  Stunned 5 Rounds  Wounds:  Rank 2\",\n 2123  	/Strong strike opens a bleeding cut across the right eye socket!/ => \"RANK 9 RIGHT EYE, UAC-JAB, Damage:  15  Status Effect:  Stunned 5 Rounds  Wounds:  Rank 2 + Rank 1 head\",\n 2124  	/Vicious strike to right eye, removing it neatly!/ => \"RANK 10 RIGHT EYE, UAC-JAB, Damage:  20  Status Effect:  Stunned 8 Rounds  Wounds:  Rank 3 + Rank 2 head\",\n ....\n 2130  	/Swift jab to left eye causes immediate swelling\\./ => \"RANK 6 LEFT EYE, UAC-JAB, Damage:  8  Status Effect:  Stunned 4 Rounds  Wounds:  Rank 1\",\n 2131  	/Fist smashes into left eye, temporarily blinding the .*?\\./ => \"RANK 7 LEFT EYE, UAC-JAB, Damage:  10  Status Effect:  Stunned 4 Rounds  Wounds:  Rank 1\",\n 2132: 	/Well\\-executed jab to the .*?'s left eye!/ => \"RANK 8 LEFT EYE, UAC-JAB, Damage:  12  Status Effect:  Stunned 5 Rounds  Wounds:  Rank 2\",\n 2133  	/Strong strike opens a bleeding cut across the left eye socket!/ => \"RANK 9 LEFT EYE, UAC-JAB, Damage:  15  Status Effect:  Stunned 5 Rounds  Wounds:  Rank 2 + Rank 1 head\",\n 2134  	/Vicious strike to left eye, removing it neatly!/ => \"RANK 10 LEFT EYE, UAC-JAB, Damage:  20  Status Effect:  Stunned 8 Rounds  Wounds:  Rank 3 + Rank 2 head\",\n ....\n 2393  	/Wide swing connects with right shin, sweeping it hard to the side!/ => \"RANK 5 RIGHT LEG, UAC-PUNCH, Damage:  20  Status Effect:  Stunned 2 Rounds, Knockdown  Wounds:  Rank 2\",\n 2394  	/Strong strike leaves a bloody gash on the .*?'s right calf\\./ => \"RANK 6 RIGHT LEG, UAC-PUNCH, Damage:  24  Status Effect:  Stunned 3 Rounds, Knockdown  Wounds:  Rank 2\",\n 2395: 	/Well executed strike to the .*?'s right leg fractures the fibula\\./ => \"RANK 7 RIGHT LEG, UAC-PUNCH, Damage:  28  Status Effect:  Stunned 4 Rounds, Knockdown   Wounds:  Rank 2\",\n 2396  	/Rotating backhand cleanly snaps tibia!/ => \"RANK 8 R/L LEG, UAC-PUNCH, Damage:  32  Status Effect:  Stunned 4 Rounds, Knockdown, Favors Limb  Wounds:  Rank 2\",\n 2397  	/Furious fast fist forces fibula fracture!/ => \"RANK 9 R/L LEG, UAC-PUNCH, Damage:  36  Status Effect:  Stunned 6 Rounds, Knockdown, Amputate  Wounds:  Rank 3\",\n ....\n 2406  	/Wide swing connects with left shin, sweeping it hard to the side!/ => \"RANK 5 RIGHT LEG, UAC-PUNCH, Damage:  20  Status Effect:  Stunned 2 Rounds, Knockdown  Wounds:  Rank 2\",\n 2407  	/Strong strike leaves a bloody gash on the .*?'s left calf\\./ => \"RANK 6 RIGHT LEG, UAC-PUNCH, Damage:  24  Status Effect:  Stunned 3 Rounds, Knockdown  Wounds:  Rank 2\",\n 2408: 	/Well executed strike to the .*?'s left leg fractures the fibula\\./ => \"RANK 7 RIGHT LEG, UAC-PUNCH, Damage:  28  Status Effect:  Stunned 4 Rounds, Knockdown   Wounds:  Rank 2\",\n 2409  	/Blindingly fast hook smashes left knee beyond any hope of repair\\./ => \"RANK 10 RIGHT LEG, UAC-PUNCH, Damage:  40  Status Effect:  Stunned 7 Rounds, Knockdown, Amputate  Wounds:  Rank 3\",\n 2410  	/Awesome crossover punch shatters femur into a hundred pieces, shredding upper left leg!/ => \"RANK 11 RIGHT LEG, UAC-PUNCH, Damage:  44  Status Effect:  Stunned 8 Rounds, Knockdown, Amputate  Wounds:  Rank 3\",\n ....\n 2464  	/Slam to chest forces a grunt from the .*?!/ => \"RANK 2 CHEST, UAC-GRAPPLE, Damage:  8  Status Effect:  None  Wounds:  Rank 1\",\n 2465  	/Sudden charge to chest knocks the .*? backwards!/ => \"RANK 3 CHEST, UAC-GRAPPLE, Damage:  12  Status Effect:  Forced Sitting  Wounds:  Rank 1\",\n 2466: 	/Well\\-executed grapple pins and leaves the .*? short of breath!/ => \"RANK 4 CHEST, UAC-GRAPPLE, Damage:  16  Status Effect:  Stunned 1 Round, Slow  Wounds:  Rank 1\",\n 2467  	/Sudden balance shift throws the .*? forward!/ => \"RANK 5 CHEST, UAC-GRAPPLE, Damage:  20  Status Effect:  Stunned 2 Rounds, Knockdown  Wounds:  Rank 1\",\n 2468  	/Leaping scissor takedown puts the squeeze on the .*?!/ => \"RANK 6 CHEST, UAC-GRAPPLE, Damage:  24  Status Effect:  Stunned 3 Rounds, Knockdown  Wounds:  Rank 2\",\n ....\n 2550  	/Grab to right ankle briefly pulls the .*? off\\-balance\\./ => \"RANK 2 RIGHT LEG, UAC-GRAPPLE, Damage:  6  Status Effect:  None  Wounds:  Rank 1\",\n 2551  	/Quick move yanks right leg out from under the .*?/ => \"RANK 3 RIGHT LEG, UAC-GRAPPLE, Damage:  9  Status Effect:  Favors Limb  Wounds:  Rank 1\",\n 2552: 	/Well\\-executed reap leaves the .*? stumbling to maintain balance!/ => \"RANK 4 RIGHT LEG, UAC-GRAPPLE, Damage:  12  Status Effect:  Favors Limb  Wounds:  Rank 2\",\n 2553  	/Powerful grab twists right knee\\./ => \"RANK 5 RIGHT LEG, UAC-GRAPPLE, Damage:  15  Status Effect:  Stunned 2 Rounds, Favors Limb  Wounds:  Rank 2\",\n 2554  	/Sliding takedown buckles right leg!/ => \"RANK 6 RIGHT LEG, UAC-GRAPPLE, Damage:  18  Status Effect:  Stunned 3 Rounds, Knockdown  Wounds:  Rank 2\",\n ....\n 2644  	/Sharp kick to the side puts the .*? off\\-balance\\./ => \"RANK 4 ABDOMEN, UAC-KICK, Damage:  32  Status Effect:  Stunned 3 Rounds, Forced Sitting   Wounds:  Rank 1\",\n 2645  	/Front kick to midsection doubles the .*? over!/ => \"RANK 5 ABDOMEN, UAC-KICK, Damage:  40  Status Effect:  Stunned 4 Rounds   Wounds:  Rank 2\",\n 2646: 	/Well executed roundhouse knocks the .*? back!/ => \"RANK 6 ABDOMEN, UAC-KICK, Damage:  48  Status Effect:  Stunned 5 Rounds  Wounds:  Rank 2\",\n 2647  	/Strong kick to gut knocks the .*? back a few feet\\./ => \"RANK 7 ABDOMEN, UAC-KICK, Damage:  56  Status Effect:  Stunned 6 Rounds, Knockdown  Wounds:  Rank 3\",\n 2648  	/Well\\-aimed hook kick strikes a vital spot in the abdomen... from the inside!/ => \"RANK 8 ABDOMEN, UAC-KICK, Damage:  64  Status Effect:  FATAL  Wounds:  Rank 3\",\n ....\n 2651  	/Amazing kick goes through abdomen without slowing, sending stomach flying out through the back!/ => \"RANK 11 ABDOMEN, UAC-KICK, Damage:  88  Status Effect:  FATAL  Wounds:  Rank 3 + Rank 3 Back\",\n 2652  ##		KICK BACK\n 2653: 	/Poorly\\-executed kick impacts the back with no real force\\./ => \"RANK 0 BACK, UAC-KICK, Damage:  0  Status Effect:  None  Wounds:  None\",\n 2654  	/Kick to lower back leaves a minor bruise\\./ => \"RANK 1 BACK, UAC-KICK, Damage:  8  Status Effect:  None  Wounds:  Rank 1\",\n 2655  	/Jumping butterfly kick connects squarely with upper back\\./ => \"RANK 2 BACK, UAC-KICK, Damage:  16  Status Effect:  None  Wounds:  Rank 1\",\n\nE:\\Google Drive\\Lich\\scripts\\dr_sewers.lic:\n   93  end\n   94  \n   95: sewer_exec = <<-eos\n   96  while line = get\n   97    break unless running?('dr_sewers')\n   ..\n  108  eos\n  109  \n  110: ExecScript.start(sewer_exec, :quiet => true)\n  111  \n  112  def start_sewers\n\nE:\\Google Drive\\Lich\\scripts\\drafix scripts\\roomcreature.lic:\n   15  status_tags\n   16  room = 0\n   17: #[exec1: <compass><dir value=\"se\"/><dir value=\"sw\"/></compass>Your <pushBold/><a exist=\"12861925\" noun=\"spirit\">alpine spirit</a><popBold/> and your <pushBold/><a exist=\"12862968\" noun=\"ptarmigan\">rock ptarmigan</a><popBold/> followed.]\n   18  Settings['exclude'] ||= Set.new ['alpine spirit', 'rock ptarmigan']\n   19  while line = get\n\nE:\\Google Drive\\Lich\\scripts\\drDriver.lic:\n   14    eos\n   15  \n   16:   ExecScript.start(waggle_check, :quiet => true)\n   17  end\n   18  \n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena:\n   17  eos\n   18  \n   19: start_exec_script(check_lines, :quiet => true)\n   20  \n   21  def arenaWatch()\n\nE:\\Google Drive\\Lich\\scripts\\duskruinArena.lic:\n   86  eos\n   87  \n   88: start_exec_script(check_lines, :quiet => true)\n   89  \n   90  fput 'stance off' until stance == \"offensive\"\n\nE:\\Google Drive\\Lich\\scripts\\ego2.lic:\n  284  $ego2_my_ambush = false\n  285  $ego2_staggered_ambush = false\n  286: exec_string = \"\n  287  	hide_me\n  288  	status_tags\n  ...\n  305  	end\n  306  \"\n  307: start_exec_script(exec_string, flags={ :quiet => true })\n  308  \n  309  check_room = proc {\n\nE:\\Google Drive\\Lich\\scripts\\Elriics_Scripts\\hunt.cmd:\n 4407          		if ((\"%guild\" = \"Cleric\") && ($mana > 30)) then\n 4408          		{\n 4409: 				put #echo GREEN Debil - I'm executing a Debil cast\n 4410         				pause\n 4411         				put #var DebilitationSpell Phelim's Sanction\n ....\n 4478          		if ((\"%guild\" = \"Warrior Mage\") && ($mana > 30)) then\n 4479          		{\n 4480:                            put #echo GREEN Debil - I'm executing a Debil cast\n 4481          			if ($GH_Debilitation_Counter = 0) then\n 4482          			{\n ....\n 4524          		if ((\"%guild\" = \"Cleric\") && ($mana > 30)) then\n 4525          		{\n 4526:                            put #echo GREEN TM - I'm executing a TM attack\n 4527          			if (\"$TARGETTING_Counter\" = 0) then\n 4528          			{\n ....\n 4611          		if ((\"%guild\" = \"Warrior Mage\") && ($mana > 30)) then\n 4612          		{\n 4613:                            put #echo GREEN TM - I'm executing a TM attack\n 4614  #				put #var TargettingSpell FS.30\n 4615          			if (\"$TARGETTING_Counter\" = 0) then\n ....\n 4650  					if (\"$BG\" = \"ON\") then\n 4651  					{\n 4652: 						put #echo ORANGE WAVE - I'm executing 3 WAVES to shear BG!\n 4653  						pause\n 4654  						put wave %Monster\n ....\n 4662          				if (\"$DB\" = \"ON\") then\n 4663  					{\n 4664: 						put #echo ORANGE SPIT - I'm executing 3 SPIT to shear DB!\n 4665  						pause\n 4666  						put exhale %Monster\n\nE:\\Google Drive\\Lich\\scripts\\fbigshot.lic:\n   31          -Fixed First room poaching.\n   32          -Removed group poaching logic.\n   33:         -Ambush detection via Exec Script.  It will leave the room if it detects an ambush line.\n   34          -Rewrote and updated wander targeting sections. Fixes some target related bugs.\n   35:         -Moved WAIT command to exec to prevent line buffer issues and make more responsive\n   36  \n   37      To do:\n   ..\n   53  # FIXME: Instead of the head reiterating :ATTACK to tail every 15 seconds, have the tail loop upon :ATTACK until the room id changes\n   54   \n   55: $exec_ambush = false\n   56  $bigshot_debug = false\n   57   \n   ..\n  729              };\n  730          elsif @DEPART_SWITCH\n  731:             start_exec_script( <<-EOF\n  732                  while( running?('bigshot') );\n  733                      if(dead?);\n  ...\n  762      def monitor_interaction()\n  763          if @MONITOR_INTERACTION\n  764:             start_exec_script( <<-eos\n  765                  def show_window(line);\n  766                      window_title = Char.name + ':' + line;\n  ...\n  820          $pcs = checkpcs ? ' you(\\.|!|r? )|' + checkpcs.join('|') : 'you(\\.|!|r? )'\n  821          #and line !~ /(?:^<style id=\"\"\\/><style id=\"roomDesc\"\\/>|<component id='room objs'>|<compDef id='room objs'>)/;\n  822:         start_exec_script( <<-eos\n  823              status_tags;\n  824              while line = get;\n  825                  echo line if $bigshot_debug;\n  826:                 echo \"Inside stop_wait exec\" if $bigshot_debug;\n  827                  echo $global_target if $bigshot_debug;\n  828                  echo $pcs if $bigshot_debug;\n  ...\n  987          $ambusher_here = false\n  988     \n  989:     if $exec_ambush == false\n  990:         start_exec_script( <<-eos\n  991          while(line = get);\n  992          break unless running?('bigshot');\n  ...\n  995          eos\n  996          )\n  997:     $exec_ambush = true\n  998      end\n  999      \n\nE:\\Google Drive\\Lich\\scripts\\Gems2Jars-LE.lic:\n  380  \n  381  # We would've exited above if we didn't think we had a valid gems array. Worst case\n  382: # we should have an empty array and execute never.\n  383  gems.each{|gem|\n  384      # Special cases until we get the regexps fixed\n\nE:\\Google Drive\\Lich\\scripts\\glitch.rbw:\n   99      KEY_CREATE_SUB_KEY = 0x0004\n  100      KEY_ENUMERATE_SUB_KEYS = 0x0008\n  101:     KEY_EXECUTE = 0x20019\n  102      KEY_NOTIFY = 0x0010\n  103      KEY_QUERY_VALUE = 0x0001\n  ...\n  315        extend Fiddle::Importer\n  316        dlload 'shell32'\n  317:       extern 'int ShellExecuteEx(void*)'\n  318:       extern 'int ShellExecute(int, char*, char*, char*, char*, int)'\n  319      end\n  320:     def Win32.ShellExecuteEx(args)\n  321  #     struct = [ (SIZEOF_LONG * 15), 0, 0, 0, 0, 0, 0, SW_SHOWNORMAL, 0, 0, 0, 0, 0, 0, 0 ]\n  322        struct = [ (SIZEOF_LONG * 15), 0, 0, 0, 0, 0, 0, SW_SHOW, 0, 0, 0, 0, 0, 0, 0 ]\n  ...\n  334        end\n  335        struct = struct.pack('LLLLLLLLLLLLLLL')\n  336:       r = Shell32.ShellExecuteEx(struct)\n  337        struct = struct.unpack('LLLLLLLLLLLLLLL')\n  338        return :return => r, :hProcess => struct[struct_index[:hProcess]], :hInstApp => struct[struct_index[:hInstApp]]\n  339      end\n  340:     def Win32.ShellExecute(args)\n  341        args[:lpOperation] ||= 0\n  342        args[:lpParameters] ||= 0\n  343        args[:lpDirectory] ||= 0\n  344        args[:nShowCmd] ||= 1\n  345:       return Shell32.ShellExecute(args[:hwnd].to_i, args[:lpOperation], args[:lpFile], args[:lpParameters], args[:lpDirectory], args[:nShowCmd])\n  346      end\n  347  \n  ...\n  391        end\n  392      end\n  393:     def Win32.AdminShellExecute(args)\n  394        # open ruby/lich as admin and tell it to open something else\n  395        if not caller.any? { |c| c =~ /eval|run/ }\n  ...\n  397          if r[:return] > 0\n  398            if File.exists?(r[:lpFilename])\n  399:             Win32.ShellExecuteEx(:lpVerb => 'runas', :lpFile => r[:lpFilename], :lpParameters => \"#{File.expand_path($PROGRAM_NAME)} shellexecute #{[Marshal.dump(args)].pack('m').gsub(\"\\n\",'')}\")\n  400            end\n  401          end\n  ...\n  485  end\n  486  \n  487: if ARGV[0] == 'shellexecute'\n  488    args = Marshal.load(ARGV[1].unpack('m')[0])\n  489:   Win32.ShellExecute(:lpOperation => args[:op], :lpFile => args[:file], :lpDirectory => args[:dir], :lpParameters => args[:params])\n  490    exit\n  491  end\n  ...\n  503            verb = (Win32.isXP? ? 'open' : 'runas')\n  504            # fixme: using --source http://rubygems.org to avoid https because it has been failing to validate the certificate on Windows\n  505:           r = Win32.ShellExecuteEx(:fMask => Win32::SEE_MASK_NOCLOSEPROCESS, :lpVerb => verb, :lpFile => \"#{ruby_bin_dir}\\\\gem.bat\", :lpParameters => 'install sqlite3 --source http://rubygems.org --no-ri --no-rdoc')\n  506            if r[:return] > 0\n  507              pid = r[:hProcess]\n  ...\n  509              r = Win32.MessageBox(:lpText => \"Install finished.  Lich will restart now.\", :lpCaption => \"Lich v#{LICH_VERSION}\", :uType => Win32::MB_OKCANCEL)\n  510            else\n  511:             # ShellExecuteEx failed: this seems to happen with an access denied error even while elevated on some random systems\n  512:             r = Win32.ShellExecute(:lpOperation => verb, :lpFile => \"#{ruby_bin_dir}\\\\gem.bat\", :lpParameters => 'install sqlite3 --source http://rubygems.org --no-ri --no-rdoc')\n  513              if r <= 32\n  514:               Win32.MessageBox(:lpText => \"error: failed to start the sqlite3 installer\\n\\nfailed command: Win32.ShellExecute(:lpOperation => #{verb.inspect}, :lpFile => \\\"#{ruby_bin_dir}\\\\gem.bat\\\", :lpParameters => \\\"install sqlite3 --source http://rubygems.org --no-ri --no-rdoc\\\")\\n\\nerror code: #{Win32.GetLastError}\", :lpCaption => \"Lich v#{LICH_VERSION}\", :uType => (Win32::MB_OK | Win32::MB_ICONERROR))\n  515                exit\n  516              end\n  ...\n  519            if r == Win32::IDIOK\n  520              if File.exists?(\"#{ruby_bin_dir}\\\\rubyw.exe\")\n  521:               Win32.ShellExecute(:lpOperation => 'open', :lpFile => \"#{ruby_bin_dir}\\\\rubyw.exe\", :lpParameters => \"\\\"#{File.expand_path($PROGRAM_NAME)}\\\"\")\n  522              else\n  523                Win32.MessageBox(:lpText => \"error: failed to find rubyw.exe; can't restart Lich for you\", :lpCaption => \"Lich v#{LICH_VERSION}\", :uType => (Win32::MB_OK | Win32::MB_ICONERROR))\n  ...\n  555            if File.exists?(\"#{ruby_bin_dir}\\\\gem.bat\")\n  556              verb = (Win32.isXP? ? 'open' : 'runas')\n  557:             r = Win32.ShellExecuteEx(:fMask => Win32::SEE_MASK_NOCLOSEPROCESS, :lpVerb => verb, :lpFile => \"#{ruby_bin_dir}\\\\gem.bat\", :lpParameters => 'install cairo:1.14.3 gtk2:2.2.5 --no-ri --no-rdoc')\n  558              if r[:return] > 0\n  559                pid = r[:hProcess]\n  ...\n  561                r = Win32.MessageBox(:lpText => \"Install finished.  Lich will restart now.\", :lpCaption => \"Lich v#{LICH_VERSION}\", :uType => Win32::MB_OKCANCEL)\n  562              else\n  563:               # ShellExecuteEx failed: this seems to happen with an access denied error even while elevated on some random systems\n  564:               r = Win32.ShellExecute(:lpOperation => verb, :lpFile => \"#{ruby_bin_dir}\\\\gem.bat\", :lpParameters => 'install cairo:1.14.3 gtk2:2.2.5 --no-ri --no-rdoc')\n  565                if r <= 32\n  566:                 Win32.MessageBox(:lpText => \"error: failed to start the gtk2 installer\\n\\nfailed command: Win32.ShellExecute(:lpOperation => #{verb.inspect}, :lpFile => \\\"#{ruby_bin_dir}\\\\gem.bat\\\", :lpParameters => \\\"install cairo:1.14.3 gtk2:2.2.5 --no-ri --no-rdoc\\\")\\n\\nerror code: #{Win32.GetLastError}\", :lpCaption => \"Lich v#{LICH_VERSION}\", :uType => (Win32::MB_OK | Win32::MB_ICONERROR))\n  567                  exit\n  568                end\n  ...\n  571              if r == Win32::IDIOK\n  572                if File.exists?(\"#{ruby_bin_dir}\\\\rubyw.exe\")\n  573:                 Win32.ShellExecute(:lpOperation => 'open', :lpFile => \"#{ruby_bin_dir}\\\\rubyw.exe\", :lpParameters => \"\\\"#{File.expand_path($PROGRAM_NAME)}\\\"\")\n  574                else\n  575                  Win32.MessageBox(:lpText => \"error: failed to find rubyw.exe; can't restart Lich for you\", :lpCaption => \"Lich v#{LICH_VERSION}\", :uType => (Win32::MB_OK | Win32::MB_ICONERROR))\n  ...\n  657    def Lich.init_db\n  658      begin\n  659:       Lich.db.execute(\"CREATE TABLE IF NOT EXISTS script_setting (script TEXT NOT NULL, name TEXT NOT NULL, value BLOB, PRIMARY KEY(script, name));\")\n  660:       Lich.db.execute(\"CREATE TABLE IF NOT EXISTS script_auto_settings (script TEXT NOT NULL, scope TEXT, hash BLOB, PRIMARY KEY(script, scope));\")\n  661:       Lich.db.execute(\"CREATE TABLE IF NOT EXISTS lich_settings (name TEXT NOT NULL, value TEXT, PRIMARY KEY(name));\")\n  662:       Lich.db.execute(\"CREATE TABLE IF NOT EXISTS uservars (scope TEXT NOT NULL, hash BLOB, PRIMARY KEY(scope));\")\n  663:       Lich.db.execute(\"CREATE TABLE IF NOT EXISTS trusted_scripts (name TEXT NOT NULL);\")\n  664:       Lich.db.execute(\"CREATE TABLE IF NOT EXISTS simu_game_entry (character TEXT NOT NULL, game_code TEXT NOT NULL, data BLOB, PRIMARY KEY(character, game_code));\")\n  665:       Lich.db.execute(\"CREATE TABLE IF NOT EXISTS enable_inventory_boxes (player_id INTEGER NOT NULL, PRIMARY KEY(player_id));\")\n  666      rescue SQLite3::BusyException\n  667        sleep 0.1\n  ...\n  799            file = ((r[:return] > 0) ? r[:lpFilename] : 'rubyw.exe')\n  800            params = \"#{$PROGRAM_NAME.split(/\\/|\\\\/).last} --link-to-sge\"\n  801:           r = Win32.ShellExecuteEx(:lpVerb => 'runas', :lpFile => file, :lpDirectory => LICH_DIR.tr(\"/\", \"\\\\\"), :lpParameters => params, :fMask => Win32::SEE_MASK_NOCLOSEPROCESS)\n  802            if r[:return] > 0\n  803              process_id = r[:hProcess]\n  ...\n  805              sleep 3\n  806            else\n  807:             Win32.ShellExecute(:lpOperation => 'runas', :lpFile => file, :lpDirectory => LICH_DIR.tr(\"/\", \"\\\\\"), :lpParameters => params)\n  808              sleep 6\n  809            end\n  ...\n  854            file = ((r[:return] > 0) ? r[:lpFilename] : 'rubyw.exe')\n  855            params = \"#{$PROGRAM_NAME.split(/\\/|\\\\/).last} --unlink-from-sge\"\n  856:           r = Win32.ShellExecuteEx(:lpVerb => 'runas', :lpFile => file, :lpDirectory => LICH_DIR.tr(\"/\", \"\\\\\"), :lpParameters => params, :fMask => Win32::SEE_MASK_NOCLOSEPROCESS)\n  857            if r[:return] > 0\n  858              process_id = r[:hProcess]\n  ...\n  860              sleep 3\n  861            else\n  862:             Win32.ShellExecute(:lpOperation => 'runas', :lpFile => file, :lpDirectory => LICH_DIR.tr(\"/\", \"\\\\\"), :lpParameters => params)\n  863              sleep 6\n  864            end\n  ...\n  910            file = ((r[:return] > 0) ? r[:lpFilename] : 'rubyw.exe')\n  911            params = \"#{$PROGRAM_NAME.split(/\\/|\\\\/).last} --link-to-sal\"\n  912:           r = Win32.ShellExecuteEx(:lpVerb => 'runas', :lpFile => file, :lpDirectory => LICH_DIR.tr(\"/\", \"\\\\\"), :lpParameters => params, :fMask => Win32::SEE_MASK_NOCLOSEPROCESS)\n  913            if r[:return] > 0\n  914              process_id = r[:hProcess]\n  ...\n  916              sleep 3\n  917            else\n  918:             Win32.ShellExecute(:lpOperation => 'runas', :lpFile => file, :lpDirectory => LICH_DIR.tr(\"/\", \"\\\\\"), :lpParameters => params)\n  919              sleep 6\n  920            end\n  ...\n  965            file = ((r[:return] > 0) ? r[:lpFilename] : 'rubyw.exe')\n  966            params = \"#{$PROGRAM_NAME.split(/\\/|\\\\/).last} --unlink-from-sal\"\n  967:           r = Win32.ShellExecuteEx(:lpVerb => 'runas', :lpFile => file, :lpDirectory => LICH_DIR.tr(\"/\", \"\\\\\"), :lpParameters => params, :fMask => Win32::SEE_MASK_NOCLOSEPROCESS)\n  968            if r[:return] > 0\n  969              process_id = r[:hProcess]\n  ...\n  971              sleep 3\n  972            else\n  973:             Win32.ShellExecute(:lpOperation => 'runas', :lpFile => file, :lpDirectory => LICH_DIR.tr(\"/\", \"\\\\\"), :lpParameters => params)\n  974              sleep 6\n  975            end\n  ...\n 1084      if enabled\n 1085        begin\n 1086:         Lich.db.execute('INSERT OR REPLACE INTO enable_inventory_boxes values(?);', player_id.to_i)\n 1087        rescue SQLite3::BusyException\n 1088          sleep 0.1\n ....\n 1091      else\n 1092        begin\n 1093:         Lich.db.execute('DELETE FROM enable_inventory_boxes where player_id=?;', player_id.to_i)\n 1094        rescue SQLite3::BusyException\n 1095          sleep 0.1\n ....\n 1110    def Lich.win32_launch_method=(val)\n 1111      begin\n 1112:       Lich.db.execute(\"INSERT OR REPLACE INTO lich_settings(name,value) values('win32_launch_method',?);\", val.to_s.encode('UTF-8'))\n 1113      rescue SQLite3::BusyException\n 1114        sleep 0.1\n ....\n 1993        next nil\n 1994      end\n 1995:     if script.class == ExecScript\n 1996:       respond \"--- Lich: error: Setting.load: exec scripts can't have settings\"\n 1997        respond $!.backtrace[0..2]\n 1998        exit\n ....\n 2040        next nil\n 2041      end\n 2042:     if script.class == ExecScript\n 2043:       respond \"--- Lich: error: Setting.load: exec scripts can't have settings\"\n 2044        respond $!.backtrace[0..2]\n 2045        exit\n ....\n 2060      if hash.length > 1\n 2061        begin\n 2062:         Lich.db.execute('BEGIN')\n 2063        rescue SQLite3::BusyException\n 2064          sleep 0.1\n ....\n 2070          if value.nil?\n 2071            begin\n 2072:             Lich.db.execute('DELETE FROM script_setting WHERE script=? AND name=?;', script.name.encode('UTF-8'), setting.encode('UTF-8'))\n 2073            rescue SQLite3::BusyException\n 2074              sleep 0.1\n ....\n 2078            v = SQLite3::Blob.new(Marshal.dump(value))\n 2079            begin\n 2080:             Lich.db.execute('INSERT OR REPLACE INTO script_setting(script,name,value) VALUES(?,?,?);', script.name.encode('UTF-8'), setting.encode('UTF-8'), v)\n 2081            rescue SQLite3::BusyException\n 2082              sleep 0.1\n ....\n 2091      if hash.length > 1\n 2092        begin\n 2093:         Lich.db.execute('END')\n 2094        rescue SQLite3::BusyException\n 2095          sleep 0.1\n ....\n 2104        next nil\n 2105      end\n 2106:     if script.class == ExecScript\n 2107:       respond \"--- Lich: error: Setting.load: exec scripts can't have settings\"\n 2108        respond $!.backtrace[0..2]\n 2109        exit\n 2110      end\n 2111      begin\n 2112:       rows = Lich.db.execute('SELECT name FROM script_setting WHERE script=?;', script.name.encode('UTF-8'))\n 2113      rescue SQLite3::BusyException\n 2114        sleep 0.1\n ....\n 2203              unless sql_began\n 2204                begin\n 2205:                 Lich.db.execute('BEGIN')\n 2206                rescue SQLite3::BusyException\n 2207                  sleep 0.1\n ....\n 2212              blob = SQLite3::Blob.new(Marshal.dump(data))\n 2213              begin\n 2214:               Lich.db.execute('INSERT OR REPLACE INTO script_auto_settings(script,scope,hash) VALUES(?,?,?);', script_name.encode('UTF-8'), scope.encode('UTF-8'), blob)\n 2215              rescue SQLite3::BusyException\n 2216                sleep 0.1\n ....\n 2230        if sql_began\n 2231          begin\n 2232:           Lich.db.execute('END')\n 2233          rescue SQLite3::BusyException\n 2234            sleep 0.1\n ....\n 2326            blob = SQLite3::Blob.new(Marshal.dump(@@vars))\n 2327            begin\n 2328:             Lich.db.execute('INSERT OR REPLACE INTO uservars(scope,hash) VALUES(?,?);', \"#{XMLData.game}:#{XMLData.name}\".encode('UTF-8'), blob)\n 2329            rescue SQLite3::BusyException\n 2330              sleep 0.1\n ....\n 2382  #\n 2383  # script bindings are convoluted, but don't change them without testing if:\n 2384: #    class methods such as Script.start and ExecScript.start become accessible without specifying the class name (which is just a syptom of a problem that will break scripts)\n 2385  #    local variables become shared between scripts\n 2386  #    local variable 'file' is shared between scripts, even though other local variables aren't\n ....\n 2618          respond '--- error: Script.db cannot be used by a script named lich'\n 2619          nil\n 2620:       elsif script.class == ExecScript\n 2621:         respond '--- error: Script.db cannot be used by exec scripts'\n 2622          nil\n 2623        else\n ....\n 2637          respond '--- error: Script.open_file cannot be used by a script named entry'\n 2638          nil\n 2639:       elsif script.class == ExecScript\n 2640:         respond '--- error: Script.open_file cannot be used by exec scripts'\n 2641          nil\n 2642        elsif ext.downcase == 'db3'\n ....\n 2790      if ($SAFE == 0) and not caller.any? { |c| c =~ /eval|run/ }\n 2791        begin\n 2792:         Lich.db.execute('INSERT OR REPLACE INTO trusted_scripts(name) values(?);', script_name.encode('UTF-8'))\n 2793        rescue SQLite3::BusyException\n 2794          sleep 0.1\n ....\n 2810      if there\n 2811        begin\n 2812:         Lich.db.execute('DELETE FROM trusted_scripts WHERE name=?;', script_name.encode('UTF-8'))\n 2813        rescue SQLite3::BusyException\n 2814          sleep 0.1\n ....\n 2823      list = Array.new\n 2824      begin\n 2825:       Lich.db.execute('SELECT name FROM trusted_scripts;').each { |name| list.push(name[0]) }\n 2826      rescue SQLite3::BusyException\n 2827        sleep 0.1\n ....\n 3061  end\n 3062  \n 3063: class ExecScript<Script\n 3064:   @@name_exec_mutex = Mutex.new\n 3065    @@elevated_start = proc { |cmd_data, options|\n 3066      options[:trusted] = false\n 3067:     unless new_script = ExecScript.new(cmd_data, options)\n 3068:       respond '--- Lich: failed to start exec script'\n 3069        return false\n 3070      end\n ....\n 3129          end\n 3130        else\n 3131:         respond '--- Lich: error: ExecScript.start: out of cheese'\n 3132        end\n 3133      }\n ....\n 3136    }\n 3137    attr_reader :cmd_data\n 3138:   def ExecScript.start(cmd_data, options={})\n 3139      options = { :quiet => true } if options == true\n 3140      if $SAFE > 0\n 3141        @@elevated_start.call(cmd_data, options)\n 3142      else\n 3143:       unless new_script = ExecScript.new(cmd_data, options)\n 3144:         respond '--- Lich: failed to start exec script'\n 3145          return false\n 3146        end\n ....\n 3211            end\n 3212          else\n 3213:           respond 'start_exec_script screwed up...'\n 3214          end\n 3215        }\n ....\n 3246      @match_stack_labels = Array.new\n 3247      @match_stack_strings = Array.new\n 3248:     num = '1'; num.succ! while @@running.any? { |s| s.name == \"exec#{num}\" }\n 3249:     @name = \"exec#{num}\"\n 3250      @@running.push(self)\n 3251      self\n 3252    end\n 3253    def get_next_label\n 3254:     echo 'goto labels are not available in exec scripts.'\n 3255      nil\n 3256    end\n ....\n 4891    if block.nil?\n 4892      if !theproc.respond_to? :call\n 4893:       respond \"`watchhealth' was not given a block or a proc to execute!\"\n 4894        return nil\n 4895      else\n ....\n 6613          end\n 6614        end\n 6615:     elsif cmd =~ /^(?:exec|e)(q)? (.+)$/\n 6616        cmd_data = $2\n 6617        if $1.nil?\n 6618:         ExecScript.start(cmd_data, flags={ :quiet => false, :trusted => true })\n 6619        else\n 6620:         ExecScript.start(cmd_data, flags={ :quiet => true, :trusted => true })\n 6621        end\n 6622      elsif cmd =~ /^trust\\s+(.*)/i\n ....\n 6674        respond \"   #{$clean_lich_char}la                        ''\"\n 6675        respond\n 6676:       respond \"   #{$clean_lich_char}exec <code>               executes the code as if it was in a script\"\n 6677        respond \"   #{$clean_lich_char}e <code>                  ''\"\n 6678:       respond \"   #{$clean_lich_char}execq <code>              same as #{$clean_lich_char}exec but without the script active and exited messages\"\n 6679        respond \"   #{$clean_lich_char}eq <code>                 ''\"\n 6680        respond\n ....\n 9316        args.concat [\"--reconnect-delay=#{reconnect_delay+reconnect_step}+#{reconnect_step}\"]\n 9317      end\n 9318:     Lich.log \"exec args.join(' '): exec #{args.join(' ')}\"\n 9319:     exec args.join(' ')\n 9320    end\n 9321  }\n ....\n 9624  end\n 9625  \n 9626: def start_exec_script(cmd_data, options=Hash.new)\n 9627:   ExecScript.start(cmd_data, options)\n 9628  end\n 9629  \n ....\n 10047    Script.trust('narost')\n 10048    begin\n 10049:     Lich.db.execute(\"INSERT INTO lich_settings(name,value) VALUES('did_trusted_defaults', 'yes');\")\n 10050    rescue SQLite3::BusyException\n 10051      sleep 0.1\n .....\n 10128  if did_import.nil?\n 10129    begin\n 10130:     Lich.db.execute('BEGIN')\n 10131    rescue SQLite3::BusyException\n 10132      sleep 0.1\n .....\n 10134    end\n 10135    begin\n 10136:     Lich.db.execute(\"INSERT INTO lich_settings(name,value) VALUES('imported_44_data', 'yes');\")\n 10137    rescue SQLite3::BusyException\n 10138      sleep 0.1\n .....\n 10147      blob = SQLite3::Blob.new(data)\n 10148      begin\n 10149:       Lich.db.execute(\"INSERT OR REPLACE INTO script_auto_settings(script,scope,hash) VALUES(?,':',?);\", s.encode('UTF-8'), blob)\n 10150      rescue SQLite3::BusyException\n 10151        sleep 0.1\n .....\n 10162        blob = SQLite3::Blob.new(data)\n 10163        begin\n 10164:         Lich.db.execute('INSERT OR REPLACE INTO script_auto_settings(script,scope,hash) VALUES(?,?,?);', s.encode('UTF-8'), game.encode('UTF-8'), blob)\n 10165        rescue SQLite3::BusyException\n 10166          sleep 0.1\n .....\n 10177          blob = SQLite3::Blob.new(data)\n 10178          begin\n 10179:           Lich.db.execute('INSERT OR REPLACE INTO script_auto_settings(script,scope,hash) VALUES(?,?,?);', s.encode('UTF-8'), \"#{game}:#{char}\".encode('UTF-8'), blob)\n 10180          rescue SQLite3::BusyException\n 10181            sleep 0.1\n .....\n 10188          blob = SQLite3::Blob.new(File.open(\"#{DATA_DIR}/#{game}/#{char}/uservars.dat\", 'rb') { |f| f.read })\n 10189          begin\n 10190:           Lich.db.execute('INSERT OR REPLACE INTO uservars(scope,hash) VALUES(?,?);', \"#{game}:#{char}\".encode('UTF-8'), blob)\n 10191          rescue SQLite3::BusyException\n 10192            sleep 0.1\n .....\n 10199    }\n 10200    begin\n 10201:     Lich.db.execute('END')\n 10202    rescue SQLite3::BusyException\n 10203      sleep 0.1\n .....\n 10207    characters = Array.new\n 10208    begin\n 10209:     Lich.db.execute(\"SELECT DISTINCT(scope) FROM script_auto_settings;\").each { |row| characters.push(row[0]) if row[0] =~ /^.+:.+$/ }\n 10210    rescue SQLite3::BusyException\n 10211      sleep 0.1\n .....\n 10219      if favs.class == Hash\n 10220        begin\n 10221:         Lich.db.execute('BEGIN')\n 10222        rescue SQLite3::BusyException\n 10223          sleep 0.1\n .....\n 10230          if scope == 'global'\n 10231            begin\n 10232:             Lich.db.execute(\"INSERT OR REPLACE INTO script_auto_settings(script,scope,hash) VALUES('autostart',':',?);\", blob)\n 10233            rescue SQLite3::BusyException\n 10234              sleep 0.1\n .....\n 10238            characters.find_all { |c| c =~ /^.+:#{scope}$/ }.each { |c|\n 10239              begin\n 10240:               Lich.db.execute(\"INSERT OR REPLACE INTO script_auto_settings(script,scope,hash) VALUES('autostart',?,?);\", c.encode('UTF-8'), blob)\n 10241              rescue SQLite3::BusyException\n 10242                sleep 0.1\n .....\n 10247        }\n 10248        begin\n 10249:         Lich.db.execute('END')\n 10250        rescue SQLite3::BusyException\n 10251          sleep 0.1\n .....\n 10257      db = SQLite3::Database.new(\"#{DATA_DIR}/alias.db3\")\n 10258      begin\n 10259:       db.execute(\"CREATE TABLE IF NOT EXISTS global (trigger TEXT NOT NULL, target TEXT NOT NULL, UNIQUE(trigger));\")\n 10260      rescue SQLite3::BusyException\n 10261        sleep 0.1\n .....\n 10263      end\n 10264      begin\n 10265:       db.execute('BEGIN')\n 10266      rescue SQLite3::BusyException\n 10267        sleep 0.1\n .....\n 10277          tables.each { |t|\n 10278            begin\n 10279:             db.execute(\"CREATE TABLE IF NOT EXISTS #{t} (trigger TEXT NOT NULL, target TEXT NOT NULL, UNIQUE(trigger));\")\n 10280            rescue SQLite3::BusyException\n 10281              sleep 0.1\n .....\n 10286            tables.each { |t|\n 10287              begin\n 10288:               db.execute(\"INSERT OR REPLACE INTO #{t} (trigger,target) VALUES(?,?);\", trigger.gsub(/\\\\(.)/) { $1 }.encode('UTF-8'), target.encode('UTF-8'))\n 10289              rescue SQLite3::BusyException\n 10290                sleep 0.1\n .....\n 10296      end\n 10297      begin\n 10298:       db.execute('END')\n 10299      rescue SQLite3::BusyException\n 10300        sleep 0.1\n .....\n 10303  \n 10304      begin\n 10305:       Lich.db.execute('BEGIN')\n 10306      rescue SQLite3::BusyException\n 10307        sleep 0.1\n .....\n 10310      trusted.each { |script_name|\n 10311        begin\n 10312:         Lich.db.execute('INSERT OR REPLACE INTO trusted_scripts(name) values(?);', script_name.encode('UTF-8'))\n 10313        rescue SQLite3::BusyException\n 10314          sleep 0.1\n .....\n 10317      }\n 10318      begin\n 10319:       Lich.db.execute('END')\n 10320      rescue SQLite3::BusyException\n 10321        sleep 0.1\n .....\n 10353        file = dir_file.sub(/^.*[\\\\\\/]/, '')\n 10354        operation = (Win32.isXP? ? 'open' : 'runas')\n 10355:       Win32.ShellExecute(:lpOperation => operation, :lpFile => file, :lpDirectory => dir, :lpParameters => param)\n 10356        if r < 33\n 10357:         Lich.log \"error: Win32.ShellExecute returned #{r}; Win32.GetLastError: #{Win32.GetLastError}\"\n 10358        end\n 10359      elsif defined?(Wine)\n .....\n 10861  \n 10862        launch_option = Gtk::ComboBox.new(is_text_only = true)\n 10863:       launch_option.append_text('ShellExecute')\n 10864        launch_option.append_text('spawn')\n 10865        launch_option.append_text('system')\n .....\n 11939              spawn launcher_cmd\n 11940            elsif method_num == 1\n 11941:             Lich.log \"info: launcher_cmd: Win32.ShellExecute(:lpOperation => \\\"open\\\", :lpFile => #{file.inspect}, :lpDirectory => #{dir.inspect}, :lpParameters => #{param.inspect})\"\n 11942:             Win32.ShellExecute(:lpOperation => 'open', :lpFile => file, :lpDirectory => dir, :lpParameters => param)\n 11943            elsif method_num == 2\n 11944:             Lich.log \"info: launcher_cmd: Win32.ShellExecuteEx(:lpOperation => \\\"runas\\\", :lpFile => #{file.inspect}, :lpDirectory => #{dir.inspect}, :lpParameters => #{param.inspect})\"\n 11945:             Win32.ShellExecuteEx(:lpOperation => 'runas', :lpFile => file, :lpDirectory => dir, :lpParameters => param)\n 11946            elsif method_num == 3\n 11947:             Lich.log \"info: launcher_cmd: Win32.AdminShellExecute(:op => \\\"open\\\", :file => #{file.inspect}, :dir => #{dir.inspect}, :params => #{param.inspect})\"\n 11948:             Win32.AdminShellExecute(:op => 'open', :file => file, :dir => dir, :params => param)\n 11949            elsif method_num == 4\n 11950:             Lich.log \"info: launcher_cmd: Win32.AdminShellExecute(:op => \\\"runas\\\", :file => #{file.inspect}, :dir => #{dir.inspect}, :params => #{param.inspect})\"\n 11951:             Win32.AdminShellExecute(:op => 'runas', :file => file, :dir => dir, :params => param)\n 11952            else # method_num == 5\n 11953              file = File.expand_path(sal_filename).tr('/', \"\\\\\")\n 11954              dir = File.expand_path(File.dirname(sal_filename)).tr('/', \"\\\\\")\n 11955:             Lich.log \"info: launcher_cmd: Win32.ShellExecute(:lpOperation => \\\"open\\\", :lpFile => #{file.inspect}, :lpDirectory => #{dir.inspect})\"\n 11956:             Win32.ShellExecute(:lpOperation => 'open', :lpFile => file, :lpDirectory => dir)\n 11957            end\n 11958          elsif defined?(Wine)\n\nE:\\Google Drive\\Lich\\scripts\\go2.lic:\n  917  if setting_stop_for_dead and (setting_typeahead > 0) and (setting_delay <= 0)\n  918  	$go2_see_dead_people = false\n  919: 	exec_string = \"\n  920  		hide_me\n  921  		status_tags\n  ...\n  928  		end\n  929  	\"\n  930: 	start_exec_script(exec_string, flags={ :quiet => true })\n  931  end\n  932  \n\nE:\\Google Drive\\Lich\\scripts\\killcounter.lic:\n  168  		exit\n  169  end\n  170: creature_list=[[\"zombie rolton\",1],[\"giant ant\",1],[\"black-winged daggerbeak\",1  ],[\"fire ant\",1],[\"fanged rodent\",1],[\"giant rat\",1],[\"spotted gnarp\",1],[\"young grass snake\",1  ],[\"lesser ghoul\",1],[\"black rolton\",1],[\"mountain rolton\",1],[\"carrion worm\",1],[\"slimy little grub\",1  ],[\"pale crab\",2],[\"thyril\",2],[\"spotted gak\",2],[\"brown gak\",2],[\"lesser frost shade\",2  ],[\"cave gnome\",2],[\"big ugly kobold\",2],[\"moaning phantom\",2],[\"sea nymph\",2],[\"fanged goblin\",2],[\"Mistydeep siren\",2],[\"lesser shade\",2],[\"rabid squirrel\",2],[\"mountain snowcat\",3  ],[\"kobold shepherd\",3],[\"striped gak\",3],[\"Bresnahanini rolton\",3  ],[\"troglodyte\",3],[\"cave gnoll\",3],[\"striped relnak\",3],[\"spotted velnalin\",3  ],[\"greater ghoul\",3],[\"white vysan\",3],[\"greater ice spider\",3  ],[\"dark vysan\",3],[\"velnalin\",3],[\"cave nipper\",3],[\"ice skeleton\",3],[\"relnak\",3],[\"fire salamander\",3],[\"water moccasin\",4],[\"mongrel kobold\",4],[\"urgh\",4],[\"ridge orc\",4],[\"fanged viper\",4],[\"cobra\",4],[\"spotted leaper\",4],[\"black urgh\",4],[\"whiptail\",4],[\"revenant\",4],[\"mongrel hobgoblin\",5  ],[\"night golem\",5],[\"mist wraith\",5],[\"coyote\",5],[\"bobcat\",5],[\"water witch\",5],[\"dark apparition\",5],[\"nasty little gremlin\",5  ],[\"spotted lynx\",6],[\"monkey\",6],[\"lesser orc\",6],[\"lesser mummy\",6],[\"snowy cockatrice\",6  ],[\"leaper\",6],[\"cockatrice\",6],[\"firephantom\",6],[\"spectral fisherman\",6  ],[\"hobgoblin shaman\",7  ],[\"blood eagle\",7],[\"lesser burrow orc\",7  ],[\"lesser red orc\",7],[\"shelfae soldier\",7],[\"greater kappa\",7],[\"crystal crab\",8],[\"mottled thrak\",8],[\"greater orc\",8],[\"greater spider\",8],[\"albino tomb spider\",8  ],[\"greater burrow orc\",8  ],[\"bone golem\",8],[\"crocodile\",9],[\"brown spinner\",9],[\"snow spectre\",9],[\"death dirge\",9],[\"rabid guard dog\",10],[\"raider orc\",10],[\"gnoll worker\",10],[\"giant marmot\",10],[\"cave worm\",10],[\"werebear\",10],[\"great boar\",10],[\"wall guardian\",11],[\"Neartofar orc\",11],[\"shelfae chieftain\",11 ],[\"dark orc\",12],[\"crystal golem\",12],[\"deranged sentry\",13],[\"tawny brindlecat\",13 ],[\"great stag\",13],[\"plumed cockatrice\",13 ],[\"gnoll thief\",13],[\"darkwoode\",13],[\"giant weasel\",14],[\"black boar\",14],[\"Agresh troll scout\",14 ],[\"swamp troll\",14],[\"shadowy spectre\",14],[\"brown boar\",14],[\"silverback orc\",14],[\"great brown bear\",14 ],[\"forest troll\",14],[\"grey orc\",14],[\"wolfshade\",15],[\"ridgeback boar\",15],[\"luminescent arachnid\",15 ],[\"gnoll ranger\",15],[\"Neartofar troll\",15],[\"tomb wight\",15],[\"black leopard\",15],[\"arctic puma\",15],[\"humpbacked puma\",15],[\"panther\",15],[\"large ogre\",15],[\"puma\",15],[\"red bear\",16],[\"wind witch\",16],[\"plains orc warrior\",16 ],[\"mongrel wolfhound\",16 ],[\"cave troll\",16],[\"Agresh bear\",16],[\"Agresh troll warrior\",16 ],[\"phosphorescent worm\",16 ],[\"mongrel troll\",16],[\"fire guardian\",16],[\"hill troll\",16],[\"banded rattlesnake\",16 ],[\"mountain ogre\",16],[\"ghost wolf\",16],[\"ghoul master\",16],[\"fire rat\",16],[\"black bear\",16],[\"giant veaba\",17],[\"mountain troll\",17],[\"plains orc scout\",17 ],[\"forest ogre\",17],[\"gnoll guard\",17],[\"plains ogre\",17],[\"spiked cavern urchin\",17 ],[\"black panther\",17],[\"dark shambler\",17],[\"mountain goat\",17],[\"krolvin mercenary\",17 ],[\"mountain lion\",18],[\"nedum vereri\",18],[\"cave lizard\",18],[\"shelfae warlord\",18],[\"rotting krolvin pirate\",18 ],[\"thunder troll\",18],[\"greenwing hornet\",18 ],[\"ghostly warrior\",18],[\"plains lion\",18],[\"plains orc shaman\",18 ],[\"bighorn sheep\",18],[\"elder ghoul master\",18 ],[\"war troll\",18],[\"fire cat\",18],[\"krolvin warrior\",19],[\"striped warcat\",20],[\"gnoll priest\",20],[\"major spider\",20],[\"ogre warrior\",20],[\"Agresh troll chieftain\",20 ],[\"wood wight\",20],[\"massive grahnk\",20],[\"steel golem\",20],[\"arch wight\",20],[\"cave bear\",21],[\"plains orc chieftain\",21 ],[\"ancient ghoul master\",21 ],[\"Arachne servant\",21],[\"crested basilisk\",22 ],[\"cougar\",22],[\"dark panther\",22],[\"warthog\",22],[\"nonomino\",23],[\"niirsha\",23],[\"fenghai\",23],[\"crazed zombie\",23],[\"rotting woodsman\",23 ],[\"centaur\",23],[\"Arachne acolyte\",23],[\"tree viper\",24],[\"giant albino scorpion\",24 ],[\"arctic wolverine\",24 ],[\"wolverine\",24],[\"veteran reiver\",24],[\"burly reiver\",24],[\"ice hound\",24],[\"carceris\",25],[\"gnoll jarl\",25],[\"krolvin warfarer\",25 ],[\"spectral monk\",25],[\"sacristan spirit\",25],[\"Arachne priestess\",26 ],[\"Arachne priest\",26],[\"jungle troll\",26],[\"tree spirit\",26],[\"snow leopard\",27],[\"Grutik savage\",27],[\"troll chieftain\",27],[\"cyclops\",27],[\"lesser stone gargoyle\",27 ],[\"monastic lich\",27],[\"frenzied monk\",27],[\"darken\",28],[\"giant hawk-owl\",28],[\"dobrem\",28],[\"fire ogre\",28],[\"ki-lin\",28],[\"moaning spirit\",28],[\"arctic manticore\",29 ],[\"Grutik shaman\",29],[\"pra'eda\",29],[\"ice troll\",29],[\"scaly burgee\",29],[\"hunter troll\",30],[\"hisskra warrior\",30],[\"jungle troll chieftain\",30 ],[\"elder tree spirit\",30 ],[\"giant albino tomb spider\",30],[\"mammoth arachnid\",30 ],[\"hooded figure\",30],[\"ash hag\",31],[\"skeletal ice troll\",31 ],[\"wild hound\",31],[\"caribou\",32],[\"ghostly mara\",32],[\"rotting corpse\",32],[\"rotting farmhand\",32 ],[\"wild dog\",32],[\"giant fog beetle\",32 ],[\"ghostly pooka\",33],[\"mezic\",33],[\"three-toed tegu\",33],[\"maw spore\",33],[\"sand beetle\",33],[\"hisskra shaman\",33],[\"moor hound\",33],[\"skeletal giant\",33],[\"spectral warrior\",34 ],[\"hisskra chieftain\",34 ],[\"moor witch\",34],[\"lava troll\",34],[\"colossus vulture\",34 ],[\"troll zombie\",34 ],[\"tundra giant\",34],[\"cold guardian\",34],[\"skeletal soldier\",34 ],[\"spectral shade\",35],[\"shimmering fungus\",35 ],[\"spectral woodsman\",35 ],[\"barghest\",35],[\"troll wraith\",35],[\"water wyrd\",35],[\"bog troll\",35],[\"moor eagle\",35],[\"snow crone\",36],[\"dust beetle\",36],[\"spectral lord\",36],[\"fire giant\",36],[\"undertaker bat\",36],[\"arctic titan\",36],[\"krolvin slaver\",36],[\"shadow mare\",37],[\"skeletal warhorse\",37 ],[\"Sheruvian initiate\",37 ],[\"lesser moor wight\",37 ],[\"tusked ursian\",37],[\"huge mein golem\",37],[\"magru\",37],[\"grizzly bear\",38],[\"vesperti\",38],[\"wood sprite\",38],[\"shadow steed\",38],[\"krolvin corsair\",38],[\"mud wasp\",38],[\"frost giant\",38],[\"greater moor wight\",39 ],[\"vourkha\",39],[\"greater bog troll\",39 ],[\"storm giant\",39],[\"stone gargoyle\",39],[\"myklian\",40],[\"spectral miner\",40],[\"kiramon worker\",40],[\"lesser ice giant\",41 ],[\"roa'ter\",41],[\"Sheruvian monk\",41],[\"skeletal lord\",41],[\"bog wraith\",41],[\"minor glacei\",42],[\"dark vortece\",42],[\"phantasma\",42],[\"swamp hag\",42],[\"frozen corpse\",42],[\"baesrukha\",42],[\"shan warrior\",42],[\"shan ranger\",42],[\"shan cleric\",42],[\"shan wizard\",42],[\"siren lizard\",42],[\"wasp nest\",43],[\"night mare\",43],[\"dreadnought raptor\",43 ],[\"bog wight\",44],[\"forest trali shaman\",44 ],[\"mastodonic leopard\",44 ],[\"gaunt spectral servant\",44 ],[\"firethorn shoot\",44],[\"polar bear\",44],[\"ice wraith\",45],[\"lesser vruul\",45],[\"greater ice giant\",46 ],[\"kiramon defender\",46 ],[\"cinder wasp\",46],[\"forest trali\",46],[\"rotting chimera\",46],[\"lesser faeroth\",46],[\"bog spectre\",47],[\"major glacei\",47],[\"horned vor'taz\",48],[\"dybbuk\",48],[\"necrotic snake\",48],[\"sand devil\",48],[\"red-scaled thrak\",48 ],[\"warrior shade\",48],[\"waern\",49],[\"banshee\",50],[\"flesh golem\",50],[\"greater faeroth\",50],[\"wooly mammoth\",52],[\"tomb troll\",52],[\"seeker\",52],[\"snow madrinol\",52],[\"lesser ice elemental\",53 ],[\"sabre-tooth tiger\",53 ],[\"ice golem\",53],[\"stone sentinel\",53],[\"animated slush\",54],[\"skayl\",54],[\"troll necromancer\",54 ],[\"mage apprentice\",54],[\"nightmare steed\",55],[\"eidolon\",55],[\"stone troll\",55],[\"Citadel guardsman\",56],[\"lava golem\",56],[\"glacial morph\",56],[\"stone giant\",58],[\"Citadel arbalester\",58],[\"massive pyrothag\",58 ],[\"massive black boar\",59 ],[\"forest viper\",59 ],[\"fire elemental\",60],[\"forest ogre\",60 ],[\"Citadel herald\",60],[\"stone mastiff\",62],[\"bestial swordsman\", 62],[\"Illoke mystic\",62],[\"massive troll king\",63 ],[\"ice elemental\",63],[\"wind wraith\",63],[\"soul golem\",63],[\"Sheruvian harbinger\",63 ],[\"fire sprite\",64],[\"grifflet\",64],[\"red tsark\",66],[\"emaciated hierophant\",66 ],[\"muscular supplicant\",67 ],[\"Illoke shaman\",67],[\"lesser griffin\",69],[\"krag yeti\",70],[\"hunch-backed dogmatist\",70 ],[\"fire mage\",71],[\"krag dweller\",72],[\"storm griffin\",73],[\"lesser minotaur\",74],[\"moulis\",75],[\"naisirc\",75],[\"greater vruul\",75],[\"minotaur warrior\",76 ],[\"shrickhen\",76],[\"csetairi\",76],[\"raving lunatic\",77],[\"farlook\",77],[\"minotaur magus\",78],[\"dhu goleras\",78],[\"seraceris\",78],[\"gnarled being\",82],[\"caedera\",82],[\"Vvrael witch\",82],[\"lesser construct\",83 ],[\"lich qyn'arj\",84],[\"Vvrael warlock\",84],[\"greater krynch\",84],[\"gremlock\",84],[\"festering taint\",86],[\"aivren\",86],[\"Illoke elder\",86],[\"n'ecare\",87],[\"greater earth elemental\",88 ],[\"Illoke jarl\",89],[\"Ithzir scout\",89],[\"lost soul\",91],[\"Ithzir initiate\",91],[\"Ithzir janissary\",92 ],[\"vaespilon\",93],[\"Ithzir herald\",93],[\"triton dissembler\",94 ],[\"Ithzir adept\",96],[\"siren\",96],[\"triton executioner\",96 ],[\"greater construct\",96 ],[\"Ithzir seer\",97],[\"triton combatant\",98 ],[\"triton defender\",98],[\"war griffin\",100],[\"triton radical\",100],[\"triton magus\",102],[\"triton sentry\",103],[\"greater water elemental\",105],[\"water elemental\",92],[\"rolton\",1],[\"phantom\",2],[\"wraith\",15],[\"ghost\",2],[\"skeleton\",1],[\"kobold\",1],[\"reiver\",24],[\"thrak\",8],[\"manticore\",9],[\"goblin\",2],[\"hobgoblin\",3],[\"yeti\",67],[\"spectre\",14],[\"earth elemental\",82],[\"fallen crusader\",97],[\"murky soul siphon\",106],[\"lich\",110],[\"enormous rift crawler\",103],[\"darkly inked fetish master\", 104],[\"glistening cerebralite\",100],[\"Vvrael destroyer\",108],[\"zombie\",23]]\n  171  \n  172  recognition=Array.new\n\nE:\\Google Drive\\Lich\\scripts\\non_global_bigshot.lic:\n   22          -Fixed First room poaching.\n   23          -Removed group poaching logic.\n   24:         -Ambush detection via Exec Script.  It will leave the room if it detects an ambush line.\n   25          -Rewrote and updated wander targeting sections. Fixes some target related bugs.\n   26:         -Moved WAIT command to exec to prevent line buffer issues and make more responsive\n   27      v.2 (2/27/2016)\n   28          -Added changes to fix incant loot issues (might work)\n   29:         -Added ability to detect renaming of bigshot without destroying exec scripts\n   30:         -Converted exec scripts to strings to allow =>quiet\n   31      v.3 (6/20/2016)\n   32          -Added tentative rift hunting. *** HIGHLY EXPERIMENTAL *** BREAKS REGULAR HUNTING\n   ..\n   52  ## **** THIS IS THE SELF-CONTAINED VERSION - DOES NOT USE COMMON REPO **** ### \n   53   \n   54: $exec_ambush = false\n   55  $bigshot_debug = false\n   56  echo $current_script_name = script.name\n   ..\n  197  end\n  198  \n  199: ### ***** Exec\n  200  \n  201: $ambush_exec_script = <<-eos\n  202: $exec_ambush = true\n  203    while(line = get)\n  204      break unless running?($current_script_name)\n  205      $ambusher_here = true if line =~ /^\\\\w+ leaps from hiding to attack|^\\\\w+ is revealed/\n  206    end\n  207: $exec_ambush = false\n  208  eos\n  209  \n  ...\n  827              };\n  828          elsif @DEPART_SWITCH\n  829:             start_exec_script( <<-EOF\n  830                  while( running?($current_script_name) );\n  831                      if(dead?);\n  ...\n  860      def monitor_interaction()\n  861          if @MONITOR_INTERACTION\n  862:             start_exec_script( <<-eos\n  863                  def show_window(line);\n  864                      window_title = Char.name + ':' + line;\n  ...\n  919          #and line !~ /(?:^<style id=\"\"\\/><style id=\"roomDesc\"\\/>|<component id='room objs'>|<compDef id='room objs'>)/;\n  920        \n  921:         wait_for_swing_exec = <<-eos\n  922          status_tags\n  923          while line = get\n  ...\n  929          eos\n  930  \n  931:         ExecScript.start(wait_for_swing_exec, :quiet => true)\n  932          \n  933          while(1)\n  ...\n 1081          $ambusher_here = false\n 1082     \n 1083:     ExecScript.start($ambush_exec_script, :quiet => true) if $exec_ambush == false\n 1084      \n 1085      while true\n\nE:\\Google Drive\\Lich\\scripts\\ring_test.lic:\n   23  \n   24  \n   25: [exec2: @wayto={\"9811\"=>\"southwest\", \"9813\"=>\"southeast\"}\n   26  @paths=[\"Obvious exits: southeast, southwest\"]\n   27  @image_coords=[1150, 409, 1160, 419]\n\nE:\\Google Drive\\Lich\\scripts\\roomcreature.lic:\n   16  status_tags\n   17  room = 0\n   18: #[exec1: <compass><dir value=\"se\"/><dir value=\"sw\"/></compass>Your <pushBold/><a exist=\"12861925\" noun=\"spirit\">alpine spirit</a><popBold/> and your <pushBold/><a exist=\"12862968\" noun=\"ptarmigan\">rock ptarmigan</a><popBold/> followed.]\n   19  Settings['exclude'] ||= Set.new ['alpine spirit', 'rock ptarmigan']\n   20  while line = get\n\nE:\\Google Drive\\Lich\\scripts\\sbounty.lic:\n 1009          fput 'bounty'\n 1010          sleep 1\n 1011:         start_exec_script( <<-eos\n 1012              kill_script 'sbounty' if running? 'sbounty';\n 1013              kill_script 'bigshot' if running? 'bigshot';\n ....\n 1111        stopbounty = true\n 1112        remove_bounty.call\n 1113:       start_exec_script(\"sleep 2;start_script('sbounty')\")\n 1114        exit\n 1115      end\n ....\n 1396          stopbounty = true\n 1397          remove_bounty.call\n 1398:         start_exec_script(\"sleep 2;start_script('sbounty')\")\n 1399          exit\n 1400      end\n ....\n 1697        stopbounty = true\n 1698        remove_bounty.call\n 1699:       start_exec_script(\"sleep 2;start_script('sbounty')\")\n 1700        exit\n 1701      end\n\nE:\\Google Drive\\Lich\\scripts\\scriptcheck.lic:\n    4  #echo CharSettings['count']\n    5  \n    6: combat_strings_to_ignore = /^  (Awesome|Powerful|Explosive|Awkward|Spinning|Wild|Strike|Quick|Strong|Weak|Blindingly|Furious|Swift|Cross|Crossover|Furious|Amazing|Short|Palm|Descending|Well|Rib|Fully|Rotating|Stiffened|Uppercut|Crushing|Solid|Magnificent|Low|Minor|Backfist|Overhand|Crushing|Stiff|Fist) (crossover|haymaker|downward|punch|drive|fingers|attack|fast|strike|leaves|swing|blow|descending|fist|hand|shot|executed|extended|straight|backhand|compresses|to|chop|slams|drives|spear)|^  (Spine|Jugular|Larynx) (severed|crushed)|^   ?(The|A|An).+(is knocked|is stunned|starts to favor|seems at a loss|moans and drops|moans silently|chokes|appears to be moving|sniffs the air|searchs around)|^Your injuries hinder your attempts|^  A close miss|^By amazing chance|^(The|A|An) .+ (north|northeast|east|southeast|south|southwest|west|northwest|out|up|down|in)\\.$/\n    7  \n    8  always_ignore_strings = /^Unconverting|^Obvious (paths|exits)|^You are (now|not)|You also see|Also here|^You (barely|fail|pick|deposit|put|move|evade|dodge|skillfully|gracefully|make|have|settle|struggle|discover|remove|skinned|carefully|swap|drop|gather|open)|^(She|He|It) (didn't|had|carried|left|also)|^Interesting, (he|she|it)|^  (UAF|AS)|^You botched|^Your lockpick|^Get what|^That is|^The gem dealer|^The pawnbroker|^You ask Dakris|^Dakris takes|^Please rephrase that|^   Physical|^     Mental|^Your mind is clear|^ \\* |^Peering into|^      (a|an|some) |^For some reason, you feel especially|^Your \\w+ won't |^You offer to sell|^You ask the dealer|^(A|The) spotted lynx (darts|charges|notices|struggles|roars|chokes)|discovers you in your hiding place\\!$|^Training Points|is already missing that\\.$|^A dark orc (grunts a challenge|stumps out)|tries to bite you\\!$|^A .+ attempts to marshal (his|her)|stands up with a grunt\\.$|but fails in the attempt\\.$|^(The|A|An) \\w+ centaur (ranger)? (notices|gallops|is already|fires|snorts|darts|intones|swings)/\n\nE:\\Google Drive\\Lich\\scripts\\spellmonitor.lic:\n   14  $elemental_weapon = false if $elemental_weapon.nil?\n   15  \n   16: # Exec thread to search for line captures.\n   17  spell_line_checks = <<-eos\n   18  while line = get\n   ..\n   25  eos\n   26  \n   27: ExecScript.start(spell_line_checks, :quiet => true)\n   28  \n   29  def can_cast?(check_spell)\n   ..\n   38    pause_script 'sloot' if running? 'sloot'\n   39  \n   40:   # Uses an exec thread to cast the spell so dothistimeout does not\n   41    # interefere with matches from method .cast\n   42    cast_spells.each {|do_spell|\n   ..\n   44      sleep 0.5\n   45      waitrt?\n   46:     cast_exec = <<-eos\n   47      	if $do_spell == 909\n   48      		put \"prep #{$do_spell}\"\n   ..\n   54      	end\n   55      eos\n   56:     cast_exec_script = ExecScript.start(cast_exec, :quiet => true)\n   57:     wait_until {!running? cast_exec_script.name}\n   58    }\n   59  \n\nE:\\Google Drive\\Lich\\scripts\\testDR.lic:\n  100   \n  101  ## Watch for traps\n  102: ## Also uses Exec Script from duskRuinArena\n  103  def arenaWatch()\n  104    res = \"You glance around\"\n  ...\n  113  def duskruinArena()\n  114    $breakDuskruin = false\n  115:   ## Exec script to monitor lines. it also cancels duskruin loop\n  116    ## based on line triggers. Also watchs for traps.\n  117    check_lines = <<-eos\n  ...\n  143    eos\n  144   \n  145: start_exec_script(check_lines, :quiet => true)\n  146   \n  147  checkCol ## check for COL spells\n\nE:\\Google Drive\\Lich\\scripts\\transcend.lic:\n   82      ubermonkPaused = GSC.pauseScript 'ubermonk'\n   83  \n   84:     # Uses an exec thread to cast the spell so dothistimeout does not\n   85      # interefere with matches from method .cast\n   86      cast_spells.each {|do_spell|\n   ..\n   88        sleep 0.5\n   89        waitrt?\n   90:       cast_exec = <<-eos\n   91        if $do_spell == 909\n   92          put \"prep #{$do_spell}\"\n   ..\n  102        end\n  103        eos\n  104:       cast_exec_script = ExecScript.start(cast_exec, :quiet => false)\n  105:       wait_until {!running? cast_exec_script.name}\n  106      }\n  107  \n  ...\n  141    if line =~ /The power from your symbol dissipates/\n  142      $current_favor = 0\n  143:     ExecScript.start(delayed_favor, :quiet => true)\n  144    end\n  145  =begin\n  ...\n  173  			dothistimeout \"sym trans confirm\", 3, /space between the corporeal|^You have already|^You strain/\n  174  		else\n  175: 			start_exec_script( <<-eos\n  176          	kill_script 'sbounty' if running? 'sbounty';\n  177  			kill_script 'bigshot' if running? 'bigshot' or running? 'fbigshot';\n  ...\n  192        dothistimeout \"sym trans confirm\", 3, /space between the corporeal|^You have already|^You strain/\n  193    else\n  194:       start_exec_script( <<-eos\n  195        kill_script 'sbounty' if running? 'sbounty';\n  196        kill_script 'bigshot' if running? 'bigshot'\n  ...\n  208  \n  209    if line =~ /An Ithzir herald reaches into a pocket and produces a small silvery disc,|You suddenly feel angered beyond all reason|sticky web/ and Char.name == 'Kalros'\n  210:     start_exec_script( <<-eos\n  211      kill_script 'sbounty' if running? 'sbounty';\n  212      kill_script 'bigshot' if running? 'bigshot'\n  ...\n  271  \n  272    if line =~ /^Your muscles are starting to ache with exhaustion/\n  273:     start_exec_script( <<-eos\n  274                         kill_script 'sbounty' if running? 'sbounty';\n  275                         kill_script 'go2' if running? 'go2';\n  ...\n  284    if line =~ /^The bronze gate appears to be closed/\n  285      if $rescue_child == false\n  286:       start_exec_script( <<-eos\n  287                           kill_script 'sbounty' if running? 'sbounty';\n  288                           kill_script 'go2' if running? 'go2';\n  ...\n  314  \n  315    if line =~ /^You lose your balance on the slanted deck|^The tilt of the deck causes you to mistep|^The slant of the deck/\n  316:     start_exec_script( <<-eos\n  317                         kill_script 'sbounty' if running? 'sbounty';\n  318                         kill_script 'go2' if running? 'go2';\n\nE:\\Google Drive\\Lich\\scripts\\ubermonk.lic:\n   45  eos\n   46  \n   47: ExecScript.start(uac_line_checks, :quiet => true)\n   48  \n   49  def arenaWatch()\n\nE:\\Google Drive\\Lich\\scripts\\useherbs.lic:\n  927  \n  928  	if $useherbs_measure.nil?\n  929: 		exec_string = \"\n  930  			hide_me\n  931  			status_tags\n  ...\n  970  			end\n  971  		\"\n  972: 		start_exec_script(exec_string, flags={ :quiet => true })\n  973  	end\n  974  \n\nE:\\Google Drive\\Lich\\scripts\\wedge.lic:\n    1  $box_open = false\n    2  \n    3: start_exec_script( <<-eos\n    4      while line = get;\n    5      	break unless running?('wedge');\n\n377 matches across 46 files\n",
			"settings":
			{
				"buffer_size": 557348,
				"line_ending": "Windows",
				"name": "Find Results",
				"scratch": true
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/drafix scripts/sloot.lic",
			"settings":
			{
				"buffer_size": 89877,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/ylandraJar.lic",
			"settings":
			{
				"buffer_size": 429,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/idleonly.lic",
			"settings":
			{
				"buffer_size": 34,
				"line_ending": "Windows",
				"name": "while true"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/monitor.lic",
			"settings":
			{
				"buffer_size": 17495,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/dusksell.lic",
			"settings":
			{
				"buffer_size": 344,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/iSing.lic",
			"settings":
			{
				"buffer_size": 4332,
				"line_ending": "Windows"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/mapmap.lic",
			"settings":
			{
				"buffer_size": 32287,
				"line_ending": "Unix"
			}
		},
		{
			"file": "/E/Google Drive/Lich/scripts/map_mod.lic",
			"settings":
			{
				"buffer_size": 4138,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 81.0,
		"selected_items":
		[
			[
				"git: status",
				"Git: Status"
			],
			[
				"package control",
				"Package Control: Install Package"
			],
			[
				"Package Control: ",
				"Package Control: List Packages"
			],
			[
				"package",
				"Package Control: Install Package"
			],
			[
				"package ",
				"Package Control: Install Package"
			],
			[
				"install p",
				"Package Control: Install Package"
			],
			[
				"pack",
				"Package Control: Install Package"
			],
			[
				"install",
				"Package Control: Install Package"
			],
			[
				"packac",
				"Package Control: Install Package"
			],
			[
				"package cont",
				"Package Control: Add Repository"
			],
			[
				"Package Control: install",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 292.0
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/E/Google Drive/Lich/scripts/chargeitems.lic",
		"/E/Google Drive/Lich/scripts/Bardhunt.lic",
		"/E/Google Drive/Lich/scripts/loot-be-gone.lic",
		"/E/Google Drive/Lich/scripts/monitor_old.lic",
		"/E/Google Drive/Lich/scripts/1monitor.lic",
		"/E/Google Drive/Lich/scripts/monitor.lic",
		"/E/Google Drive/Lich/scripts/glitch.rbw",
		"/E/testlich/lich/lich.rbw",
		"/E/Gemstone IV/lich/lich.rbw",
		"/C/my_scripts/bcole_assignment4.txt",
		"/E/Google Drive/Lich/scripts/bigshot.lic",
		"/C/Users/Bryan/Downloads/newsong.lic",
		"/C/Users/Bryan/Downloads/newsong1.lic",
		"/E/Google Drive/Lich/scripts/sms.lic",
		"/E/Google Drive/Lich/scripts/start_hunt.lic",
		"/E/Google Drive/Lich/scripts/treasure_hunt.lic",
		"/E/Google Drive/Lich/scripts/transcend.lic",
		"/E/Google Drive/Lich/scripts/disarm-no-more.lic",
		"/E/Google Drive/Lich/scripts/wizardHunt.lic",
		"/E/Google Drive/Lich/scripts/test10.lic",
		"/E/Google Drive/Lich/scripts/sbounty.lic",
		"/E/Google Drive/Lich/scripts/movegem.lic",
		"/E/Google Drive/Lich/scripts/switch_hunting.lic",
		"/C/Users/Bryan/AppData/Local/Temp/7zOCE4F61C6/CHANGELOG",
		"/C/Users/Bryan/AppData/Local/Temp/7zOCF4B4D87/README.rdoc",
		"/E/Google Drive/Lich/scripts/map_mod.lic",
		"/E/Google Drive/Lich/scripts/loop_lnet.lic",
		"/E/Google Drive/Lich/scripts/dr_sewers.lic",
		"/E/Google Drive/Lich/scripts/arenawatch.lic",
		"/E/Google Drive/Lich/scripts/sloot.lic",
		"/E/Google Drive/Lich/scripts/child2.lic",
		"/E/Google Drive/Lich/scripts/wizardRest.lic",
		"/E/Google Drive/Lich/scripts/testDR.lic",
		"/E/Google Drive/Lich/scripts/common.lic",
		"/E/Google Drive/Lich/scripts/ubermonk.lic",
		"/E/Google Drive/Lich/scripts/bardRest.lic",
		"/E/Google Drive/Lich/scripts/sellshard.lic",
		"/E/Google Drive/Lich/scripts/useherbs.lic",
		"/E/Google Drive/Lich/scripts/duskruinArena.lic",
		"/E/Google Drive/Lich/scripts/atanDusk.lic",
		"/E/Google Drive/Lich/scripts/buydr.lic",
		"/E/Google Drive/Lich/scripts/drDriver.lic",
		"/E/Google Drive/Lich/scripts/chat.lic",
		"/E/Google Drive/Lich/scripts/1Gems2Jars-LE.txt",
		"/E/Google Drive/Lich/scripts/10deeds.lic",
		"/E/Google Drive/Lich/scripts/alastir_merchant.lic",
		"/E/Google Drive/Lich/scripts/waggle.lic",
		"/E/Google Drive/Lich/scripts/boostgem.lic",
		"/E/Google Drive/Lich/scripts/creature-data.yaml",
		"/E/Google Drive/Lich/scripts/grgvars.lic",
		"/E/Google Drive/Lich/scripts/grguild.lic",
		"/E/Google Drive/Lich/scripts/test1.lic",
		"/E/Google Drive/Lich/scripts/GameObjAdd.lic",
		"/E/Google Drive/Lich/scripts/sbounty8_8_16.lic",
		"/E/Google Drive/Lich/scripts/githros.lic",
		"/E/Google Drive/Lich/scripts/go2.lic",
		"/E/Google Drive/Lich/scripts/tempfix.lic",
		"/E/Google Drive/Lich/scripts/favorhunt.lic",
		"/E/Google Drive/Lich/scripts/sbounty8_20_cole.lic",
		"/E/Google Drive/Lich/scripts/sbounty-bigshot.lic",
		"/E/Google Drive/Lich/scripts/haz_sbounty.lic",
		"/E/Google Drive/Lich/scripts/tpick.lic",
		"/E/Google Drive/Lich/scripts/lockwear.lic",
		"/E/Google Drive/Lich/scripts/non_global_bigshot.lic",
		"/E/Google Drive/Lich/scripts/test_rift.lic",
		"/E/Google Drive/Lich/scripts/rrwedge.lic",
		"/E/Google Drive/Lich/scripts/autovote.lic",
		"/C/Users/Bryan/Downloads/GameObjAdd (1).lic",
		"/C/Users/Bryan/Downloads/GameObjAdd.lic",
		"/E/Google Drive/Lich/scripts/confluence_sort.lic",
		"/E/Google Drive/Lich/scripts/wedge.lic",
		"/E/Google Drive/Lich/scripts/zzherb.lic",
		"/E/Google Drive/Lich/scripts/testmove.lic",
		"/E/Gemstone IV/lich/scripts/drafix scripts/findnpc.lic",
		"/E/Google Drive/Lich/scripts/monitor_lines.lic",
		"/E/Google Drive/Lich/scripts/whatlevel.lic",
		"/E/Google Drive/Lich/scripts/common1.lic",
		"/E/CCSF/dev/java/Bank1/cole_bank_account/Account.java",
		"/E/CCSF/dev/java/Bank1/cole_bank_account/Account.class",
		"/E/Google Drive/Lich/scripts/test3.lic",
		"/E/Google Drive/Lich/scripts/checkemail.lic",
		"/E/Google Drive/Lich/scripts/drafix scripts/combo.lic",
		"/E/Google Drive/Lich/scripts/test_crystal.lic",
		"/E/Google Drive/Lich/scripts/test.lic",
		"/E/Google Drive/Lich/scripts/bundle_skins.lic",
		"/E/Google Drive/Lich/scripts/nazagor.lic",
		"/E/Google Drive/Lich/scripts/sorter.lic",
		"/E/Google Drive/Lich/scripts/plinite.lic",
		"/E/Google Drive/Lich/error_log",
		"/C/Users/Bryan/Downloads/incominglog (1).lic",
		"/E/Google Drive/Lich/scripts/census.lic",
		"/E/Google Drive/Lich/scripts/citizenship.lic",
		"/E/Google Drive/Scripts/GS4_Lich.sublime-workspace",
		"/E/Google Drive/Lich/scripts/last_rest.lic",
		"/E/Google Drive/Lich/scripts/first_rest.lic",
		"/E/Google Drive/Lich/scripts/deprecated_code.lic",
		"/E/Gemstone IV/lich/data/gameobj-data.xml",
		"/E/Google Drive/Lich/scripts/test5.lic",
		"/E/Google Drive/Lich/scripts/ring_test.lic",
		"/E/Google Drive/Lich/scripts/profanity.rb",
		"/E/Google Drive/Lich/scripts/ring_test2.lic",
		"/E/Google Drive/Lich/scripts/lichstart.lic",
		"/E/Google Drive/Lich/scripts/1030_script.lic",
		"/E/Google Drive/Lich/scripts/drafix scripts/findgem.lic",
		"/E/Google Drive/Lich/scripts/drafix scripts/count.lic",
		"/E/Google Drive/temp/.git/config",
		"/E/CCSF/dev/ruby/testruby.rb",
		"/C/Users/Bryan/Downloads/util.lic",
		"/C/Users/Bryan/Downloads/calael.lic",
		"/E/Google Drive/Lich/scripts/lnet.lic",
		"/C/Users/Bryan/Downloads/incominglog.lic",
		"/E/Google Drive/Lich/scripts/1030_loop.lic",
		"/E/Google Drive/Lich/scripts/deprecated_code",
		"/E/Google Drive/Lich/scripts/duskruin_sewer.lic",
		"/E/Google Drive/Lich/scripts/save_boxes.lic",
		"/E/Google Drive/Lich/scripts/shardget.lic",
		"/E/Google Drive/Lich/scripts/sort_drop.lic",
		"/E/Google Drive/Lich/scripts/sort_dr.lic",
		"/E/Google Drive/Lich/scripts/note.lic",
		"/C/Users/Bryan/AppData/Roaming/Sublime Text 2/Packages/Default/Preferences.sublime-settings",
		"/E/Google Drive/Lich/scripts/bestiary.lic",
		"/E/Google Drive/Lich/scripts/repository.lic",
		"/E/Google Drive/Lich/scripts/get_disc.lic",
		"/E/Google Drive/Lich/scripts/string_proc_testing.lic",
		"/E/Google Drive/Lich/scripts/login.lic",
		"/E/Google Drive/Lich/scripts/test_proc.lic",
		"/E/Google Drive/Lich/scripts/test2.lic",
		"/E/Gemstone IV/lich/scripts/census.lic"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 0.0,
		"where_history":
		[
			"<open files>,E:\\Google Drive\\Lich\\scripts",
			"<open files>",
			"E:\\Google Drive\\Lich",
			"E:\\Google Drive\\Scripts",
			"<open folders>",
			"E:\\Google Drive\\Lich\\scripts",
			"<open files>",
			"E:\\Google Drive\\Lich\\scripts",
			"",
			"<open files>",
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"area",
			"exec",
			"DownstreamHook",
			"running",
			"aim right leg",
			"put 'aim",
			"put aim",
			"aim",
			"aun",
			"9805",
			"thread",
			"lumino",
			"Char.name == 'Lumino'",
			"lumino",
			"iloru",
			"fal",
			"missing",
			"stunned",
			"pour",
			"righthand",
			"type",
			"_drag",
			"contents",
			"GameObj",
			"GameObj[",
			"cross",
			"kick",
			"echo",
			"startdr",
			"9605",
			"9805",
			"matchtimeout",
			"echo",
			"champion",
			"put",
			"rt",
			"monitor",
			"checkspells",
			"$plane3",
			"=> ['",
			"bonus",
			"pause",
			"id='room",
			"id='thought'",
			"_respond",
			"turn",
			"in place",
			"furrier",
			"10024",
			"4900",
			"port",
			"490",
			"game_port",
			"version",
			"PRONE =",
			"PRONE",
			"hunting_bound",
			"@hunting_room_id",
			"hunting_room_id",
			"stopbounty",
			"put",
			"$current_favor = 1",
			"$current_favor",
			"current_favor = 1",
			"Alastir",
			"merchant",
			"startDR",
			"start_DR",
			"waitcastrt?",
			"hook_squelch",
			"downstream",
			"format",
			"Room",
			"Title",
			"speech",
			"_drag",
			"GameObj",
			"watch",
			"shawl",
			"aim head",
			"$aim",
			"@aim",
			"knife",
			"guild",
			"pushStream",
			"chat",
			"lnet",
			"matchtimeout",
			"wait",
			"wait_until",
			"waitfor",
			"aggressive",
			"target",
			"aim",
			"script",
			"Script.start",
			"Scipt.run",
			"Script.",
			"aim_location",
			"def ",
			"Removed",
			"stop 1012",
			"sonicWeapon",
			"ice",
			"GameObj",
			"lootsack",
			"turn #{",
			"Uservars",
			"kill",
			"error in gold ring",
			"stop singing",
			"lance",
			"and manage to",
			"herb",
			"forage",
			"knife",
			"GameObj.inv",
			"GameObj",
			"putregex",
			"put",
			"skinsack",
			"failure",
			"checkright",
			"def checkright",
			"checkright",
			"forage",
			"class Spell",
			"def Spell"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"#put 'aim",
			"Char.name == 'Lumino' || Char.name == 'Iloru'",
			"sack",
			"SBOUNTY_CLEAN_TARGETS",
			"",
			"##{lootsack}",
			"@creature_index",
			"link satchel",
			"/#{$armorshort}/",
			"link satchel",
			"container_bs",
			"GSC.run_wait_script",
			"@lock_",
			"lock_",
			"@lock_",
			"@lock",
			"open_herb(herb_container)",
			"@close_herback",
			";pause_script 'tpick'",
			";pause",
			"hunt_zone:",
			"twohanded",
			"#{$current_script_name}",
			"",
			"full plate",
			"",
			"$1',",
			"$1\\'\\^",
			"$1\\^\\'",
			"($1)\\^\\'",
			"\\^\\'",
			"= [",
			",",
			"'",
			"$ground_index",
			"##{box_id}",
			"##{box}",
			"var1",
			"script_vars1",
			"script_vars2",
			"'xx'",
			"running? 'bigshot' or running? 'fbigshot'",
			"running? 'fbigshot'",
			"'bigshot' or 'fbigshot'",
			".opf[",
			"__",
			"$OPF_",
			"OPF",
			"=~ /#{",
			"msg}"
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 0,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "/E/Google Drive/Lich/scripts/common.lic",
					"settings":
					{
						"buffer_size": 29750,
						"regions":
						{
						},
						"selection":
						[
							[
								16049,
								16049
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1500492608.62,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 7424.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "/E/Google Drive/Lich/scripts/drDriver.lic",
					"settings":
					{
						"buffer_size": 2649,
						"regions":
						{
						},
						"selection":
						[
							[
								401,
								401
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1500489744.13,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 2,
					"settings":
					{
						"buffer_size": 1682,
						"regions":
						{
						},
						"selection":
						[
							[
								1024,
								1024
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1493595878.27,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "/E/Google Drive/Lich/scripts/tempDR.lic",
					"settings":
					{
						"buffer_size": 91,
						"regions":
						{
						},
						"selection":
						[
							[
								56,
								11
							]
						],
						"settings":
						{
							"auto_name": "",
							"sorttabs_lastactivated": 1493587567.14,
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "/E/Google Drive/Lich/scripts/duskruinArena.lic",
					"settings":
					{
						"buffer_size": 6627,
						"regions":
						{
						},
						"selection":
						[
							[
								2032,
								2032
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1498848183.99,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 702.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "/E/Google Drive/Lich/scripts/transcend.lic",
					"settings":
					{
						"buffer_size": 10281,
						"regions":
						{
						},
						"selection":
						[
							[
								242,
								242
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1493434880.99,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1296.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		},
		{
			"selected": 3,
			"sheets":
			[
				{
					"buffer": 6,
					"file": "/E/Google Drive/Lich/scripts/ubermonk.lic",
					"settings":
					{
						"buffer_size": 4013,
						"regions":
						{
						},
						"selection":
						[
							[
								3888,
								3888
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1493595695.1,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 392.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "/E/Google Drive/Lich/scripts/commonFight.lic",
					"settings":
					{
						"buffer_size": 7336,
						"regions":
						{
						},
						"selection":
						[
							[
								2960,
								1180
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1493609062.17,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 756.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "/E/Google Drive/Lich/scripts/10deeds.lic",
					"settings":
					{
						"buffer_size": 1348,
						"regions":
						{
						},
						"selection":
						[
							[
								0,
								0
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1493599134.88,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 9,
					"settings":
					{
						"buffer_size": 557348,
						"regions":
						{
							"match":
							{
								"flags": 112,
								"regions":
								[
									[
										101,
										107
									],
									[
										471,
										477
									],
									[
										632,
										638
									],
									[
										730,
										736
									],
									[
										838,
										844
									],
									[
										932,
										938
									],
									[
										1083,
										1089
									],
									[
										1492,
										1498
									],
									[
										1868,
										1874
									],
									[
										1980,
										1986
									],
									[
										2104,
										2110
									],
									[
										2340,
										2346
									],
									[
										2512,
										2518
									],
									[
										2785,
										2791
									],
									[
										3087,
										3093
									],
									[
										3267,
										3273
									],
									[
										3388,
										3394
									],
									[
										3710,
										3716
									],
									[
										3990,
										3996
									],
									[
										4186,
										4192
									],
									[
										4345,
										4351
									],
									[
										4543,
										4549
									],
									[
										4560,
										4566
									],
									[
										4743,
										4749
									],
									[
										4948,
										4954
									],
									[
										5108,
										5114
									],
									[
										5315,
										5321
									],
									[
										5332,
										5338
									],
									[
										5517,
										5523
									],
									[
										5711,
										5717
									],
									[
										5870,
										5876
									],
									[
										6066,
										6072
									],
									[
										6083,
										6089
									],
									[
										6283,
										6289
									],
									[
										6488,
										6494
									],
									[
										6648,
										6654
									],
									[
										6855,
										6861
									],
									[
										6872,
										6878
									],
									[
										7060,
										7066
									],
									[
										7265,
										7271
									],
									[
										7425,
										7431
									],
									[
										7632,
										7638
									],
									[
										7649,
										7655
									],
									[
										7796,
										7802
									],
									[
										8001,
										8007
									],
									[
										8161,
										8167
									],
									[
										8368,
										8374
									],
									[
										8385,
										8391
									],
									[
										8539,
										8545
									],
									[
										8705,
										8711
									],
									[
										8863,
										8869
									],
									[
										9024,
										9030
									],
									[
										9141,
										9147
									],
									[
										9325,
										9331
									],
									[
										9521,
										9527
									],
									[
										9744,
										9750
									],
									[
										9832,
										9838
									],
									[
										9960,
										9966
									],
									[
										10245,
										10251
									],
									[
										10434,
										10440
									],
									[
										10537,
										10543
									],
									[
										12072,
										12078
									],
									[
										13666,
										13672
									],
									[
										13954,
										13960
									],
									[
										14144,
										14150
									],
									[
										14321,
										14327
									],
									[
										14515,
										14521
									],
									[
										14675,
										14681
									],
									[
										14871,
										14877
									],
									[
										14888,
										14894
									],
									[
										15236,
										15242
									],
									[
										15554,
										15560
									],
									[
										15633,
										15639
									],
									[
										15916,
										15922
									],
									[
										15943,
										15949
									],
									[
										16212,
										16218
									],
									[
										16465,
										16471
									],
									[
										16616,
										16622
									],
									[
										16711,
										16717
									],
									[
										16855,
										16861
									],
									[
										16864,
										16870
									],
									[
										17085,
										17091
									],
									[
										17413,
										17419
									],
									[
										17718,
										17724
									],
									[
										17953,
										17959
									],
									[
										17974,
										17980
									],
									[
										18112,
										18118
									],
									[
										18120,
										18126
									],
									[
										18355,
										18361
									],
									[
										18364,
										18370
									],
									[
										18536,
										18542
									],
									[
										18557,
										18563
									],
									[
										18687,
										18693
									],
									[
										18702,
										18708
									],
									[
										18815,
										18821
									],
									[
										18955,
										18961
									],
									[
										19021,
										19027
									],
									[
										19143,
										19149
									],
									[
										19160,
										19166
									],
									[
										19360,
										19366
									],
									[
										19400,
										19406
									],
									[
										19449,
										19455
									],
									[
										19472,
										19478
									],
									[
										19596,
										19602
									],
									[
										19605,
										19611
									],
									[
										19750,
										19756
									],
									[
										20024,
										20030
									],
									[
										20066,
										20072
									],
									[
										20157,
										20163
									],
									[
										20343,
										20349
									],
									[
										20364,
										20370
									],
									[
										20473,
										20479
									],
									[
										20482,
										20488
									],
									[
										20633,
										20639
									],
									[
										20917,
										20923
									],
									[
										20961,
										20967
									],
									[
										21056,
										21062
									],
									[
										21252,
										21258
									],
									[
										21273,
										21279
									],
									[
										21391,
										21397
									],
									[
										21406,
										21412
									],
									[
										21584,
										21590
									],
									[
										21599,
										21605
									],
									[
										21781,
										21787
									],
									[
										21823,
										21829
									],
									[
										22045,
										22051
									],
									[
										22167,
										22173
									],
									[
										22312,
										22318
									],
									[
										22345,
										22351
									],
									[
										22491,
										22497
									],
									[
										22601,
										22607
									],
									[
										22634,
										22640
									],
									[
										22781,
										22787
									],
									[
										22914,
										22920
									],
									[
										23060,
										23066
									],
									[
										23205,
										23211
									],
									[
										23254,
										23260
									],
									[
										23337,
										23343
									],
									[
										23523,
										23529
									],
									[
										23662,
										23668
									],
									[
										23978,
										23984
									],
									[
										24117,
										24123
									],
									[
										24480,
										24486
									],
									[
										24619,
										24625
									],
									[
										24934,
										24940
									],
									[
										25073,
										25079
									],
									[
										25380,
										25386
									],
									[
										25519,
										25525
									],
									[
										25832,
										25838
									],
									[
										25971,
										25977
									],
									[
										26409,
										26415
									],
									[
										26429,
										26435
									],
									[
										26744,
										26750
									],
									[
										26764,
										26770
									],
									[
										26988,
										26994
									],
									[
										27227,
										27233
									],
									[
										27239,
										27245
									],
									[
										27286,
										27292
									],
									[
										27360,
										27366
									],
									[
										27427,
										27433
									],
									[
										27557,
										27563
									],
									[
										27641,
										27647
									],
									[
										27762,
										27768
									],
									[
										27809,
										27815
									],
									[
										27889,
										27895
									],
									[
										27948,
										27954
									],
									[
										28012,
										28018
									],
									[
										28116,
										28122
									],
									[
										28128,
										28134
									],
									[
										28175,
										28181
									],
									[
										28249,
										28255
									],
									[
										28316,
										28322
									],
									[
										28446,
										28452
									],
									[
										28592,
										28598
									],
									[
										28639,
										28645
									],
									[
										28719,
										28725
									],
									[
										28778,
										28784
									],
									[
										28842,
										28848
									],
									[
										28947,
										28953
									],
									[
										28959,
										28965
									],
									[
										29003,
										29009
									],
									[
										29046,
										29052
									],
									[
										29154,
										29160
									],
									[
										29166,
										29172
									],
									[
										29213,
										29219
									],
									[
										29287,
										29293
									],
									[
										29354,
										29360
									],
									[
										29491,
										29497
									],
									[
										29663,
										29669
									],
									[
										29710,
										29716
									],
									[
										29790,
										29796
									],
									[
										29849,
										29855
									],
									[
										29924,
										29930
									],
									[
										30047,
										30053
									],
									[
										30186,
										30192
									],
									[
										30300,
										30306
									],
									[
										30387,
										30393
									],
									[
										30515,
										30521
									],
									[
										30527,
										30533
									],
									[
										30580,
										30586
									],
									[
										30651,
										30657
									],
									[
										30744,
										30750
									],
									[
										30837,
										30843
									],
									[
										30991,
										30997
									],
									[
										31048,
										31054
									],
									[
										31135,
										31141
									],
									[
										31202,
										31208
									],
									[
										31284,
										31290
									],
									[
										31296,
										31302
									],
									[
										31349,
										31355
									],
									[
										31420,
										31426
									],
									[
										31513,
										31519
									],
									[
										31690,
										31696
									],
									[
										31747,
										31753
									],
									[
										31834,
										31840
									],
									[
										31901,
										31907
									],
									[
										31983,
										31989
									],
									[
										31995,
										32001
									],
									[
										32048,
										32054
									],
									[
										32119,
										32125
									],
									[
										32242,
										32248
									],
									[
										32432,
										32438
									],
									[
										32489,
										32495
									],
									[
										32578,
										32584
									],
									[
										32639,
										32645
									],
									[
										32781,
										32787
									],
									[
										32923,
										32929
									],
									[
										32978,
										32984
									],
									[
										33147,
										33153
									],
									[
										33316,
										33322
									],
									[
										33568,
										33574
									],
									[
										33689,
										33695
									],
									[
										33698,
										33704
									],
									[
										33965,
										33971
									],
									[
										34089,
										34095
									],
									[
										34333,
										34339
									],
									[
										34401,
										34407
									],
									[
										34636,
										34642
									],
									[
										34698,
										34704
									],
									[
										34870,
										34876
									],
									[
										34968,
										34974
									],
									[
										35332,
										35338
									],
									[
										35430,
										35436
									],
									[
										35782,
										35788
									],
									[
										35890,
										35896
									],
									[
										35914,
										35920
									],
									[
										36063,
										36069
									],
									[
										36209,
										36215
									],
									[
										36325,
										36331
									],
									[
										36334,
										36340
									],
									[
										36486,
										36492
									],
									[
										36521,
										36527
									],
									[
										36530,
										36536
									],
									[
										36756,
										36762
									],
									[
										36852,
										36858
									],
									[
										36861,
										36867
									],
									[
										37034,
										37040
									],
									[
										37068,
										37074
									],
									[
										37234,
										37240
									],
									[
										37243,
										37249
									],
									[
										37472,
										37478
									],
									[
										37543,
										37549
									],
									[
										37589,
										37595
									],
									[
										37827,
										37833
									],
									[
										37836,
										37842
									],
									[
										38055,
										38061
									],
									[
										38122,
										38128
									],
									[
										38166,
										38172
									],
									[
										38400,
										38406
									],
									[
										38409,
										38415
									],
									[
										38628,
										38634
									],
									[
										38695,
										38701
									],
									[
										38739,
										38745
									],
									[
										38969,
										38975
									],
									[
										39081,
										39087
									],
									[
										39090,
										39096
									],
									[
										39377,
										39383
									],
									[
										39414,
										39420
									],
									[
										39436,
										39442
									],
									[
										39643,
										39649
									],
									[
										39652,
										39658
									],
									[
										39816,
										39822
									],
									[
										39871,
										39877
									],
									[
										39909,
										39915
									],
									[
										40163,
										40169
									],
									[
										40172,
										40178
									],
									[
										40346,
										40352
									],
									[
										40405,
										40411
									],
									[
										40445,
										40451
									],
									[
										40671,
										40677
									],
									[
										40680,
										40686
									],
									[
										40886,
										40892
									],
									[
										41175,
										41181
									],
									[
										41184,
										41190
									],
									[
										41384,
										41390
									],
									[
										41573,
										41579
									],
									[
										41607,
										41613
									],
									[
										41740,
										41746
									],
									[
										41749,
										41755
									],
									[
										41938,
										41944
									],
									[
										42044,
										42050
									],
									[
										42203,
										42209
									],
									[
										42301,
										42307
									],
									[
										42446,
										42452
									],
									[
										42692,
										42698
									],
									[
										42701,
										42707
									],
									[
										42852,
										42858
									],
									[
										43213,
										43219
									],
									[
										43327,
										43333
									],
									[
										43502,
										43508
									],
									[
										43608,
										43614
									],
									[
										43826,
										43832
									],
									[
										43909,
										43915
									],
									[
										44078,
										44084
									],
									[
										44107,
										44113
									],
									[
										44158,
										44164
									],
									[
										44288,
										44294
									],
									[
										44365,
										44371
									],
									[
										44517,
										44523
									],
									[
										44980,
										44986
									],
									[
										45083,
										45089
									],
									[
										45357,
										45363
									],
									[
										45437,
										45443
									],
									[
										45551,
										45557
									],
									[
										45688,
										45694
									],
									[
										45795,
										45801
									],
									[
										45911,
										45917
									],
									[
										46047,
										46053
									],
									[
										46225,
										46231
									],
									[
										46367,
										46373
									],
									[
										46396,
										46402
									],
									[
										46405,
										46411
									],
									[
										46453,
										46459
									],
									[
										46528,
										46534
									],
									[
										46537,
										46543
									],
									[
										46675,
										46681
									],
									[
										46703,
										46709
									],
									[
										46825,
										46831
									],
									[
										46968,
										46974
									],
									[
										47119,
										47125
									],
									[
										47267,
										47273
									],
									[
										47730,
										47736
									],
									[
										47941,
										47947
									],
									[
										48146,
										48152
									],
									[
										48306,
										48312
									],
									[
										48513,
										48519
									],
									[
										48530,
										48536
									],
									[
										48674,
										48680
									],
									[
										48804,
										48810
									],
									[
										49028,
										49034
									],
									[
										49100,
										49106
									],
									[
										49228,
										49234
									],
									[
										49480,
										49486
									],
									[
										49759,
										49765
									],
									[
										49774,
										49780
									],
									[
										49892,
										49898
									],
									[
										49901,
										49907
									],
									[
										49951,
										49957
									],
									[
										49968,
										49974
									],
									[
										50084,
										50090
									],
									[
										50231,
										50237
									],
									[
										50465,
										50471
									],
									[
										50783,
										50789
									],
									[
										51084,
										51090
									],
									[
										51256,
										51262
									],
									[
										51438,
										51444
									],
									[
										51698,
										51704
									],
									[
										51905,
										51911
									],
									[
										52057,
										52063
									],
									[
										52427,
										52433
									],
									[
										52588,
										52594
									],
									[
										52686,
										52692
									],
									[
										52794,
										52800
									],
									[
										52888,
										52894
									],
									[
										53039,
										53045
									],
									[
										53281,
										53287
									],
									[
										53483,
										53489
									],
									[
										53789,
										53793
									],
									[
										53809,
										53813
									],
									[
										53847,
										53851
									],
									[
										53867,
										53871
									],
									[
										53905,
										53909
									],
									[
										53925,
										53929
									],
									[
										54133,
										54137
									],
									[
										54153,
										54157
									],
									[
										54192,
										54196
									],
									[
										54212,
										54216
									],
									[
										54251,
										54255
									],
									[
										54271,
										54275
									],
									[
										54582,
										54586
									],
									[
										54602,
										54606
									],
									[
										54636,
										54640
									],
									[
										54656,
										54660
									],
									[
										54690,
										54694
									],
									[
										54710,
										54714
									],
									[
										54964,
										54968
									],
									[
										54978,
										54982
									],
									[
										55017,
										55021
									],
									[
										55277,
										55281
									],
									[
										55459,
										55463
									],
									[
										55641,
										55645
									],
									[
										56582,
										56586
									],
									[
										56906,
										56910
									],
									[
										57864,
										57868
									],
									[
										58127,
										58131
									],
									[
										59084,
										59088
									],
									[
										59363,
										59367
									],
									[
										60321,
										60325
									],
									[
										60588,
										60592
									],
									[
										61546,
										61550
									],
									[
										61772,
										61776
									],
									[
										62730,
										62734
									],
									[
										62955,
										62959
									],
									[
										62975,
										62979
									],
									[
										63013,
										63017
									],
									[
										63033,
										63037
									],
									[
										63071,
										63075
									],
									[
										63091,
										63095
									],
									[
										63299,
										63303
									],
									[
										63319,
										63323
									],
									[
										63358,
										63362
									],
									[
										63378,
										63382
									],
									[
										63417,
										63421
									],
									[
										63437,
										63441
									],
									[
										63748,
										63752
									],
									[
										63768,
										63772
									],
									[
										63802,
										63806
									],
									[
										63822,
										63826
									],
									[
										63856,
										63860
									],
									[
										63876,
										63880
									],
									[
										64148,
										64152
									],
									[
										65110,
										65114
									],
									[
										65388,
										65392
									],
									[
										66346,
										66350
									],
									[
										66592,
										66596
									],
									[
										66606,
										66610
									],
									[
										66645,
										66649
									],
									[
										66936,
										66940
									],
									[
										67162,
										67166
									],
									[
										67438,
										67442
									],
									[
										67761,
										67764
									],
									[
										67793,
										67796
									],
									[
										68104,
										68107
									],
									[
										68292,
										68295
									],
									[
										68503,
										68506
									],
									[
										68595,
										68598
									],
									[
										69409,
										69412
									],
									[
										69824,
										69827
									],
									[
										69977,
										69980
									],
									[
										70803,
										70806
									],
									[
										71158,
										71161
									],
									[
										71312,
										71315
									],
									[
										72136,
										72139
									],
									[
										72489,
										72492
									],
									[
										72642,
										72645
									],
									[
										73483,
										73486
									],
									[
										73838,
										73841
									],
									[
										73992,
										73995
									],
									[
										74820,
										74823
									],
									[
										75175,
										75178
									],
									[
										75329,
										75332
									],
									[
										76116,
										76119
									],
									[
										76471,
										76474
									],
									[
										76625,
										76628
									],
									[
										76814,
										76817
									],
									[
										76992,
										76995
									],
									[
										77164,
										77167
									],
									[
										77335,
										77338
									],
									[
										77512,
										77515
									],
									[
										77685,
										77688
									],
									[
										77862,
										77865
									],
									[
										78039,
										78042
									],
									[
										78213,
										78216
									],
									[
										78389,
										78392
									],
									[
										78566,
										78569
									],
									[
										78737,
										78740
									],
									[
										78911,
										78914
									],
									[
										79083,
										79086
									],
									[
										79259,
										79262
									],
									[
										79433,
										79436
									],
									[
										79610,
										79613
									],
									[
										80653,
										80656
									],
									[
										83517,
										83520
									],
									[
										84048,
										84051
									],
									[
										84548,
										84551
									],
									[
										84908,
										84911
									],
									[
										86405,
										86408
									],
									[
										88865,
										88868
									],
									[
										89015,
										89018
									],
									[
										92736,
										92739
									],
									[
										92897,
										92900
									],
									[
										93019,
										93022
									],
									[
										94377,
										94380
									],
									[
										94645,
										94648
									],
									[
										94841,
										94844
									],
									[
										95684,
										95687
									],
									[
										96043,
										96046
									],
									[
										96197,
										96200
									],
									[
										96665,
										96668
									],
									[
										97560,
										97563
									],
									[
										97880,
										97883
									],
									[
										97953,
										97956
									],
									[
										98072,
										98075
									],
									[
										98193,
										98196
									],
									[
										98239,
										98242
									],
									[
										98311,
										98314
									],
									[
										98332,
										98335
									],
									[
										98369,
										98372
									],
									[
										98415,
										98418
									],
									[
										98479,
										98482
									],
									[
										98554,
										98557
									],
									[
										98641,
										98644
									],
									[
										98731,
										98734
									],
									[
										98795,
										98798
									],
									[
										98816,
										98819
									],
									[
										98851,
										98854
									],
									[
										98941,
										98944
									],
									[
										99011,
										99014
									],
									[
										99137,
										99140
									],
									[
										99244,
										99247
									],
									[
										99382,
										99385
									],
									[
										99609,
										99612
									],
									[
										99740,
										99743
									],
									[
										99800,
										99803
									],
									[
										99876,
										99879
									],
									[
										99960,
										99963
									],
									[
										100070,
										100073
									],
									[
										100154,
										100157
									],
									[
										100267,
										100270
									],
									[
										100397,
										100400
									],
									[
										100473,
										100476
									],
									[
										100528,
										100531
									],
									[
										100557,
										100560
									],
									[
										100702,
										100705
									],
									[
										100731,
										100734
									],
									[
										100974,
										100977
									],
									[
										100990,
										100993
									],
									[
										101120,
										101123
									],
									[
										101146,
										101149
									],
									[
										101257,
										101260
									],
									[
										101284,
										101287
									],
									[
										101405,
										101408
									],
									[
										101512,
										101515
									],
									[
										101663,
										101666
									],
									[
										101918,
										101921
									],
									[
										102111,
										102114
									],
									[
										102257,
										102260
									],
									[
										102392,
										102395
									],
									[
										102468,
										102471
									],
									[
										102542,
										102545
									],
									[
										102566,
										102569
									],
									[
										102681,
										102684
									],
									[
										102708,
										102711
									],
									[
										102817,
										102820
									],
									[
										102978,
										102981
									],
									[
										103097,
										103100
									],
									[
										103255,
										103258
									],
									[
										103480,
										103483
									],
									[
										103613,
										103616
									],
									[
										103644,
										103647
									],
									[
										103720,
										103723
									],
									[
										103802,
										103805
									],
									[
										103912,
										103915
									],
									[
										103967,
										103970
									],
									[
										104080,
										104083
									],
									[
										104210,
										104213
									],
									[
										104298,
										104301
									],
									[
										104364,
										104367
									],
									[
										104392,
										104395
									],
									[
										104538,
										104541
									],
									[
										104567,
										104570
									],
									[
										104810,
										104813
									],
									[
										104826,
										104829
									],
									[
										104968,
										104971
									],
									[
										105012,
										105015
									],
									[
										105135,
										105138
									],
									[
										105172,
										105175
									],
									[
										105293,
										105296
									],
									[
										105412,
										105415
									],
									[
										105583,
										105586
									],
									[
										105836,
										105839
									],
									[
										106000,
										106003
									],
									[
										106144,
										106147
									],
									[
										106279,
										106282
									],
									[
										106367,
										106370
									],
									[
										106459,
										106462
									],
									[
										106483,
										106486
									],
									[
										106610,
										106613
									],
									[
										106648,
										106651
									],
									[
										106769,
										106772
									],
									[
										106919,
										106922
									],
									[
										107044,
										107047
									],
									[
										107184,
										107187
									],
									[
										107314,
										107317
									],
									[
										107506,
										107509
									],
									[
										107858,
										107861
									],
									[
										107985,
										107988
									],
									[
										108191,
										108194
									],
									[
										108274,
										108277
									],
									[
										108382,
										108385
									],
									[
										108484,
										108487
									],
									[
										108513,
										108516
									],
									[
										108588,
										108591
									],
									[
										108660,
										108663
									],
									[
										108717,
										108720
									],
									[
										108789,
										108792
									],
									[
										108805,
										108808
									],
									[
										108855,
										108858
									],
									[
										109038,
										109041
									],
									[
										109092,
										109095
									],
									[
										109220,
										109223
									],
									[
										109431,
										109434
									],
									[
										109567,
										109570
									],
									[
										109797,
										109800
									],
									[
										109831,
										109834
									],
									[
										109855,
										109858
									],
									[
										109877,
										109880
									],
									[
										109929,
										109932
									],
									[
										109969,
										109972
									],
									[
										109993,
										109996
									],
									[
										110018,
										110021
									],
									[
										110254,
										110257
									],
									[
										110408,
										110411
									],
									[
										110656,
										110659
									],
									[
										110696,
										110699
									],
									[
										110720,
										110723
									],
									[
										110748,
										110751
									],
									[
										110812,
										110815
									],
									[
										110858,
										110861
									],
									[
										110882,
										110885
									],
									[
										110913,
										110916
									],
									[
										111100,
										111103
									],
									[
										111131,
										111134
									],
									[
										111172,
										111175
									],
									[
										111241,
										111244
									],
									[
										111297,
										111300
									],
									[
										111346,
										111349
									],
									[
										111396,
										111399
									],
									[
										111444,
										111447
									],
									[
										111496,
										111499
									],
									[
										111518,
										111521
									],
									[
										111563,
										111566
									],
									[
										111585,
										111588
									],
									[
										111791,
										111794
									],
									[
										111851,
										111854
									],
									[
										111885,
										111888
									],
									[
										111945,
										111948
									],
									[
										111996,
										111999
									],
									[
										112034,
										112037
									],
									[
										112095,
										112098
									],
									[
										112136,
										112139
									],
									[
										112174,
										112177
									],
									[
										112268,
										112271
									],
									[
										112366,
										112369
									],
									[
										112425,
										112428
									],
									[
										112510,
										112513
									],
									[
										112567,
										112570
									],
									[
										112648,
										112651
									],
									[
										112698,
										112701
									],
									[
										113106,
										113109
									],
									[
										113171,
										113174
									],
									[
										113198,
										113201
									],
									[
										113251,
										113254
									],
									[
										113310,
										113313
									],
									[
										113401,
										113404
									],
									[
										113443,
										113446
									],
									[
										113492,
										113495
									],
									[
										113552,
										113555
									],
									[
										113595,
										113598
									],
									[
										113767,
										113770
									],
									[
										113826,
										113829
									],
									[
										113884,
										113887
									],
									[
										113966,
										113969
									],
									[
										114039,
										114042
									],
									[
										114094,
										114097
									],
									[
										114181,
										114184
									],
									[
										114231,
										114234
									],
									[
										114297,
										114300
									],
									[
										114345,
										114348
									],
									[
										114394,
										114397
									],
									[
										114655,
										114658
									],
									[
										114733,
										114736
									],
									[
										114814,
										114817
									],
									[
										114893,
										114896
									],
									[
										114971,
										114974
									],
									[
										115180,
										115183
									],
									[
										115245,
										115248
									],
									[
										115275,
										115278
									],
									[
										115320,
										115323
									],
									[
										115348,
										115351
									],
									[
										115396,
										115399
									],
									[
										115448,
										115451
									],
									[
										115513,
										115516
									],
									[
										115540,
										115543
									],
									[
										115593,
										115596
									],
									[
										115653,
										115656
									],
									[
										115744,
										115747
									],
									[
										115926,
										115929
									],
									[
										115986,
										115989
									],
									[
										116029,
										116032
									],
									[
										116262,
										116265
									],
									[
										116451,
										116454
									],
									[
										116625,
										116628
									],
									[
										116786,
										116789
									],
									[
										116830,
										116833
									],
									[
										116854,
										116857
									],
									[
										116870,
										116873
									],
									[
										116932,
										116935
									],
									[
										116971,
										116974
									],
									[
										117060,
										117063
									],
									[
										117084,
										117087
									],
									[
										117103,
										117106
									],
									[
										117290,
										117293
									],
									[
										117343,
										117346
									],
									[
										117359,
										117362
									],
									[
										117417,
										117420
									],
									[
										117456,
										117459
									],
									[
										117554,
										117557
									],
									[
										117633,
										117636
									],
									[
										117653,
										117656
									],
									[
										117761,
										117764
									],
									[
										117805,
										117808
									],
									[
										118130,
										118133
									],
									[
										118147,
										118150
									],
									[
										118163,
										118166
									],
									[
										118184,
										118187
									],
									[
										118372,
										118375
									],
									[
										118417,
										118420
									],
									[
										118455,
										118458
									],
									[
										118516,
										118519
									],
									[
										118557,
										118560
									],
									[
										118595,
										118598
									],
									[
										118689,
										118692
									],
									[
										118787,
										118790
									],
									[
										118846,
										118849
									],
									[
										118931,
										118934
									],
									[
										118988,
										118991
									],
									[
										119315,
										119318
									],
									[
										119394,
										119397
									],
									[
										119472,
										119475
									],
									[
										119681,
										119684
									],
									[
										119746,
										119749
									],
									[
										119776,
										119779
									],
									[
										119821,
										119824
									],
									[
										119849,
										119852
									],
									[
										120077,
										120080
									],
									[
										120266,
										120269
									],
									[
										120440,
										120443
									],
									[
										120601,
										120604
									],
									[
										120645,
										120648
									],
									[
										120669,
										120672
									],
									[
										120685,
										120688
									],
									[
										120747,
										120750
									],
									[
										120786,
										120789
									],
									[
										120875,
										120878
									],
									[
										120899,
										120902
									],
									[
										120918,
										120921
									],
									[
										121105,
										121108
									],
									[
										121158,
										121161
									],
									[
										121174,
										121177
									],
									[
										121232,
										121235
									],
									[
										121271,
										121274
									],
									[
										121369,
										121372
									],
									[
										121448,
										121451
									],
									[
										121468,
										121471
									],
									[
										121576,
										121579
									],
									[
										121620,
										121623
									],
									[
										121936,
										121939
									],
									[
										121953,
										121956
									],
									[
										121969,
										121972
									],
									[
										121990,
										121993
									],
									[
										122202,
										122205
									],
									[
										122389,
										122392
									],
									[
										122646,
										122649
									],
									[
										122776,
										122779
									],
									[
										122863,
										122866
									],
									[
										123001,
										123004
									],
									[
										123054,
										123057
									],
									[
										123330,
										123333
									],
									[
										123440,
										123443
									],
									[
										123556,
										123559
									],
									[
										123696,
										123699
									],
									[
										123745,
										123748
									],
									[
										123938,
										123941
									],
									[
										124026,
										124029
									],
									[
										124091,
										124094
									],
									[
										124179,
										124182
									],
									[
										124250,
										124253
									],
									[
										124326,
										124329
									],
									[
										124380,
										124383
									],
									[
										124456,
										124459
									],
									[
										124530,
										124533
									],
									[
										124576,
										124579
									],
									[
										124643,
										124646
									],
									[
										124808,
										124811
									],
									[
										124823,
										124826
									],
									[
										124906,
										124909
									],
									[
										125071,
										125074
									],
									[
										125086,
										125089
									],
									[
										125159,
										125162
									],
									[
										125403,
										125406
									],
									[
										125568,
										125571
									],
									[
										125627,
										125630
									],
									[
										125640,
										125643
									],
									[
										125720,
										125723
									],
									[
										125881,
										125884
									],
									[
										125935,
										125938
									],
									[
										125948,
										125951
									],
									[
										126018,
										126021
									],
									[
										126220,
										126223
									],
									[
										126270,
										126273
									],
									[
										126426,
										126429
									],
									[
										126577,
										126580
									],
									[
										126746,
										126749
									],
									[
										126796,
										126799
									],
									[
										126878,
										126881
									],
									[
										126992,
										126995
									],
									[
										127034,
										127037
									],
									[
										127117,
										127120
									],
									[
										127187,
										127190
									],
									[
										127294,
										127297
									],
									[
										127377,
										127380
									],
									[
										127447,
										127450
									],
									[
										127554,
										127557
									],
									[
										127635,
										127638
									],
									[
										127705,
										127708
									],
									[
										127808,
										127811
									],
									[
										127885,
										127888
									],
									[
										127951,
										127954
									],
									[
										128046,
										128049
									],
									[
										128055,
										128058
									],
									[
										128094,
										128097
									],
									[
										128126,
										128129
									],
									[
										128195,
										128198
									],
									[
										128220,
										128223
									],
									[
										128267,
										128270
									],
									[
										128280,
										128283
									],
									[
										128319,
										128322
									],
									[
										128354,
										128357
									],
									[
										128449,
										128452
									],
									[
										128474,
										128477
									],
									[
										128623,
										128626
									],
									[
										128749,
										128752
									],
									[
										128816,
										128819
									],
									[
										128992,
										128995
									],
									[
										129118,
										129121
									],
									[
										129185,
										129188
									],
									[
										129286,
										129289
									],
									[
										129326,
										129329
									],
									[
										129452,
										129455
									],
									[
										129519,
										129522
									],
									[
										129633,
										129636
									],
									[
										129662,
										129665
									],
									[
										129739,
										129742
									],
									[
										129813,
										129816
									],
									[
										130036,
										130039
									],
									[
										130094,
										130097
									],
									[
										130116,
										130119
									],
									[
										130210,
										130213
									],
									[
										130232,
										130235
									],
									[
										130336,
										130339
									],
									[
										130361,
										130364
									],
									[
										130411,
										130414
									],
									[
										130798,
										130801
									],
									[
										130828,
										130831
									],
									[
										130843,
										130846
									],
									[
										130896,
										130899
									],
									[
										130911,
										130914
									],
									[
										131070,
										131073
									],
									[
										131116,
										131119
									],
									[
										131201,
										131204
									],
									[
										131436,
										131439
									],
									[
										131465,
										131468
									],
									[
										131776,
										131779
									],
									[
										131956,
										131959
									],
									[
										132160,
										132163
									],
									[
										132251,
										132254
									],
									[
										132392,
										132395
									],
									[
										132502,
										132505
									],
									[
										132518,
										132521
									],
									[
										132559,
										132562
									],
									[
										132648,
										132651
									],
									[
										133004,
										133007
									],
									[
										133366,
										133369
									],
									[
										133682,
										133685
									],
									[
										134158,
										134161
									],
									[
										134472,
										134475
									],
									[
										134501,
										134504
									],
									[
										134556,
										134559
									],
									[
										134626,
										134629
									],
									[
										134642,
										134645
									],
									[
										134681,
										134684
									],
									[
										134899,
										134902
									],
									[
										135253,
										135256
									],
									[
										135480,
										135483
									],
									[
										136588,
										136591
									],
									[
										139309,
										139312
									],
									[
										141239,
										141242
									],
									[
										141445,
										141448
									],
									[
										148201,
										148204
									],
									[
										151182,
										151185
									],
									[
										151211,
										151214
									],
									[
										151488,
										151491
									],
									[
										151505,
										151508
									],
									[
										151521,
										151524
									],
									[
										151542,
										151545
									],
									[
										151822,
										151825
									],
									[
										151839,
										151842
									],
									[
										151855,
										151858
									],
									[
										151876,
										151879
									],
									[
										152066,
										152069
									],
									[
										152193,
										152196
									],
									[
										152415,
										152418
									],
									[
										152437,
										152440
									],
									[
										152461,
										152464
									],
									[
										152483,
										152486
									],
									[
										152523,
										152526
									],
									[
										152550,
										152553
									],
									[
										152574,
										152577
									],
									[
										152599,
										152602
									],
									[
										152774,
										152777
									],
									[
										152994,
										152997
									],
									[
										153026,
										153029
									],
									[
										153337,
										153340
									],
									[
										153566,
										153569
									],
									[
										153598,
										153601
									],
									[
										154598,
										154601
									],
									[
										154953,
										154956
									],
									[
										155107,
										155110
									],
									[
										155293,
										155296
									],
									[
										155730,
										155733
									],
									[
										156045,
										156048
									],
									[
										156328,
										156331
									],
									[
										156577,
										156580
									],
									[
										156745,
										156748
									],
									[
										156826,
										156829
									],
									[
										156953,
										156956
									],
									[
										157038,
										157041
									],
									[
										157299,
										157302
									],
									[
										157380,
										157383
									],
									[
										157404,
										157407
									],
									[
										157775,
										157778
									],
									[
										157984,
										157987
									],
									[
										158199,
										158202
									],
									[
										158412,
										158415
									],
									[
										158447,
										158450
									],
									[
										158484,
										158487
									],
									[
										158518,
										158521
									],
									[
										158552,
										158555
									],
									[
										158586,
										158589
									],
									[
										158771,
										158774
									],
									[
										158801,
										158804
									],
									[
										158834,
										158837
									],
									[
										159009,
										159012
									],
									[
										159038,
										159041
									],
									[
										159076,
										159079
									],
									[
										159156,
										159159
									],
									[
										159189,
										159192
									],
									[
										159224,
										159227
									],
									[
										159286,
										159289
									],
									[
										159318,
										159321
									],
									[
										159350,
										159353
									],
									[
										159633,
										159636
									],
									[
										159657,
										159660
									],
									[
										159693,
										159696
									],
									[
										159774,
										159777
									],
									[
										159806,
										159809
									],
									[
										159937,
										159940
									],
									[
										159970,
										159973
									],
									[
										160200,
										160203
									],
									[
										160239,
										160242
									],
									[
										160271,
										160274
									],
									[
										160306,
										160309
									],
									[
										160482,
										160485
									],
									[
										160501,
										160504
									],
									[
										160530,
										160533
									],
									[
										160562,
										160565
									],
									[
										160932,
										160935
									],
									[
										160962,
										160965
									],
									[
										161345,
										161348
									],
									[
										161618,
										161621
									],
									[
										161670,
										161673
									],
									[
										161902,
										161905
									],
									[
										161983,
										161986
									],
									[
										162003,
										162006
									],
									[
										162273,
										162276
									],
									[
										162341,
										162344
									],
									[
										162450,
										162453
									],
									[
										162518,
										162521
									],
									[
										162895,
										162898
									],
									[
										162925,
										162928
									],
									[
										163318,
										163321
									],
									[
										163374,
										163377
									],
									[
										163822,
										163825
									],
									[
										163875,
										163878
									],
									[
										164211,
										164214
									],
									[
										164423,
										164426
									],
									[
										164516,
										164519
									],
									[
										164620,
										164623
									],
									[
										164648,
										164651
									],
									[
										165027,
										165030
									],
									[
										165059,
										165062
									],
									[
										165836,
										165839
									],
									[
										166407,
										166410
									],
									[
										166439,
										166442
									],
									[
										167146,
										167149
									],
									[
										167390,
										167393
									],
									[
										167890,
										167893
									],
									[
										167922,
										167925
									],
									[
										168625,
										168628
									],
									[
										168817,
										168820
									],
									[
										169033,
										169036
									],
									[
										169121,
										169124
									],
									[
										169428,
										169431
									],
									[
										169861,
										169864
									],
									[
										170383,
										170386
									],
									[
										171067,
										171070
									],
									[
										171190,
										171193
									],
									[
										171839,
										171842
									],
									[
										171870,
										171873
									],
									[
										172237,
										172240
									],
									[
										172422,
										172425
									],
									[
										172441,
										172444
									],
									[
										172648,
										172651
									],
									[
										172922,
										172925
									],
									[
										173231,
										173234
									],
									[
										173436,
										173439
									],
									[
										173498,
										173501
									],
									[
										173720,
										173723
									],
									[
										173752,
										173755
									],
									[
										173907,
										173910
									],
									[
										174050,
										174053
									],
									[
										174326,
										174329
									],
									[
										174653,
										174656
									],
									[
										174940,
										174943
									],
									[
										175155,
										175158
									],
									[
										175236,
										175239
									],
									[
										175317,
										175320
									],
									[
										175481,
										175484
									],
									[
										175617,
										175620
									],
									[
										175655,
										175658
									],
									[
										175897,
										175900
									],
									[
										175981,
										175984
									],
									[
										176045,
										176048
									],
									[
										176162,
										176165
									],
									[
										176226,
										176229
									],
									[
										176261,
										176264
									],
									[
										176285,
										176288
									],
									[
										176340,
										176343
									],
									[
										176407,
										176410
									],
									[
										176506,
										176509
									],
									[
										176638,
										176641
									],
									[
										176699,
										176702
									],
									[
										176777,
										176780
									],
									[
										177011,
										177014
									],
									[
										177058,
										177061
									],
									[
										177114,
										177117
									],
									[
										177282,
										177285
									],
									[
										177421,
										177424
									],
									[
										177605,
										177608
									],
									[
										177888,
										177891
									],
									[
										178171,
										178174
									],
									[
										178420,
										178423
									],
									[
										178588,
										178591
									],
									[
										178669,
										178672
									],
									[
										178796,
										178799
									],
									[
										178881,
										178884
									],
									[
										179142,
										179145
									],
									[
										179223,
										179226
									],
									[
										179247,
										179250
									],
									[
										179618,
										179621
									],
									[
										179827,
										179830
									],
									[
										180343,
										180346
									],
									[
										181380,
										181383
									],
									[
										182423,
										182426
									],
									[
										183013,
										183016
									],
									[
										184048,
										184051
									],
									[
										184638,
										184641
									],
									[
										185675,
										185678
									],
									[
										186676,
										186679
									],
									[
										187600,
										187603
									],
									[
										188348,
										188351
									],
									[
										189106,
										189109
									],
									[
										189542,
										189545
									],
									[
										190324,
										190327
									],
									[
										190757,
										190760
									],
									[
										191540,
										191543
									],
									[
										192266,
										192269
									],
									[
										193051,
										193054
									],
									[
										193962,
										193965
									],
									[
										194859,
										194862
									],
									[
										195497,
										195500
									],
									[
										195578,
										195581
									],
									[
										195659,
										195662
									],
									[
										195823,
										195826
									],
									[
										195959,
										195962
									],
									[
										195997,
										196000
									],
									[
										196239,
										196242
									],
									[
										196323,
										196326
									],
									[
										196387,
										196390
									],
									[
										196504,
										196507
									],
									[
										196568,
										196571
									],
									[
										196603,
										196606
									],
									[
										196627,
										196630
									],
									[
										196682,
										196685
									],
									[
										196749,
										196752
									],
									[
										196848,
										196851
									],
									[
										196980,
										196983
									],
									[
										197041,
										197044
									],
									[
										197119,
										197122
									],
									[
										197353,
										197356
									],
									[
										197400,
										197403
									],
									[
										197456,
										197459
									],
									[
										197624,
										197627
									],
									[
										197763,
										197766
									],
									[
										197947,
										197950
									],
									[
										198195,
										198198
									],
									[
										198408,
										198411
									],
									[
										198443,
										198446
									],
									[
										198480,
										198483
									],
									[
										198514,
										198517
									],
									[
										198548,
										198551
									],
									[
										198582,
										198585
									],
									[
										198767,
										198770
									],
									[
										198797,
										198800
									],
									[
										198830,
										198833
									],
									[
										199005,
										199008
									],
									[
										199034,
										199037
									],
									[
										199072,
										199075
									],
									[
										199152,
										199155
									],
									[
										199185,
										199188
									],
									[
										199220,
										199223
									],
									[
										199282,
										199285
									],
									[
										199314,
										199317
									],
									[
										199346,
										199349
									],
									[
										199629,
										199632
									],
									[
										199653,
										199656
									],
									[
										199689,
										199692
									],
									[
										199770,
										199773
									],
									[
										199802,
										199805
									],
									[
										199933,
										199936
									],
									[
										199966,
										199969
									],
									[
										200196,
										200199
									],
									[
										200235,
										200238
									],
									[
										200267,
										200270
									],
									[
										200302,
										200305
									],
									[
										200478,
										200481
									],
									[
										200497,
										200500
									],
									[
										200526,
										200529
									],
									[
										200558,
										200561
									],
									[
										200795,
										200798
									],
									[
										201103,
										201106
									],
									[
										201811,
										201814
									],
									[
										202053,
										202056
									],
									[
										202078,
										202081
									],
									[
										202109,
										202112
									],
									[
										202318,
										202321
									],
									[
										202373,
										202376
									],
									[
										202559,
										202562
									],
									[
										202581,
										202584
									],
									[
										202795,
										202798
									],
									[
										202918,
										202921
									],
									[
										203372,
										203375
									],
									[
										204015,
										204018
									],
									[
										204376,
										204379
									],
									[
										204835,
										204838
									],
									[
										205412,
										205415
									],
									[
										205809,
										205812
									],
									[
										205847,
										205850
									],
									[
										206032,
										206035
									],
									[
										206161,
										206164
									],
									[
										206241,
										206244
									],
									[
										206275,
										206278
									],
									[
										206612,
										206615
									],
									[
										206870,
										206873
									],
									[
										206958,
										206961
									],
									[
										207111,
										207114
									],
									[
										207128,
										207131
									],
									[
										207156,
										207159
									],
									[
										207364,
										207367
									],
									[
										207463,
										207466
									],
									[
										207490,
										207493
									],
									[
										207558,
										207561
									],
									[
										207653,
										207656
									],
									[
										207843,
										207846
									],
									[
										208030,
										208033
									],
									[
										208306,
										208309
									],
									[
										208659,
										208662
									],
									[
										209018,
										209021
									],
									[
										209048,
										209051
									],
									[
										209338,
										209341
									],
									[
										209493,
										209496
									],
									[
										209792,
										209795
									],
									[
										210499,
										210502
									],
									[
										211451,
										211454
									],
									[
										212048,
										212051
									],
									[
										212319,
										212322
									],
									[
										212348,
										212351
									],
									[
										212401,
										212404
									],
									[
										212430,
										212433
									],
									[
										212984,
										212987
									],
									[
										213760,
										213763
									],
									[
										214452,
										214455
									],
									[
										214748,
										214751
									],
									[
										214931,
										214934
									],
									[
										215102,
										215105
									],
									[
										215257,
										215260
									],
									[
										215543,
										215546
									],
									[
										216383,
										216386
									],
									[
										217628,
										217631
									],
									[
										217661,
										217664
									],
									[
										218024,
										218027
									],
									[
										218047,
										218050
									],
									[
										218069,
										218072
									],
									[
										218716,
										218719
									],
									[
										219899,
										219902
									],
									[
										219929,
										219932
									],
									[
										220559,
										220562
									],
									[
										220589,
										220592
									],
									[
										221093,
										221096
									],
									[
										221123,
										221126
									],
									[
										221929,
										221932
									],
									[
										222052,
										222055
									],
									[
										222701,
										222704
									],
									[
										222732,
										222735
									],
									[
										223157,
										223160
									],
									[
										223342,
										223345
									],
									[
										223361,
										223364
									],
									[
										223593,
										223596
									],
									[
										223880,
										223883
									],
									[
										223994,
										223997
									],
									[
										224152,
										224155
									],
									[
										224425,
										224428
									],
									[
										224477,
										224480
									],
									[
										224709,
										224712
									],
									[
										224790,
										224793
									],
									[
										224810,
										224813
									],
									[
										225080,
										225083
									],
									[
										225148,
										225151
									],
									[
										225257,
										225260
									],
									[
										225325,
										225328
									],
									[
										225524,
										225527
									],
									[
										225887,
										225894
									],
									[
										226138,
										226145
									],
									[
										226439,
										226452
									],
									[
										226640,
										226653
									],
									[
										226897,
										226910
									],
									[
										227098,
										227111
									],
									[
										227423,
										227436
									],
									[
										227624,
										227637
									],
									[
										227881,
										227894
									],
									[
										228082,
										228095
									],
									[
										228355,
										228362
									],
									[
										228769,
										228776
									],
									[
										228861,
										228868
									],
									[
										229119,
										229126
									],
									[
										229493,
										229500
									],
									[
										229696,
										229703
									],
									[
										229952,
										229959
									],
									[
										230093,
										230100
									],
									[
										230259,
										230266
									],
									[
										230440,
										230447
									],
									[
										230596,
										230603
									],
									[
										230770,
										230777
									],
									[
										230993,
										231000
									],
									[
										231174,
										231181
									],
									[
										231325,
										231332
									],
									[
										231615,
										231622
									],
									[
										231657,
										231664
									],
									[
										231961,
										231968
									],
									[
										232129,
										232136
									],
									[
										232332,
										232339
									],
									[
										232512,
										232519
									],
									[
										232565,
										232572
									],
									[
										232811,
										232818
									],
									[
										233196,
										233203
									],
									[
										233465,
										233472
									],
									[
										233627,
										233634
									],
									[
										233650,
										233657
									],
									[
										233673,
										233680
									],
									[
										233748,
										233755
									],
									[
										233776,
										233783
									],
									[
										233955,
										233962
									],
									[
										234186,
										234193
									],
									[
										234608,
										234615
									],
									[
										234803,
										234810
									],
									[
										234858,
										234865
									],
									[
										235026,
										235033
									],
									[
										235190,
										235197
									],
									[
										235247,
										235254
									],
									[
										235404,
										235411
									],
									[
										235463,
										235470
									],
									[
										235549,
										235556
									],
									[
										235572,
										235579
									],
									[
										235600,
										235607
									],
									[
										235623,
										235630
									],
									[
										235853,
										235860
									],
									[
										235908,
										235915
									],
									[
										235930,
										235937
									],
									[
										235982,
										235989
									],
									[
										236164,
										236171
									],
									[
										236222,
										236229
									],
									[
										236275,
										236282
									],
									[
										236621,
										236628
									],
									[
										236677,
										236684
									],
									[
										236728,
										236735
									],
									[
										237062,
										237069
									],
									[
										237260,
										237267
									],
									[
										237659,
										237666
									],
									[
										237877,
										237884
									],
									[
										237948,
										237955
									],
									[
										238199,
										238206
									],
									[
										238272,
										238279
									],
									[
										238617,
										238624
									],
									[
										238688,
										238695
									],
									[
										238942,
										238949
									],
									[
										239103,
										239110
									],
									[
										239379,
										239386
									],
									[
										239419,
										239426
									],
									[
										239614,
										239621
									],
									[
										239736,
										239743
									],
									[
										239954,
										239961
									],
									[
										240097,
										240104
									],
									[
										240352,
										240359
									],
									[
										240641,
										240648
									],
									[
										241055,
										241062
									],
									[
										241147,
										241154
									],
									[
										241405,
										241412
									],
									[
										241779,
										241786
									],
									[
										242045,
										242052
									],
									[
										242193,
										242200
									],
									[
										242216,
										242223
									],
									[
										242239,
										242246
									],
									[
										242314,
										242321
									],
									[
										242342,
										242349
									],
									[
										242614,
										242621
									],
									[
										242823,
										242830
									],
									[
										243070,
										243077
									],
									[
										243157,
										243164
									],
									[
										243462,
										243469
									],
									[
										243693,
										243700
									],
									[
										243964,
										243971
									],
									[
										244348,
										244355
									],
									[
										244559,
										244566
									],
									[
										244736,
										244743
									],
									[
										244905,
										244912
									],
									[
										245261,
										245268
									],
									[
										245478,
										245485
									],
									[
										245650,
										245657
									],
									[
										245841,
										245848
									],
									[
										246100,
										246107
									],
									[
										246355,
										246362
									],
									[
										246839,
										246846
									],
									[
										246951,
										246958
									],
									[
										247118,
										247125
									],
									[
										247402,
										247409
									],
									[
										247733,
										247740
									],
									[
										247952,
										247959
									],
									[
										248269,
										248276
									],
									[
										248382,
										248389
									],
									[
										248619,
										248626
									],
									[
										248804,
										248811
									],
									[
										249128,
										249135
									],
									[
										249310,
										249317
									],
									[
										249471,
										249478
									],
									[
										249636,
										249643
									],
									[
										249978,
										249985
									],
									[
										250144,
										250151
									],
									[
										250342,
										250349
									],
									[
										250574,
										250581
									],
									[
										250860,
										250867
									],
									[
										251014,
										251021
									],
									[
										251322,
										251329
									],
									[
										251506,
										251513
									],
									[
										251720,
										251727
									],
									[
										251963,
										251970
									],
									[
										252292,
										252299
									],
									[
										252543,
										252550
									],
									[
										252790,
										252797
									],
									[
										253124,
										253131
									],
									[
										253324,
										253331
									],
									[
										253502,
										253509
									],
									[
										253740,
										253747
									],
									[
										254020,
										254027
									],
									[
										254225,
										254232
									],
									[
										254458,
										254465
									],
									[
										254725,
										254732
									],
									[
										254948,
										254955
									],
									[
										255177,
										255184
									],
									[
										255348,
										255355
									],
									[
										255553,
										255560
									],
									[
										255688,
										255695
									],
									[
										255841,
										255848
									],
									[
										255939,
										255946
									],
									[
										256098,
										256105
									],
									[
										256269,
										256276
									],
									[
										256558,
										256565
									],
									[
										256686,
										256693
									],
									[
										256712,
										256719
									],
									[
										256893,
										256900
									],
									[
										257031,
										257038
									],
									[
										257174,
										257181
									],
									[
										257211,
										257218
									],
									[
										257288,
										257295
									],
									[
										257483,
										257490
									],
									[
										257520,
										257527
									],
									[
										257646,
										257653
									],
									[
										257793,
										257800
									],
									[
										257831,
										257838
									],
									[
										257948,
										257955
									],
									[
										257996,
										258003
									],
									[
										258034,
										258041
									],
									[
										258151,
										258158
									],
									[
										258308,
										258315
									],
									[
										258346,
										258353
									],
									[
										258624,
										258631
									],
									[
										258836,
										258843
									],
									[
										258875,
										258882
									],
									[
										259003,
										259010
									],
									[
										259438,
										259445
									],
									[
										259477,
										259484
									],
									[
										259903,
										259910
									],
									[
										260160,
										260167
									],
									[
										260314,
										260321
									],
									[
										260351,
										260358
									],
									[
										260467,
										260474
									],
									[
										260676,
										260683
									],
									[
										260714,
										260721
									],
									[
										260851,
										260858
									],
									[
										261229,
										261236
									],
									[
										261269,
										261276
									],
									[
										261392,
										261399
									],
									[
										261521,
										261528
									],
									[
										261559,
										261566
									],
									[
										261678,
										261685
									],
									[
										261838,
										261845
									],
									[
										261877,
										261884
									],
									[
										261999,
										262006
									],
									[
										263039,
										263046
									],
									[
										263077,
										263084
									],
									[
										263196,
										263203
									],
									[
										263444,
										263451
									],
									[
										263647,
										263654
									],
									[
										263854,
										263861
									],
									[
										263944,
										263951
									],
									[
										264208,
										264215
									],
									[
										264246,
										264253
									],
									[
										264365,
										264372
									],
									[
										264714,
										264721
									],
									[
										264751,
										264758
									],
									[
										264867,
										264874
									],
									[
										265068,
										265075
									],
									[
										265219,
										265226
									],
									[
										265354,
										265361
									],
									[
										265542,
										265549
									],
									[
										265733,
										265740
									],
									[
										265879,
										265886
									],
									[
										265934,
										265941
									],
									[
										266114,
										266121
									],
									[
										266245,
										266252
									],
									[
										266386,
										266393
									],
									[
										266568,
										266575
									],
									[
										266731,
										266738
									],
									[
										266954,
										266961
									],
									[
										267181,
										267188
									],
									[
										267326,
										267333
									],
									[
										267620,
										267627
									],
									[
										267847,
										267854
									],
									[
										267943,
										267950
									],
									[
										268173,
										268180
									],
									[
										268275,
										268282
									],
									[
										268457,
										268464
									],
									[
										268666,
										268673
									],
									[
										269240,
										269247
									],
									[
										269304,
										269311
									],
									[
										269386,
										269393
									],
									[
										269536,
										269543
									],
									[
										269670,
										269677
									],
									[
										269858,
										269865
									],
									[
										270043,
										270050
									],
									[
										270119,
										270126
									],
									[
										270353,
										270360
									],
									[
										270650,
										270657
									],
									[
										270872,
										270879
									],
									[
										271017,
										271024
									],
									[
										271353,
										271360
									],
									[
										271506,
										271513
									],
									[
										271801,
										271808
									],
									[
										272136,
										272143
									],
									[
										272377,
										272384
									],
									[
										272595,
										272602
									],
									[
										273304,
										273311
									],
									[
										273489,
										273496
									],
									[
										273553,
										273560
									],
									[
										273635,
										273642
									],
									[
										273783,
										273790
									],
									[
										273918,
										273925
									],
									[
										274105,
										274112
									],
									[
										274302,
										274309
									],
									[
										274382,
										274389
									],
									[
										274624,
										274631
									],
									[
										274921,
										274928
									],
									[
										275202,
										275209
									],
									[
										275355,
										275362
									],
									[
										275639,
										275646
									],
									[
										275952,
										275959
									],
									[
										276177,
										276184
									],
									[
										276384,
										276391
									],
									[
										276954,
										276961
									],
									[
										277018,
										277025
									],
									[
										277100,
										277107
									],
									[
										277248,
										277255
									],
									[
										277382,
										277389
									],
									[
										277529,
										277536
									],
									[
										277806,
										277813
									],
									[
										278003,
										278010
									],
									[
										278083,
										278090
									],
									[
										278325,
										278332
									],
									[
										278622,
										278629
									],
									[
										278844,
										278851
									],
									[
										279180,
										279187
									],
									[
										279333,
										279340
									],
									[
										279628,
										279635
									],
									[
										279963,
										279970
									],
									[
										280204,
										280211
									],
									[
										280422,
										280429
									],
									[
										281131,
										281138
									],
									[
										281316,
										281323
									],
									[
										281380,
										281387
									],
									[
										281462,
										281469
									],
									[
										281610,
										281617
									],
									[
										281745,
										281752
									],
									[
										281932,
										281939
									],
									[
										282129,
										282136
									],
									[
										282209,
										282216
									],
									[
										282440,
										282447
									],
									[
										282503,
										282510
									],
									[
										282567,
										282574
									],
									[
										282811,
										282818
									],
									[
										283108,
										283115
									],
									[
										283334,
										283341
									],
									[
										283479,
										283486
									],
									[
										283815,
										283822
									],
									[
										283968,
										283975
									],
									[
										284263,
										284270
									],
									[
										284598,
										284605
									],
									[
										284839,
										284846
									],
									[
										285057,
										285064
									],
									[
										285766,
										285773
									],
									[
										285951,
										285958
									],
									[
										286015,
										286022
									],
									[
										286097,
										286104
									],
									[
										286245,
										286252
									],
									[
										286380,
										286387
									],
									[
										286567,
										286574
									],
									[
										286764,
										286771
									],
									[
										286844,
										286851
									],
									[
										287086,
										287093
									],
									[
										287383,
										287390
									],
									[
										287568,
										287575
									],
									[
										287713,
										287720
									],
									[
										288014,
										288021
									],
									[
										288167,
										288174
									],
									[
										288462,
										288469
									],
									[
										288797,
										288804
									],
									[
										289038,
										289045
									],
									[
										289256,
										289263
									],
									[
										289965,
										289972
									],
									[
										290150,
										290157
									],
									[
										290214,
										290221
									],
									[
										290296,
										290303
									],
									[
										290444,
										290451
									],
									[
										290579,
										290586
									],
									[
										290766,
										290773
									],
									[
										290963,
										290970
									],
									[
										291043,
										291050
									],
									[
										291285,
										291292
									],
									[
										291582,
										291589
									],
									[
										291745,
										291752
									],
									[
										291928,
										291935
									],
									[
										292084,
										292091
									],
									[
										292395,
										292402
									],
									[
										292662,
										292669
									],
									[
										292868,
										292875
									],
									[
										292999,
										293006
									],
									[
										293091,
										293098
									],
									[
										293679,
										293686
									],
									[
										294124,
										294131
									],
									[
										294315,
										294322
									],
									[
										294545,
										294552
									],
									[
										294720,
										294727
									],
									[
										294976,
										294983
									],
									[
										295117,
										295124
									],
									[
										295283,
										295290
									],
									[
										295464,
										295471
									],
									[
										295620,
										295627
									],
									[
										295794,
										295801
									],
									[
										296017,
										296024
									],
									[
										296210,
										296217
									],
									[
										296466,
										296473
									],
									[
										296595,
										296602
									],
									[
										296776,
										296783
									],
									[
										296932,
										296939
									],
									[
										297106,
										297113
									],
									[
										297329,
										297336
									],
									[
										297510,
										297517
									],
									[
										297706,
										297713
									],
									[
										297857,
										297864
									],
									[
										298147,
										298154
									],
									[
										298189,
										298196
									],
									[
										298493,
										298500
									],
									[
										298661,
										298668
									],
									[
										298838,
										298845
									],
									[
										299058,
										299065
									],
									[
										299168,
										299175
									],
									[
										299321,
										299328
									],
									[
										299528,
										299535
									],
									[
										299747,
										299754
									],
									[
										299984,
										299991
									],
									[
										300235,
										300242
									],
									[
										300375,
										300382
									],
									[
										300770,
										300777
									],
									[
										301022,
										301029
									],
									[
										301383,
										301390
									],
									[
										301424,
										301431
									],
									[
										301447,
										301454
									],
									[
										301486,
										301493
									],
									[
										301512,
										301519
									],
									[
										301650,
										301657
									],
									[
										301829,
										301836
									],
									[
										301870,
										301877
									],
									[
										301893,
										301900
									],
									[
										301932,
										301939
									],
									[
										301958,
										301965
									],
									[
										302100,
										302107
									],
									[
										302441,
										302448
									],
									[
										302481,
										302488
									],
									[
										302504,
										302511
									],
									[
										302542,
										302549
									],
									[
										302568,
										302575
									],
									[
										302600,
										302607
									],
									[
										302765,
										302772
									],
									[
										302815,
										302822
									],
									[
										303215,
										303222
									],
									[
										303437,
										303444
									],
									[
										303488,
										303495
									],
									[
										303919,
										303926
									],
									[
										304090,
										304097
									],
									[
										304300,
										304307
									],
									[
										304495,
										304502
									],
									[
										304649,
										304656
									],
									[
										304869,
										304876
									],
									[
										305079,
										305086
									],
									[
										305280,
										305287
									],
									[
										305389,
										305396
									],
									[
										305542,
										305549
									],
									[
										305715,
										305722
									],
									[
										306008,
										306015
									],
									[
										306061,
										306068
									],
									[
										306307,
										306314
									],
									[
										306640,
										306647
									],
									[
										306709,
										306716
									],
									[
										306979,
										306986
									],
									[
										307439,
										307446
									],
									[
										307976,
										307983
									],
									[
										308364,
										308371
									],
									[
										308550,
										308557
									],
									[
										308718,
										308725
									],
									[
										308904,
										308911
									],
									[
										309085,
										309092
									],
									[
										309266,
										309273
									],
									[
										309452,
										309459
									],
									[
										309633,
										309640
									],
									[
										309819,
										309826
									],
									[
										310005,
										310012
									],
									[
										310186,
										310193
									],
									[
										310367,
										310374
									],
									[
										310553,
										310560
									],
									[
										310734,
										310741
									],
									[
										310920,
										310927
									],
									[
										311106,
										311113
									],
									[
										311287,
										311294
									],
									[
										311473,
										311480
									],
									[
										311659,
										311666
									],
									[
										311845,
										311852
									],
									[
										312026,
										312033
									],
									[
										312212,
										312219
									],
									[
										312394,
										312401
									],
									[
										312576,
										312583
									],
									[
										312762,
										312769
									],
									[
										312944,
										312951
									],
									[
										313130,
										313137
									],
									[
										313312,
										313319
									],
									[
										313494,
										313501
									],
									[
										313680,
										313687
									],
									[
										313862,
										313869
									],
									[
										314048,
										314055
									],
									[
										314229,
										314236
									],
									[
										314391,
										314398
									],
									[
										314578,
										314585
									],
									[
										314780,
										314787
									],
									[
										315001,
										315008
									],
									[
										315750,
										315757
									],
									[
										316127,
										316134
									],
									[
										316467,
										316474
									],
									[
										316779,
										316786
									],
									[
										317097,
										317104
									],
									[
										317491,
										317498
									],
									[
										318029,
										318036
									],
									[
										318267,
										318274
									],
									[
										318530,
										318537
									],
									[
										318857,
										318864
									],
									[
										319067,
										319074
									],
									[
										319184,
										319191
									],
									[
										319222,
										319229
									],
									[
										319314,
										319321
									],
									[
										319370,
										319377
									],
									[
										319595,
										319602
									],
									[
										319774,
										319781
									],
									[
										319833,
										319840
									],
									[
										319855,
										319862
									],
									[
										320058,
										320065
									],
									[
										320211,
										320218
									],
									[
										320495,
										320502
									],
									[
										320808,
										320815
									],
									[
										321033,
										321040
									],
									[
										321240,
										321247
									],
									[
										321952,
										321959
									],
									[
										322136,
										322143
									],
									[
										322200,
										322207
									],
									[
										322282,
										322289
									],
									[
										322430,
										322437
									],
									[
										322565,
										322572
									],
									[
										322713,
										322720
									],
									[
										322986,
										322993
									],
									[
										323183,
										323190
									],
									[
										323263,
										323270
									],
									[
										323505,
										323512
									],
									[
										323802,
										323809
									],
									[
										324640,
										324647
									],
									[
										324954,
										324961
									],
									[
										325784,
										325791
									],
									[
										325996,
										326003
									],
									[
										326137,
										326144
									],
									[
										326282,
										326289
									],
									[
										326782,
										326789
									],
									[
										326860,
										326867
									],
									[
										327124,
										327131
									],
									[
										327192,
										327199
									],
									[
										327220,
										327227
									],
									[
										327388,
										327395
									],
									[
										327451,
										327458
									],
									[
										327633,
										327640
									],
									[
										327692,
										327699
									],
									[
										327865,
										327872
									],
									[
										327908,
										327915
									],
									[
										328065,
										328072
									],
									[
										328108,
										328115
									],
									[
										328283,
										328290
									],
									[
										328470,
										328477
									],
									[
										328637,
										328644
									],
									[
										328875,
										328882
									],
									[
										329088,
										329095
									],
									[
										329234,
										329241
									],
									[
										329569,
										329576
									],
									[
										329826,
										329833
									],
									[
										329915,
										329922
									],
									[
										330069,
										330076
									],
									[
										330211,
										330218
									],
									[
										330400,
										330407
									],
									[
										330509,
										330516
									],
									[
										330609,
										330616
									],
									[
										330787,
										330794
									],
									[
										330987,
										330994
									],
									[
										331246,
										331253
									],
									[
										331529,
										331536
									],
									[
										331853,
										331860
									],
									[
										331948,
										331955
									],
									[
										332141,
										332148
									],
									[
										332400,
										332407
									],
									[
										332471,
										332478
									],
									[
										332636,
										332643
									],
									[
										332733,
										332740
									],
									[
										332975,
										332982
									],
									[
										333343,
										333350
									],
									[
										333776,
										333783
									],
									[
										334224,
										334231
									],
									[
										334550,
										334557
									],
									[
										334740,
										334747
									],
									[
										334803,
										334810
									],
									[
										334941,
										334948
									],
									[
										335044,
										335051
									],
									[
										335334,
										335341
									],
									[
										335459,
										335466
									],
									[
										335541,
										335548
									],
									[
										335605,
										335612
									],
									[
										335913,
										335920
									],
									[
										336126,
										336133
									],
									[
										336267,
										336274
									],
									[
										336494,
										336501
									],
									[
										336796,
										336803
									],
									[
										337105,
										337112
									],
									[
										337254,
										337261
									],
									[
										337471,
										337478
									],
									[
										337717,
										337724
									],
									[
										338056,
										338063
									],
									[
										338234,
										338241
									],
									[
										338344,
										338351
									],
									[
										338531,
										338538
									],
									[
										338728,
										338735
									],
									[
										338922,
										338929
									],
									[
										339145,
										339152
									],
									[
										339364,
										339371
									],
									[
										339538,
										339545
									],
									[
										339712,
										339719
									],
									[
										339978,
										339985
									],
									[
										340480,
										340487
									],
									[
										340646,
										340653
									],
									[
										340755,
										340762
									],
									[
										340879,
										340886
									],
									[
										340983,
										340990
									],
									[
										341107,
										341114
									],
									[
										341218,
										341225
									],
									[
										341325,
										341332
									],
									[
										341525,
										341532
									],
									[
										341557,
										341564
									],
									[
										341747,
										341754
									],
									[
										341968,
										341975
									],
									[
										342089,
										342096
									],
									[
										342243,
										342250
									],
									[
										342388,
										342395
									],
									[
										342685,
										342692
									],
									[
										342794,
										342801
									],
									[
										343050,
										343057
									],
									[
										343199,
										343206
									],
									[
										343472,
										343479
									],
									[
										343835,
										343842
									],
									[
										344089,
										344096
									],
									[
										344195,
										344202
									],
									[
										344379,
										344386
									],
									[
										344573,
										344580
									],
									[
										344794,
										344801
									],
									[
										345070,
										345077
									],
									[
										345212,
										345219
									],
									[
										345433,
										345440
									],
									[
										345477,
										345484
									],
									[
										345595,
										345602
									],
									[
										345642,
										345649
									],
									[
										345749,
										345756
									],
									[
										345949,
										345956
									],
									[
										346095,
										346102
									],
									[
										346177,
										346184
									],
									[
										346314,
										346321
									],
									[
										346482,
										346489
									],
									[
										346651,
										346658
									],
									[
										346837,
										346844
									],
									[
										347039,
										347046
									],
									[
										347236,
										347243
									],
									[
										347429,
										347436
									],
									[
										347667,
										347674
									],
									[
										347825,
										347832
									],
									[
										347970,
										347977
									],
									[
										348014,
										348021
									],
									[
										348160,
										348167
									],
									[
										348426,
										348433
									],
									[
										348733,
										348740
									],
									[
										349002,
										349009
									],
									[
										349228,
										349235
									],
									[
										349415,
										349422
									],
									[
										349627,
										349634
									],
									[
										349845,
										349852
									],
									[
										350123,
										350130
									],
									[
										350392,
										350399
									],
									[
										350554,
										350561
									],
									[
										350577,
										350584
									],
									[
										350600,
										350607
									],
									[
										350675,
										350682
									],
									[
										350703,
										350710
									],
									[
										350975,
										350982
									],
									[
										351230,
										351237
									],
									[
										351398,
										351405
									],
									[
										351682,
										351689
									],
									[
										351834,
										351841
									],
									[
										351857,
										351864
									],
									[
										351880,
										351887
									],
									[
										352164,
										352171
									],
									[
										352294,
										352301
									],
									[
										352855,
										352862
									],
									[
										353880,
										353887
									],
									[
										354025,
										354032
									],
									[
										354326,
										354333
									],
									[
										354479,
										354486
									],
									[
										354774,
										354781
									],
									[
										355109,
										355116
									],
									[
										355350,
										355357
									],
									[
										355568,
										355575
									],
									[
										356277,
										356284
									],
									[
										356462,
										356469
									],
									[
										356526,
										356533
									],
									[
										356608,
										356615
									],
									[
										356756,
										356763
									],
									[
										356891,
										356898
									],
									[
										357078,
										357085
									],
									[
										357275,
										357282
									],
									[
										357355,
										357362
									],
									[
										357597,
										357604
									],
									[
										357894,
										357901
									],
									[
										358118,
										358125
									],
									[
										358479,
										358486
									],
									[
										358558,
										358565
									],
									[
										358939,
										358946
									],
									[
										359176,
										359183
									],
									[
										359335,
										359342
									],
									[
										359511,
										359518
									],
									[
										359556,
										359563
									],
									[
										359712,
										359719
									],
									[
										360216,
										360223
									],
									[
										360497,
										360504
									],
									[
										360871,
										360878
									],
									[
										361181,
										361188
									],
									[
										361503,
										361510
									],
									[
										361697,
										361704
									],
									[
										361889,
										361896
									],
									[
										362160,
										362167
									],
									[
										362284,
										362291
									],
									[
										362556,
										362563
									],
									[
										362846,
										362853
									],
									[
										363077,
										363084
									],
									[
										363285,
										363292
									],
									[
										363543,
										363550
									],
									[
										363759,
										363766
									],
									[
										364062,
										364069
									],
									[
										364326,
										364333
									],
									[
										364680,
										364687
									],
									[
										364904,
										364911
									],
									[
										365137,
										365144
									],
									[
										365354,
										365361
									],
									[
										365662,
										365669
									],
									[
										365907,
										365914
									],
									[
										366172,
										366179
									],
									[
										366418,
										366425
									],
									[
										366603,
										366610
									],
									[
										366834,
										366841
									],
									[
										367145,
										367152
									],
									[
										367396,
										367403
									],
									[
										367615,
										367622
									],
									[
										367829,
										367836
									],
									[
										368051,
										368058
									],
									[
										368267,
										368274
									],
									[
										368481,
										368488
									],
									[
										368715,
										368722
									],
									[
										369010,
										369017
									],
									[
										369231,
										369238
									],
									[
										369421,
										369428
									],
									[
										369648,
										369655
									],
									[
										369873,
										369880
									],
									[
										370087,
										370094
									],
									[
										370313,
										370320
									],
									[
										370594,
										370601
									],
									[
										370981,
										370988
									],
									[
										371233,
										371240
									],
									[
										371357,
										371364
									],
									[
										371614,
										371621
									],
									[
										371850,
										371857
									],
									[
										372072,
										372079
									],
									[
										372289,
										372296
									],
									[
										372504,
										372511
									],
									[
										372815,
										372822
									],
									[
										373060,
										373067
									],
									[
										373246,
										373253
									],
									[
										373480,
										373487
									],
									[
										373791,
										373798
									],
									[
										374041,
										374048
									],
									[
										374259,
										374266
									],
									[
										374480,
										374487
									],
									[
										374725,
										374732
									],
									[
										375044,
										375051
									],
									[
										375281,
										375288
									],
									[
										375500,
										375507
									],
									[
										375697,
										375704
									],
									[
										375826,
										375833
									],
									[
										375848,
										375855
									],
									[
										375881,
										375888
									],
									[
										376050,
										376057
									],
									[
										376106,
										376113
									],
									[
										376138,
										376145
									],
									[
										376247,
										376254
									],
									[
										376352,
										376359
									],
									[
										376457,
										376464
									],
									[
										376560,
										376567
									],
									[
										376822,
										376829
									],
									[
										376953,
										376960
									],
									[
										377045,
										377052
									],
									[
										377228,
										377235
									],
									[
										377357,
										377364
									],
									[
										377466,
										377473
									],
									[
										377629,
										377636
									],
									[
										377786,
										377793
									],
									[
										377850,
										377857
									],
									[
										377932,
										377939
									],
									[
										378080,
										378087
									],
									[
										378200,
										378207
									],
									[
										378324,
										378331
									],
									[
										378493,
										378500
									],
									[
										378584,
										378591
									],
									[
										378712,
										378719
									],
									[
										378819,
										378826
									],
									[
										379019,
										379026
									],
									[
										379051,
										379058
									],
									[
										379241,
										379248
									],
									[
										379422,
										379429
									],
									[
										379486,
										379493
									],
									[
										379546,
										379553
									],
									[
										379741,
										379748
									],
									[
										379880,
										379887
									],
									[
										380034,
										380041
									],
									[
										380179,
										380186
									],
									[
										380474,
										380481
									],
									[
										380648,
										380655
									],
									[
										380689,
										380696
									],
									[
										380834,
										380841
									],
									[
										380979,
										380986
									],
									[
										381167,
										381174
									],
									[
										381318,
										381325
									],
									[
										381372,
										381379
									],
									[
										381437,
										381444
									],
									[
										381588,
										381595
									],
									[
										381634,
										381641
									],
									[
										381792,
										381799
									],
									[
										381838,
										381845
									],
									[
										381956,
										381963
									],
									[
										382080,
										382087
									],
									[
										382186,
										382193
									],
									[
										382333,
										382340
									],
									[
										382384,
										382391
									],
									[
										382485,
										382492
									],
									[
										382586,
										382593
									],
									[
										382659,
										382666
									],
									[
										382863,
										382870
									],
									[
										383089,
										383096
									],
									[
										383213,
										383220
									],
									[
										383640,
										383647
									],
									[
										383780,
										383787
									],
									[
										384210,
										384217
									],
									[
										384278,
										384285
									],
									[
										384548,
										384555
									],
									[
										384638,
										384645
									],
									[
										384755,
										384762
									],
									[
										384833,
										384840
									],
									[
										384872,
										384879
									],
									[
										384886,
										384893
									],
									[
										385136,
										385143
									],
									[
										385317,
										385324
									],
									[
										385426,
										385433
									],
									[
										385550,
										385557
									],
									[
										385654,
										385661
									],
									[
										385778,
										385785
									],
									[
										385889,
										385896
									],
									[
										385996,
										386003
									],
									[
										386196,
										386203
									],
									[
										386228,
										386235
									],
									[
										386418,
										386425
									],
									[
										386639,
										386646
									],
									[
										386773,
										386780
									],
									[
										386927,
										386934
									],
									[
										387072,
										387079
									],
									[
										387426,
										387433
									],
									[
										388191,
										388198
									],
									[
										392226,
										392233
									],
									[
										392335,
										392342
									],
									[
										392498,
										392505
									],
									[
										392607,
										392614
									],
									[
										392820,
										392827
									],
									[
										392864,
										392871
									],
									[
										392982,
										392989
									],
									[
										393029,
										393036
									],
									[
										393136,
										393143
									],
									[
										393352,
										393359
									],
									[
										393683,
										393690
									],
									[
										393735,
										393742
									],
									[
										393954,
										393961
									],
									[
										394099,
										394106
									],
									[
										394153,
										394160
									],
									[
										394328,
										394335
									],
									[
										394384,
										394391
									],
									[
										394441,
										394448
									],
									[
										394499,
										394506
									],
									[
										394614,
										394621
									],
									[
										394925,
										394932
									],
									[
										394978,
										394985
									],
									[
										395027,
										395034
									],
									[
										395279,
										395286
									],
									[
										395562,
										395569
									],
									[
										395713,
										395720
									],
									[
										395864,
										395871
									],
									[
										396015,
										396022
									],
									[
										396166,
										396173
									],
									[
										396317,
										396324
									],
									[
										396468,
										396475
									],
									[
										396640,
										396647
									],
									[
										396823,
										396830
									],
									[
										397017,
										397024
									],
									[
										397187,
										397194
									],
									[
										397388,
										397395
									],
									[
										397526,
										397533
									],
									[
										397676,
										397683
									],
									[
										397915,
										397922
									],
									[
										398144,
										398151
									],
									[
										398327,
										398334
									],
									[
										398400,
										398407
									],
									[
										398625,
										398632
									],
									[
										398846,
										398853
									],
									[
										399048,
										399055
									],
									[
										399286,
										399293
									],
									[
										399500,
										399507
									],
									[
										399739,
										399746
									],
									[
										399968,
										399975
									],
									[
										400151,
										400158
									],
									[
										400224,
										400231
									],
									[
										400450,
										400457
									],
									[
										400688,
										400695
									],
									[
										400890,
										400897
									],
									[
										401128,
										401135
									],
									[
										401343,
										401350
									],
									[
										401582,
										401589
									],
									[
										401811,
										401818
									],
									[
										401994,
										402001
									],
									[
										402067,
										402074
									],
									[
										402278,
										402285
									],
									[
										402480,
										402487
									],
									[
										402718,
										402725
									],
									[
										402938,
										402945
									],
									[
										403177,
										403184
									],
									[
										403406,
										403413
									],
									[
										403589,
										403596
									],
									[
										403662,
										403669
									],
									[
										403887,
										403894
									],
									[
										404108,
										404115
									],
									[
										404310,
										404317
									],
									[
										404548,
										404555
									],
									[
										404726,
										404733
									],
									[
										404957,
										404964
									],
									[
										405379,
										405386
									],
									[
										405574,
										405581
									],
									[
										405629,
										405636
									],
									[
										405797,
										405804
									],
									[
										405961,
										405968
									],
									[
										406018,
										406025
									],
									[
										406175,
										406182
									],
									[
										406234,
										406241
									],
									[
										406320,
										406327
									],
									[
										406343,
										406350
									],
									[
										406371,
										406378
									],
									[
										406394,
										406401
									],
									[
										406624,
										406631
									],
									[
										406679,
										406686
									],
									[
										406701,
										406708
									],
									[
										406753,
										406760
									],
									[
										406935,
										406942
									],
									[
										406993,
										407000
									],
									[
										407046,
										407053
									],
									[
										407392,
										407399
									],
									[
										407448,
										407455
									],
									[
										407499,
										407506
									],
									[
										407833,
										407840
									],
									[
										408031,
										408038
									],
									[
										408430,
										408437
									],
									[
										408648,
										408655
									],
									[
										408719,
										408726
									],
									[
										408970,
										408977
									],
									[
										409043,
										409050
									],
									[
										409388,
										409395
									],
									[
										409459,
										409466
									],
									[
										409686,
										409693
									],
									[
										409842,
										409849
									],
									[
										409951,
										409958
									],
									[
										410005,
										410012
									],
									[
										410082,
										410089
									],
									[
										410136,
										410143
									],
									[
										410307,
										410314
									],
									[
										410360,
										410367
									],
									[
										410573,
										410580
									],
									[
										410734,
										410741
									],
									[
										411010,
										411017
									],
									[
										411050,
										411057
									],
									[
										411245,
										411252
									],
									[
										411367,
										411374
									],
									[
										411585,
										411592
									],
									[
										411730,
										411737
									],
									[
										411930,
										411937
									],
									[
										411968,
										411975
									],
									[
										412052,
										412059
									],
									[
										412151,
										412158
									],
									[
										412400,
										412407
									],
									[
										412521,
										412528
									],
									[
										412657,
										412664
									],
									[
										412757,
										412764
									],
									[
										412906,
										412913
									],
									[
										413037,
										413044
									],
									[
										413165,
										413172
									],
									[
										413274,
										413281
									],
									[
										413409,
										413416
									],
									[
										413570,
										413577
									],
									[
										413680,
										413687
									],
									[
										413815,
										413822
									],
									[
										413964,
										413971
									],
									[
										414183,
										414190
									],
									[
										414342,
										414349
									],
									[
										414737,
										414744
									],
									[
										414932,
										414939
									],
									[
										415163,
										415170
									],
									[
										415347,
										415354
									],
									[
										415637,
										415644
									],
									[
										415741,
										415748
									],
									[
										415862,
										415869
									],
									[
										415976,
										415983
									],
									[
										416080,
										416087
									],
									[
										416244,
										416251
									],
									[
										416347,
										416354
									],
									[
										416491,
										416498
									],
									[
										416625,
										416632
									],
									[
										416777,
										416784
									],
									[
										416940,
										416947
									],
									[
										417090,
										417097
									],
									[
										417270,
										417277
									],
									[
										417424,
										417431
									],
									[
										417585,
										417592
									],
									[
										417741,
										417748
									],
									[
										417865,
										417872
									],
									[
										418011,
										418018
									],
									[
										418120,
										418127
									],
									[
										418396,
										418403
									],
									[
										418507,
										418514
									],
									[
										418643,
										418650
									],
									[
										418748,
										418755
									],
									[
										418852,
										418859
									],
									[
										418997,
										419004
									],
									[
										419250,
										419257
									],
									[
										419388,
										419395
									],
									[
										419493,
										419500
									],
									[
										419680,
										419687
									],
									[
										419834,
										419841
									],
									[
										419997,
										420004
									],
									[
										420140,
										420147
									],
									[
										420253,
										420260
									],
									[
										420415,
										420422
									],
									[
										420518,
										420525
									],
									[
										420662,
										420669
									],
									[
										420778,
										420785
									],
									[
										420985,
										420992
									],
									[
										421103,
										421110
									],
									[
										421282,
										421289
									],
									[
										421431,
										421438
									],
									[
										421581,
										421588
									],
									[
										421722,
										421729
									],
									[
										422086,
										422093
									],
									[
										422279,
										422286
									],
									[
										422501,
										422508
									],
									[
										422667,
										422674
									],
									[
										422722,
										422729
									],
									[
										422890,
										422897
									],
									[
										423069,
										423076
									],
									[
										423230,
										423237
									],
									[
										423482,
										423496
									],
									[
										423733,
										423747
									],
									[
										423877,
										423891
									],
									[
										424058,
										424072
									],
									[
										424259,
										424273
									],
									[
										424341,
										424355
									],
									[
										424607,
										424621
									],
									[
										424726,
										424740
									],
									[
										424939,
										424953
									],
									[
										425060,
										425074
									],
									[
										425287,
										425301
									],
									[
										425407,
										425421
									],
									[
										425688,
										425702
									],
									[
										425811,
										425825
									],
									[
										426118,
										426132
									],
									[
										426278,
										426292
									],
									[
										426535,
										426549
									],
									[
										426629,
										426643
									],
									[
										426771,
										426785
									],
									[
										427022,
										427036
									],
									[
										427166,
										427180
									],
									[
										427323,
										427337
									],
									[
										427574,
										427588
									],
									[
										427718,
										427732
									],
									[
										428310,
										428324
									],
									[
										428691,
										428705
									],
									[
										428787,
										428801
									],
									[
										428991,
										429005
									],
									[
										429145,
										429159
									],
									[
										429262,
										429276
									],
									[
										429419,
										429433
									],
									[
										429621,
										429635
									],
									[
										429735,
										429749
									],
									[
										429842,
										429856
									],
									[
										430103,
										430117
									],
									[
										430221,
										430235
									],
									[
										430500,
										430514
									],
									[
										430585,
										430599
									],
									[
										430680,
										430694
									],
									[
										430789,
										430803
									],
									[
										431132,
										431146
									],
									[
										431351,
										431365
									],
									[
										431462,
										431476
									],
									[
										431554,
										431568
									],
									[
										431738,
										431752
									],
									[
										431827,
										431841
									],
									[
										431991,
										432005
									],
									[
										432109,
										432123
									],
									[
										432291,
										432305
									],
									[
										432532,
										432546
									],
									[
										432668,
										432682
									],
									[
										432928,
										432942
									],
									[
										433057,
										433071
									],
									[
										433298,
										433312
									],
									[
										433389,
										433403
									],
									[
										433596,
										433610
									],
									[
										433715,
										433729
									],
									[
										433968,
										433982
									],
									[
										434053,
										434067
									],
									[
										434148,
										434162
									],
									[
										434257,
										434271
									],
									[
										434528,
										434542
									],
									[
										434991,
										435005
									],
									[
										435250,
										435264
									],
									[
										435373,
										435387
									],
									[
										435442,
										435456
									],
									[
										435533,
										435547
									],
									[
										435685,
										435699
									],
									[
										435890,
										435904
									],
									[
										436036,
										436050
									],
									[
										436133,
										436147
									],
									[
										436347,
										436361
									],
									[
										436540,
										436554
									],
									[
										436861,
										436875
									],
									[
										437014,
										437028
									],
									[
										437334,
										437348
									],
									[
										437556,
										437570
									],
									[
										437810,
										437824
									],
									[
										437974,
										437988
									],
									[
										438316,
										438330
									],
									[
										438573,
										438587
									],
									[
										438938,
										438952
									],
									[
										439047,
										439061
									],
									[
										439243,
										439257
									],
									[
										439412,
										439426
									],
									[
										439614,
										439628
									],
									[
										439776,
										439790
									],
									[
										439957,
										439971
									],
									[
										440075,
										440089
									],
									[
										440257,
										440271
									],
									[
										440498,
										440512
									],
									[
										440634,
										440648
									],
									[
										440894,
										440908
									],
									[
										441023,
										441037
									],
									[
										441297,
										441311
									],
									[
										441409,
										441423
									],
									[
										441604,
										441618
									],
									[
										441718,
										441732
									],
									[
										441898,
										441912
									],
									[
										442013,
										442027
									],
									[
										442278,
										442292
									],
									[
										442396,
										442410
									],
									[
										442611,
										442625
									],
									[
										442802,
										442816
									],
									[
										442915,
										442929
									],
									[
										443085,
										443099
									],
									[
										443138,
										443152
									],
									[
										443306,
										443320
									],
									[
										443466,
										443480
									],
									[
										443684,
										443698
									],
									[
										443844,
										443858
									],
									[
										444073,
										444087
									],
									[
										444198,
										444212
									],
									[
										444426,
										444440
									],
									[
										444548,
										444562
									],
									[
										444764,
										444778
									],
									[
										444888,
										444902
									],
									[
										445177,
										445191
									],
									[
										445305,
										445319
									],
									[
										445544,
										445558
									],
									[
										445745,
										445759
									],
									[
										445827,
										445841
									],
									[
										446034,
										446048
									],
									[
										446084,
										446098
									],
									[
										446231,
										446245
									],
									[
										446395,
										446409
									],
									[
										446513,
										446527
									],
									[
										446677,
										446691
									],
									[
										446822,
										446836
									],
									[
										446980,
										446994
									],
									[
										447239,
										447253
									],
									[
										447348,
										447362
									],
									[
										447546,
										447560
									],
									[
										447667,
										447681
									],
									[
										447723,
										447737
									],
									[
										447951,
										447965
									],
									[
										448060,
										448074
									],
									[
										448318,
										448332
									],
									[
										448443,
										448457
									],
									[
										448652,
										448666
									],
									[
										448783,
										448797
									],
									[
										449005,
										449019
									],
									[
										449123,
										449137
									],
									[
										449305,
										449319
									],
									[
										449546,
										449560
									],
									[
										449682,
										449696
									],
									[
										449942,
										449956
									],
									[
										450071,
										450085
									],
									[
										450321,
										450335
									],
									[
										450439,
										450453
									],
									[
										450621,
										450635
									],
									[
										450862,
										450876
									],
									[
										450998,
										451012
									],
									[
										451258,
										451272
									],
									[
										451387,
										451401
									],
									[
										451606,
										451620
									],
									[
										451827,
										451841
									],
									[
										451943,
										451957
									],
									[
										451983,
										451997
									],
									[
										452061,
										452075
									],
									[
										452363,
										452377
									],
									[
										452575,
										452589
									],
									[
										452828,
										452842
									],
									[
										452967,
										452981
									],
									[
										453007,
										453021
									],
									[
										453085,
										453099
									],
									[
										453262,
										453276
									],
									[
										453497,
										453511
									],
									[
										453750,
										453764
									],
									[
										453893,
										453907
									],
									[
										454107,
										454121
									],
									[
										454353,
										454367
									],
									[
										454534,
										454548
									],
									[
										454725,
										454739
									],
									[
										454847,
										454861
									],
									[
										455050,
										455064
									],
									[
										455743,
										455757
									],
									[
										455863,
										455877
									],
									[
										456091,
										456105
									],
									[
										456210,
										456224
									],
									[
										456405,
										456419
									],
									[
										456658,
										456672
									],
									[
										456801,
										456815
									],
									[
										457015,
										457029
									],
									[
										457261,
										457275
									],
									[
										457442,
										457456
									],
									[
										457633,
										457647
									],
									[
										457755,
										457769
									],
									[
										457957,
										457971
									],
									[
										458650,
										458664
									],
									[
										458770,
										458784
									],
									[
										458998,
										459012
									],
									[
										459117,
										459131
									],
									[
										459313,
										459327
									],
									[
										459566,
										459580
									],
									[
										459709,
										459723
									],
									[
										459923,
										459937
									],
									[
										460169,
										460183
									],
									[
										460350,
										460364
									],
									[
										460541,
										460555
									],
									[
										460663,
										460677
									],
									[
										460865,
										460879
									],
									[
										461558,
										461572
									],
									[
										461678,
										461692
									],
									[
										461906,
										461920
									],
									[
										462025,
										462039
									],
									[
										462226,
										462240
									],
									[
										462479,
										462493
									],
									[
										462622,
										462636
									],
									[
										462836,
										462850
									],
									[
										463082,
										463096
									],
									[
										463263,
										463277
									],
									[
										463454,
										463468
									],
									[
										463576,
										463590
									],
									[
										463778,
										463792
									],
									[
										464471,
										464485
									],
									[
										464591,
										464605
									],
									[
										464819,
										464833
									],
									[
										464938,
										464952
									],
									[
										465181,
										465195
									],
									[
										465300,
										465314
									],
									[
										465511,
										465525
									],
									[
										465558,
										465572
									],
									[
										465612,
										465626
									],
									[
										465793,
										465797
									],
									[
										465919,
										465923
									],
									[
										466086,
										466090
									],
									[
										466261,
										466265
									],
									[
										466408,
										466412
									],
									[
										466639,
										466643
									],
									[
										466858,
										466862
									],
									[
										467002,
										467006
									],
									[
										467016,
										467020
									],
									[
										467038,
										467042
									],
									[
										467101,
										467105
									],
									[
										467247,
										467251
									],
									[
										467466,
										467470
									],
									[
										467775,
										467779
									],
									[
										468118,
										468122
									],
									[
										468353,
										468357
									],
									[
										468637,
										468641
									],
									[
										468965,
										468969
									],
									[
										469197,
										469201
									],
									[
										469358,
										469362
									],
									[
										469616,
										469620
									],
									[
										469878,
										469882
									],
									[
										469997,
										470001
									],
									[
										470228,
										470232
									],
									[
										470399,
										470403
									],
									[
										470696,
										470700
									],
									[
										470895,
										470899
									],
									[
										471139,
										471143
									],
									[
										471320,
										471324
									],
									[
										471663,
										471667
									],
									[
										471951,
										471955
									],
									[
										472132,
										472136
									],
									[
										472473,
										472477
									],
									[
										472807,
										472811
									],
									[
										473020,
										473024
									],
									[
										473360,
										473364
									],
									[
										473622,
										473626
									],
									[
										473841,
										473845
									],
									[
										474065,
										474069
									],
									[
										474227,
										474231
									],
									[
										474416,
										474420
									],
									[
										474640,
										474644
									],
									[
										474728,
										474732
									],
									[
										474930,
										474934
									],
									[
										475150,
										475154
									],
									[
										475451,
										475455
									],
									[
										475651,
										475655
									],
									[
										475886,
										475890
									],
									[
										475925,
										475929
									],
									[
										476199,
										476203
									],
									[
										476339,
										476343
									],
									[
										476368,
										476372
									],
									[
										476397,
										476401
									],
									[
										476652,
										476656
									],
									[
										476781,
										476785
									],
									[
										477010,
										477014
									],
									[
										477318,
										477322
									],
									[
										477440,
										477444
									],
									[
										477472,
										477476
									],
									[
										477599,
										477603
									],
									[
										477624,
										477628
									],
									[
										477657,
										477661
									],
									[
										477982,
										477986
									],
									[
										478092,
										478096
									],
									[
										478229,
										478233
									],
									[
										478447,
										478451
									],
									[
										478650,
										478654
									],
									[
										478693,
										478697
									],
									[
										478854,
										478858
									],
									[
										479082,
										479086
									],
									[
										479282,
										479286
									],
									[
										479517,
										479521
									],
									[
										479556,
										479560
									],
									[
										479884,
										479888
									],
									[
										480023,
										480027
									],
									[
										480051,
										480055
									],
									[
										480080,
										480084
									],
									[
										480335,
										480339
									],
									[
										480463,
										480467
									],
									[
										480692,
										480696
									],
									[
										481001,
										481005
									],
									[
										481122,
										481126
									],
									[
										481154,
										481158
									],
									[
										481282,
										481286
									],
									[
										481307,
										481311
									],
									[
										481340,
										481344
									],
									[
										481568,
										481572
									],
									[
										481768,
										481772
									],
									[
										482003,
										482007
									],
									[
										482042,
										482046
									],
									[
										482316,
										482320
									],
									[
										482456,
										482460
									],
									[
										482485,
										482489
									],
									[
										482514,
										482518
									],
									[
										482769,
										482773
									],
									[
										482898,
										482902
									],
									[
										483127,
										483131
									],
									[
										483435,
										483439
									],
									[
										483557,
										483561
									],
									[
										483589,
										483593
									],
									[
										483716,
										483720
									],
									[
										483741,
										483745
									],
									[
										483774,
										483778
									],
									[
										483960,
										483964
									],
									[
										484160,
										484164
									],
									[
										484395,
										484399
									],
									[
										484434,
										484438
									],
									[
										484709,
										484713
									],
									[
										484848,
										484852
									],
									[
										484876,
										484880
									],
									[
										484905,
										484909
									],
									[
										485125,
										485129
									],
									[
										485253,
										485257
									],
									[
										485482,
										485486
									],
									[
										485791,
										485795
									],
									[
										485912,
										485916
									],
									[
										485944,
										485948
									],
									[
										486072,
										486076
									],
									[
										486097,
										486101
									],
									[
										486130,
										486134
									],
									[
										486273,
										486277
									],
									[
										486446,
										486450
									],
									[
										486572,
										486576
									],
									[
										486727,
										486731
									],
									[
										486853,
										486857
									],
									[
										487022,
										487026
									],
									[
										487189,
										487193
									],
									[
										487468,
										487472
									],
									[
										487725,
										487729
									],
									[
										487982,
										487986
									],
									[
										488239,
										488243
									],
									[
										488496,
										488500
									],
									[
										488753,
										488757
									],
									[
										489010,
										489014
									],
									[
										489267,
										489271
									],
									[
										489522,
										489526
									],
									[
										489779,
										489783
									],
									[
										490029,
										490033
									],
									[
										490281,
										490285
									],
									[
										490536,
										490540
									],
									[
										490789,
										490793
									],
									[
										491046,
										491050
									],
									[
										491301,
										491305
									],
									[
										491551,
										491555
									],
									[
										491844,
										491848
									],
									[
										492102,
										492106
									],
									[
										492361,
										492365
									],
									[
										492619,
										492623
									],
									[
										492881,
										492885
									],
									[
										493140,
										493144
									],
									[
										493402,
										493406
									],
									[
										493664,
										493668
									],
									[
										493922,
										493926
									],
									[
										494182,
										494186
									],
									[
										494438,
										494442
									],
									[
										494693,
										494697
									],
									[
										494951,
										494955
									],
									[
										495207,
										495211
									],
									[
										495467,
										495471
									],
									[
										495725,
										495729
									],
									[
										495982,
										495986
									],
									[
										498632,
										498636
									],
									[
										498745,
										498749
									],
									[
										499881,
										499885
									],
									[
										500708,
										500712
									],
									[
										501576,
										501580
									],
									[
										502471,
										502475
									],
									[
										503368,
										503372
									],
									[
										504190,
										504194
									],
									[
										505006,
										505010
									],
									[
										505732,
										505736
									],
									[
										506220,
										506224
									],
									[
										506334,
										506338
									],
									[
										506357,
										506361
									],
									[
										506518,
										506522
									],
									[
										506926,
										506930
									],
									[
										507069,
										507073
									],
									[
										507223,
										507227
									],
									[
										507441,
										507445
									],
									[
										507533,
										507537
									],
									[
										507545,
										507549
									],
									[
										507798,
										507802
									],
									[
										508066,
										508070
									],
									[
										508315,
										508319
									],
									[
										508566,
										508570
									],
									[
										508781,
										508785
									],
									[
										508965,
										508969
									],
									[
										509217,
										509221
									],
									[
										509417,
										509421
									],
									[
										509666,
										509670
									],
									[
										509814,
										509818
									],
									[
										510032,
										510036
									],
									[
										510408,
										510412
									],
									[
										510595,
										510599
									],
									[
										510804,
										510808
									],
									[
										510846,
										510850
									],
									[
										511003,
										511007
									],
									[
										511239,
										511243
									],
									[
										511474,
										511478
									],
									[
										511662,
										511666
									],
									[
										511710,
										511714
									],
									[
										511798,
										511802
									],
									[
										512112,
										512116
									],
									[
										512351,
										512355
									],
									[
										512548,
										512552
									],
									[
										512759,
										512763
									],
									[
										513021,
										513025
									],
									[
										513136,
										513140
									],
									[
										513286,
										513290
									],
									[
										513368,
										513372
									],
									[
										513750,
										513754
									],
									[
										514233,
										514237
									],
									[
										514377,
										514381
									],
									[
										514684,
										514688
									],
									[
										515167,
										515171
									],
									[
										515682,
										515686
									],
									[
										516162,
										516166
									],
									[
										516308,
										516312
									],
									[
										516603,
										516607
									],
									[
										517083,
										517087
									],
									[
										517512,
										517516
									],
									[
										517669,
										517673
									],
									[
										517824,
										517828
									],
									[
										517950,
										517954
									],
									[
										518072,
										518076
									],
									[
										518169,
										518173
									],
									[
										518342,
										518346
									],
									[
										518712,
										518716
									],
									[
										519031,
										519035
									],
									[
										519389,
										519393
									],
									[
										519708,
										519712
									],
									[
										520062,
										520066
									],
									[
										520381,
										520385
									],
									[
										520739,
										520743
									],
									[
										521058,
										521062
									],
									[
										521291,
										521295
									],
									[
										521507,
										521511
									],
									[
										521744,
										521748
									],
									[
										522000,
										522004
									],
									[
										522064,
										522068
									],
									[
										522229,
										522233
									],
									[
										522293,
										522297
									],
									[
										522463,
										522467
									],
									[
										522633,
										522637
									],
									[
										522944,
										522948
									],
									[
										523238,
										523242
									],
									[
										523394,
										523398
									],
									[
										523458,
										523462
									],
									[
										523610,
										523614
									],
									[
										523862,
										523866
									],
									[
										524087,
										524091
									],
									[
										524392,
										524396
									],
									[
										524599,
										524603
									],
									[
										524949,
										524953
									],
									[
										525384,
										525388
									],
									[
										525458,
										525462
									],
									[
										525661,
										525665
									],
									[
										525742,
										525746
									],
									[
										525935,
										525939
									],
									[
										526167,
										526171
									],
									[
										526389,
										526393
									],
									[
										526571,
										526575
									],
									[
										526605,
										526609
									],
									[
										526751,
										526755
									],
									[
										526833,
										526837
									],
									[
										526971,
										526975
									],
									[
										527095,
										527099
									],
									[
										527320,
										527324
									],
									[
										527404,
										527408
									],
									[
										527541,
										527545
									],
									[
										527765,
										527769
									],
									[
										527799,
										527803
									],
									[
										527950,
										527954
									],
									[
										528134,
										528138
									],
									[
										528255,
										528259
									],
									[
										528340,
										528344
									],
									[
										528445,
										528449
									],
									[
										528719,
										528723
									],
									[
										528745,
										528749
									],
									[
										528907,
										528911
									],
									[
										528960,
										528964
									],
									[
										529252,
										529256
									],
									[
										529273,
										529277
									],
									[
										529308,
										529312
									],
									[
										529392,
										529396
									],
									[
										529441,
										529445
									],
									[
										529571,
										529575
									],
									[
										529791,
										529795
									],
									[
										529927,
										529931
									],
									[
										530163,
										530167
									],
									[
										530441,
										530445
									],
									[
										530749,
										530753
									],
									[
										531144,
										531148
									],
									[
										531382,
										531386
									],
									[
										531535,
										531539
									],
									[
										531805,
										531809
									],
									[
										531988,
										531992
									],
									[
										532314,
										532318
									],
									[
										532587,
										532591
									],
									[
										532778,
										532782
									],
									[
										533011,
										533015
									],
									[
										533182,
										533186
									],
									[
										533461,
										533465
									],
									[
										533740,
										533744
									],
									[
										533877,
										533881
									],
									[
										534052,
										534056
									],
									[
										534279,
										534283
									],
									[
										534502,
										534506
									],
									[
										534667,
										534671
									],
									[
										534915,
										534919
									],
									[
										535171,
										535175
									],
									[
										535332,
										535336
									],
									[
										535527,
										535531
									],
									[
										535691,
										535695
									],
									[
										535894,
										535898
									],
									[
										536035,
										536039
									],
									[
										536210,
										536214
									],
									[
										536352,
										536356
									],
									[
										536681,
										536685
									],
									[
										536807,
										536811
									],
									[
										537105,
										537109
									],
									[
										537202,
										537206
									],
									[
										537214,
										537218
									],
									[
										546091,
										546095
									],
									[
										546961,
										546965
									],
									[
										547161,
										547165
									],
									[
										547396,
										547400
									],
									[
										547435,
										547439
									],
									[
										547710,
										547714
									],
									[
										547849,
										547853
									],
									[
										547877,
										547881
									],
									[
										547906,
										547910
									],
									[
										548126,
										548130
									],
									[
										548254,
										548258
									],
									[
										548483,
										548487
									],
									[
										548792,
										548796
									],
									[
										548913,
										548917
									],
									[
										548945,
										548949
									],
									[
										549073,
										549077
									],
									[
										549098,
										549102
									],
									[
										549131,
										549135
									],
									[
										549255,
										549259
									],
									[
										549502,
										549506
									],
									[
										549952,
										549956
									],
									[
										550188,
										550192
									],
									[
										550362,
										550366
									],
									[
										550532,
										550536
									],
									[
										551125,
										551129
									],
									[
										552772,
										552776
									],
									[
										552903,
										552907
									],
									[
										553080,
										553084
									],
									[
										553289,
										553293
									],
									[
										553425,
										553429
									],
									[
										553439,
										553443
									],
									[
										553461,
										553465
									],
									[
										553521,
										553525
									],
									[
										553655,
										553659
									],
									[
										553822,
										553826
									],
									[
										554012,
										554016
									],
									[
										554231,
										554235
									],
									[
										554450,
										554454
									],
									[
										554594,
										554598
									],
									[
										554608,
										554612
									],
									[
										554630,
										554634
									],
									[
										554693,
										554697
									],
									[
										554839,
										554843
									],
									[
										555058,
										555062
									],
									[
										555367,
										555371
									],
									[
										555710,
										555714
									],
									[
										555945,
										555949
									],
									[
										556229,
										556233
									],
									[
										556557,
										556561
									],
									[
										556789,
										556793
									],
									[
										556966,
										556970
									],
									[
										557068,
										557072
									],
									[
										557080,
										557084
									],
									[
										557226,
										557230
									]
								],
								"scope": ""
							}
						},
						"selection":
						[
							[
								466269,
								466269
							]
						],
						"settings":
						{
							"detect_indentation": false,
							"output_tag": 10,
							"result_base_dir": "",
							"result_file_regex": "^([A-Za-z\\\\/<].*):$",
							"result_line_regex": "^ +([0-9]+):",
							"scroll_past_end": true,
							"sorttabs_lastactivated": 1500492617.11,
							"syntax": "Packages/Default/Find Results.hidden-tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 231498.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "/E/Google Drive/Lich/scripts/drafix scripts/sloot.lic",
					"settings":
					{
						"buffer_size": 89877,
						"regions":
						{
						},
						"selection":
						[
							[
								42982,
								42982
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1499105582.59,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 13150.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "/E/Google Drive/Lich/scripts/ylandraJar.lic",
					"settings":
					{
						"buffer_size": 429,
						"regions":
						{
						},
						"selection":
						[
							[
								100,
								100
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1493591761.43,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "/E/Google Drive/Lich/scripts/idleonly.lic",
					"settings":
					{
						"buffer_size": 34,
						"regions":
						{
						},
						"selection":
						[
							[
								20,
								20
							]
						],
						"settings":
						{
							"auto_name": "while true",
							"sorttabs_lastactivated": 1493600564.86,
							"syntax": "Packages/Ruby/Ruby.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "/E/Google Drive/Lich/scripts/monitor.lic",
					"settings":
					{
						"buffer_size": 17495,
						"regions":
						{
						},
						"selection":
						[
							[
								1862,
								1862
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1498848291.85,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 539.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 14,
					"file": "/E/Google Drive/Lich/scripts/dusksell.lic",
					"settings":
					{
						"buffer_size": 344,
						"regions":
						{
						},
						"selection":
						[
							[
								344,
								344
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1497654368.34,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false,
							"word_wrap": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 15,
					"file": "/E/Google Drive/Lich/scripts/iSing.lic",
					"settings":
					{
						"buffer_size": 4332,
						"regions":
						{
						},
						"selection":
						[
							[
								3596,
								3562
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1497580822.15,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 1674.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 16,
					"file": "/E/Google Drive/Lich/scripts/mapmap.lic",
					"settings":
					{
						"buffer_size": 32287,
						"regions":
						{
						},
						"selection":
						[
							[
								6554,
								6554
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1499676572.13,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 2641.0,
						"zoom_level": 1.0
					},
					"type": "text"
				},
				{
					"buffer": 17,
					"file": "/E/Google Drive/Lich/scripts/map_mod.lic",
					"settings":
					{
						"buffer_size": 4138,
						"regions":
						{
						},
						"selection":
						[
							[
								1109,
								1109
							]
						],
						"settings":
						{
							"sorttabs_lastactivated": 1499671406.48,
							"syntax": "Packages/Ruby/Ruby.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 486.0,
						"zoom_level": 1.0
					},
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 0.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			],
			[
				1,
				0,
				2,
				1
			]
		],
		"cols":
		[
			0.0,
			0.686922481456,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.exec":
	{
		"height": 100.0
	},
	"output.find_results":
	{
		"height": 422.0
	},
	"output.git-commit":
	{
		"height": 100.0
	},
	"output.git-init":
	{
		"height": 100.0
	},
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"show_minimap": false,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 247.0,
	"status_bar_visible": true
}
